/*
 * AWS Amplify
 * Amplify enables developers to develop and deploy cloud-powered mobile and web apps. The Amplify Console provides a continuous delivery and hosting service for web applications. For more information, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify Console User Guide</a>. The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework.</a> 
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.CreateAppRequestAutoBranchCreationConfig;
import org.openapitools.client.model.CustomRule;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateAppRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T13:08:57.241962+05:30[Asia/Kolkata]", comments = "Generator version: 7.10.0")
public class CreateAppRequest {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nonnull
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_REPOSITORY = "repository";
  @SerializedName(SERIALIZED_NAME_REPOSITORY)
  @javax.annotation.Nullable
  private String repository;

  /**
   *  The platform for the Amplify app. For a static app, set the platform type to &lt;code&gt;WEB&lt;/code&gt;. For a dynamic server-side rendered (SSR) app, set the platform type to &lt;code&gt;WEB_COMPUTE&lt;/code&gt;. For an app requiring Amplify Hosting&#39;s original SSR support only, set the platform type to &lt;code&gt;WEB_DYNAMIC&lt;/code&gt;.
   */
  @JsonAdapter(PlatformEnum.Adapter.class)
  public enum PlatformEnum {
    WEB("WEB"),
    
    WEB_DYNAMIC("WEB_DYNAMIC"),
    
    WEB_COMPUTE("WEB_COMPUTE");

    private String value;

    PlatformEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PlatformEnum fromValue(String value) {
      for (PlatformEnum b : PlatformEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PlatformEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PlatformEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PlatformEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PlatformEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      PlatformEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PLATFORM = "platform";
  @SerializedName(SERIALIZED_NAME_PLATFORM)
  @javax.annotation.Nullable
  private PlatformEnum platform;

  public static final String SERIALIZED_NAME_IAM_SERVICE_ROLE_ARN = "iamServiceRoleArn";
  @SerializedName(SERIALIZED_NAME_IAM_SERVICE_ROLE_ARN)
  @javax.annotation.Nullable
  private String iamServiceRoleArn;

  public static final String SERIALIZED_NAME_OAUTH_TOKEN = "oauthToken";
  @SerializedName(SERIALIZED_NAME_OAUTH_TOKEN)
  @javax.annotation.Nullable
  private String oauthToken;

  public static final String SERIALIZED_NAME_ACCESS_TOKEN = "accessToken";
  @SerializedName(SERIALIZED_NAME_ACCESS_TOKEN)
  @javax.annotation.Nullable
  private String accessToken;

  public static final String SERIALIZED_NAME_ENVIRONMENT_VARIABLES = "environmentVariables";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_VARIABLES)
  @javax.annotation.Nullable
  private Map<String, String> environmentVariables = new HashMap<>();

  public static final String SERIALIZED_NAME_ENABLE_BRANCH_AUTO_BUILD = "enableBranchAutoBuild";
  @SerializedName(SERIALIZED_NAME_ENABLE_BRANCH_AUTO_BUILD)
  @javax.annotation.Nullable
  private Boolean enableBranchAutoBuild;

  public static final String SERIALIZED_NAME_ENABLE_BRANCH_AUTO_DELETION = "enableBranchAutoDeletion";
  @SerializedName(SERIALIZED_NAME_ENABLE_BRANCH_AUTO_DELETION)
  @javax.annotation.Nullable
  private Boolean enableBranchAutoDeletion;

  public static final String SERIALIZED_NAME_ENABLE_BASIC_AUTH = "enableBasicAuth";
  @SerializedName(SERIALIZED_NAME_ENABLE_BASIC_AUTH)
  @javax.annotation.Nullable
  private Boolean enableBasicAuth;

  public static final String SERIALIZED_NAME_BASIC_AUTH_CREDENTIALS = "basicAuthCredentials";
  @SerializedName(SERIALIZED_NAME_BASIC_AUTH_CREDENTIALS)
  @javax.annotation.Nullable
  private String basicAuthCredentials;

  public static final String SERIALIZED_NAME_CUSTOM_RULES = "customRules";
  @SerializedName(SERIALIZED_NAME_CUSTOM_RULES)
  @javax.annotation.Nullable
  private List<CustomRule> customRules = new ArrayList<>();

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  @javax.annotation.Nullable
  private Map<String, String> tags = new HashMap<>();

  public static final String SERIALIZED_NAME_BUILD_SPEC = "buildSpec";
  @SerializedName(SERIALIZED_NAME_BUILD_SPEC)
  @javax.annotation.Nullable
  private String buildSpec;

  public static final String SERIALIZED_NAME_CUSTOM_HEADERS = "customHeaders";
  @SerializedName(SERIALIZED_NAME_CUSTOM_HEADERS)
  @javax.annotation.Nullable
  private String customHeaders;

  public static final String SERIALIZED_NAME_ENABLE_AUTO_BRANCH_CREATION = "enableAutoBranchCreation";
  @SerializedName(SERIALIZED_NAME_ENABLE_AUTO_BRANCH_CREATION)
  @javax.annotation.Nullable
  private Boolean enableAutoBranchCreation;

  public static final String SERIALIZED_NAME_AUTO_BRANCH_CREATION_PATTERNS = "autoBranchCreationPatterns";
  @SerializedName(SERIALIZED_NAME_AUTO_BRANCH_CREATION_PATTERNS)
  @javax.annotation.Nullable
  private List<String> autoBranchCreationPatterns = new ArrayList<>();

  public static final String SERIALIZED_NAME_AUTO_BRANCH_CREATION_CONFIG = "autoBranchCreationConfig";
  @SerializedName(SERIALIZED_NAME_AUTO_BRANCH_CREATION_CONFIG)
  @javax.annotation.Nullable
  private CreateAppRequestAutoBranchCreationConfig autoBranchCreationConfig;

  public CreateAppRequest() {
  }

  public CreateAppRequest name(@javax.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   *  The name for an Amplify app. 
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nonnull String name) {
    this.name = name;
  }


  public CreateAppRequest description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   *  The description for an Amplify app. 
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public CreateAppRequest repository(@javax.annotation.Nullable String repository) {
    this.repository = repository;
    return this;
  }

  /**
   *  The repository for an Amplify app. 
   * @return repository
   */
  @javax.annotation.Nullable
  public String getRepository() {
    return repository;
  }

  public void setRepository(@javax.annotation.Nullable String repository) {
    this.repository = repository;
  }


  public CreateAppRequest platform(@javax.annotation.Nullable PlatformEnum platform) {
    this.platform = platform;
    return this;
  }

  /**
   *  The platform for the Amplify app. For a static app, set the platform type to &lt;code&gt;WEB&lt;/code&gt;. For a dynamic server-side rendered (SSR) app, set the platform type to &lt;code&gt;WEB_COMPUTE&lt;/code&gt;. For an app requiring Amplify Hosting&#39;s original SSR support only, set the platform type to &lt;code&gt;WEB_DYNAMIC&lt;/code&gt;.
   * @return platform
   */
  @javax.annotation.Nullable
  public PlatformEnum getPlatform() {
    return platform;
  }

  public void setPlatform(@javax.annotation.Nullable PlatformEnum platform) {
    this.platform = platform;
  }


  public CreateAppRequest iamServiceRoleArn(@javax.annotation.Nullable String iamServiceRoleArn) {
    this.iamServiceRoleArn = iamServiceRoleArn;
    return this;
  }

  /**
   *  The AWS Identity and Access Management (IAM) service role for an Amplify app. 
   * @return iamServiceRoleArn
   */
  @javax.annotation.Nullable
  public String getIamServiceRoleArn() {
    return iamServiceRoleArn;
  }

  public void setIamServiceRoleArn(@javax.annotation.Nullable String iamServiceRoleArn) {
    this.iamServiceRoleArn = iamServiceRoleArn;
  }


  public CreateAppRequest oauthToken(@javax.annotation.Nullable String oauthToken) {
    this.oauthToken = oauthToken;
    return this;
  }

  /**
   * &lt;p&gt;The OAuth token for a third-party source control system for an Amplify app. The OAuth token is used to create a webhook and a read-only deploy key using SSH cloning. The OAuth token is not stored.&lt;/p&gt; &lt;p&gt;Use &lt;code&gt;oauthToken&lt;/code&gt; for repository providers other than GitHub, such as Bitbucket or CodeCommit. To authorize access to GitHub as your repository provider, use &lt;code&gt;accessToken&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;You must specify either &lt;code&gt;oauthToken&lt;/code&gt; or &lt;code&gt;accessToken&lt;/code&gt; when you create a new app.&lt;/p&gt; &lt;p&gt;Existing Amplify apps deployed from a GitHub repository using OAuth continue to work with CI/CD. However, we strongly recommend that you migrate these apps to use the GitHub App. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/amplify/latest/UserGuide/setting-up-GitHub-access.html#migrating-to-github-app-auth\&quot;&gt;Migrating an existing OAuth app to the Amplify GitHub App&lt;/a&gt; in the &lt;i&gt;Amplify User Guide&lt;/i&gt; .&lt;/p&gt;
   * @return oauthToken
   */
  @javax.annotation.Nullable
  public String getOauthToken() {
    return oauthToken;
  }

  public void setOauthToken(@javax.annotation.Nullable String oauthToken) {
    this.oauthToken = oauthToken;
  }


  public CreateAppRequest accessToken(@javax.annotation.Nullable String accessToken) {
    this.accessToken = accessToken;
    return this;
  }

  /**
   * &lt;p&gt;The personal access token for a GitHub repository for an Amplify app. The personal access token is used to authorize access to a GitHub repository using the Amplify GitHub App. The token is not stored.&lt;/p&gt; &lt;p&gt;Use &lt;code&gt;accessToken&lt;/code&gt; for GitHub repositories only. To authorize access to a repository provider such as Bitbucket or CodeCommit, use &lt;code&gt;oauthToken&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;You must specify either &lt;code&gt;accessToken&lt;/code&gt; or &lt;code&gt;oauthToken&lt;/code&gt; when you create a new app.&lt;/p&gt; &lt;p&gt;Existing Amplify apps deployed from a GitHub repository using OAuth continue to work with CI/CD. However, we strongly recommend that you migrate these apps to use the GitHub App. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/amplify/latest/UserGuide/setting-up-GitHub-access.html#migrating-to-github-app-auth\&quot;&gt;Migrating an existing OAuth app to the Amplify GitHub App&lt;/a&gt; in the &lt;i&gt;Amplify User Guide&lt;/i&gt; .&lt;/p&gt;
   * @return accessToken
   */
  @javax.annotation.Nullable
  public String getAccessToken() {
    return accessToken;
  }

  public void setAccessToken(@javax.annotation.Nullable String accessToken) {
    this.accessToken = accessToken;
  }


  public CreateAppRequest environmentVariables(@javax.annotation.Nullable Map<String, String> environmentVariables) {
    this.environmentVariables = environmentVariables;
    return this;
  }

  public CreateAppRequest putEnvironmentVariablesItem(String key, String environmentVariablesItem) {
    if (this.environmentVariables == null) {
      this.environmentVariables = new HashMap<>();
    }
    this.environmentVariables.put(key, environmentVariablesItem);
    return this;
  }

  /**
   *  The environment variables map for an Amplify app. 
   * @return environmentVariables
   */
  @javax.annotation.Nullable
  public Map<String, String> getEnvironmentVariables() {
    return environmentVariables;
  }

  public void setEnvironmentVariables(@javax.annotation.Nullable Map<String, String> environmentVariables) {
    this.environmentVariables = environmentVariables;
  }


  public CreateAppRequest enableBranchAutoBuild(@javax.annotation.Nullable Boolean enableBranchAutoBuild) {
    this.enableBranchAutoBuild = enableBranchAutoBuild;
    return this;
  }

  /**
   *  Enables the auto building of branches for an Amplify app. 
   * @return enableBranchAutoBuild
   */
  @javax.annotation.Nullable
  public Boolean getEnableBranchAutoBuild() {
    return enableBranchAutoBuild;
  }

  public void setEnableBranchAutoBuild(@javax.annotation.Nullable Boolean enableBranchAutoBuild) {
    this.enableBranchAutoBuild = enableBranchAutoBuild;
  }


  public CreateAppRequest enableBranchAutoDeletion(@javax.annotation.Nullable Boolean enableBranchAutoDeletion) {
    this.enableBranchAutoDeletion = enableBranchAutoDeletion;
    return this;
  }

  /**
   *  Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository. 
   * @return enableBranchAutoDeletion
   */
  @javax.annotation.Nullable
  public Boolean getEnableBranchAutoDeletion() {
    return enableBranchAutoDeletion;
  }

  public void setEnableBranchAutoDeletion(@javax.annotation.Nullable Boolean enableBranchAutoDeletion) {
    this.enableBranchAutoDeletion = enableBranchAutoDeletion;
  }


  public CreateAppRequest enableBasicAuth(@javax.annotation.Nullable Boolean enableBasicAuth) {
    this.enableBasicAuth = enableBasicAuth;
    return this;
  }

  /**
   *  Enables basic authorization for an Amplify app. This will apply to all branches that are part of this app. 
   * @return enableBasicAuth
   */
  @javax.annotation.Nullable
  public Boolean getEnableBasicAuth() {
    return enableBasicAuth;
  }

  public void setEnableBasicAuth(@javax.annotation.Nullable Boolean enableBasicAuth) {
    this.enableBasicAuth = enableBasicAuth;
  }


  public CreateAppRequest basicAuthCredentials(@javax.annotation.Nullable String basicAuthCredentials) {
    this.basicAuthCredentials = basicAuthCredentials;
    return this;
  }

  /**
   *  The credentials for basic authorization for an Amplify app. You must base64-encode the authorization credentials and provide them in the format &lt;code&gt;user:password&lt;/code&gt;.
   * @return basicAuthCredentials
   */
  @javax.annotation.Nullable
  public String getBasicAuthCredentials() {
    return basicAuthCredentials;
  }

  public void setBasicAuthCredentials(@javax.annotation.Nullable String basicAuthCredentials) {
    this.basicAuthCredentials = basicAuthCredentials;
  }


  public CreateAppRequest customRules(@javax.annotation.Nullable List<CustomRule> customRules) {
    this.customRules = customRules;
    return this;
  }

  public CreateAppRequest addCustomRulesItem(CustomRule customRulesItem) {
    if (this.customRules == null) {
      this.customRules = new ArrayList<>();
    }
    this.customRules.add(customRulesItem);
    return this;
  }

  /**
   *  The custom rewrite and redirect rules for an Amplify app. 
   * @return customRules
   */
  @javax.annotation.Nullable
  public List<CustomRule> getCustomRules() {
    return customRules;
  }

  public void setCustomRules(@javax.annotation.Nullable List<CustomRule> customRules) {
    this.customRules = customRules;
  }


  public CreateAppRequest tags(@javax.annotation.Nullable Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public CreateAppRequest putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

  /**
   *  The tag for an Amplify app. 
   * @return tags
   */
  @javax.annotation.Nullable
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(@javax.annotation.Nullable Map<String, String> tags) {
    this.tags = tags;
  }


  public CreateAppRequest buildSpec(@javax.annotation.Nullable String buildSpec) {
    this.buildSpec = buildSpec;
    return this;
  }

  /**
   *  The build specification (build spec) file for an Amplify app build. 
   * @return buildSpec
   */
  @javax.annotation.Nullable
  public String getBuildSpec() {
    return buildSpec;
  }

  public void setBuildSpec(@javax.annotation.Nullable String buildSpec) {
    this.buildSpec = buildSpec;
  }


  public CreateAppRequest customHeaders(@javax.annotation.Nullable String customHeaders) {
    this.customHeaders = customHeaders;
    return this;
  }

  /**
   * The custom HTTP headers for an Amplify app.
   * @return customHeaders
   */
  @javax.annotation.Nullable
  public String getCustomHeaders() {
    return customHeaders;
  }

  public void setCustomHeaders(@javax.annotation.Nullable String customHeaders) {
    this.customHeaders = customHeaders;
  }


  public CreateAppRequest enableAutoBranchCreation(@javax.annotation.Nullable Boolean enableAutoBranchCreation) {
    this.enableAutoBranchCreation = enableAutoBranchCreation;
    return this;
  }

  /**
   *  Enables automated branch creation for an Amplify app. 
   * @return enableAutoBranchCreation
   */
  @javax.annotation.Nullable
  public Boolean getEnableAutoBranchCreation() {
    return enableAutoBranchCreation;
  }

  public void setEnableAutoBranchCreation(@javax.annotation.Nullable Boolean enableAutoBranchCreation) {
    this.enableAutoBranchCreation = enableAutoBranchCreation;
  }


  public CreateAppRequest autoBranchCreationPatterns(@javax.annotation.Nullable List<String> autoBranchCreationPatterns) {
    this.autoBranchCreationPatterns = autoBranchCreationPatterns;
    return this;
  }

  public CreateAppRequest addAutoBranchCreationPatternsItem(String autoBranchCreationPatternsItem) {
    if (this.autoBranchCreationPatterns == null) {
      this.autoBranchCreationPatterns = new ArrayList<>();
    }
    this.autoBranchCreationPatterns.add(autoBranchCreationPatternsItem);
    return this;
  }

  /**
   *  The automated branch creation glob patterns for an Amplify app. 
   * @return autoBranchCreationPatterns
   */
  @javax.annotation.Nullable
  public List<String> getAutoBranchCreationPatterns() {
    return autoBranchCreationPatterns;
  }

  public void setAutoBranchCreationPatterns(@javax.annotation.Nullable List<String> autoBranchCreationPatterns) {
    this.autoBranchCreationPatterns = autoBranchCreationPatterns;
  }


  public CreateAppRequest autoBranchCreationConfig(@javax.annotation.Nullable CreateAppRequestAutoBranchCreationConfig autoBranchCreationConfig) {
    this.autoBranchCreationConfig = autoBranchCreationConfig;
    return this;
  }

  /**
   * Get autoBranchCreationConfig
   * @return autoBranchCreationConfig
   */
  @javax.annotation.Nullable
  public CreateAppRequestAutoBranchCreationConfig getAutoBranchCreationConfig() {
    return autoBranchCreationConfig;
  }

  public void setAutoBranchCreationConfig(@javax.annotation.Nullable CreateAppRequestAutoBranchCreationConfig autoBranchCreationConfig) {
    this.autoBranchCreationConfig = autoBranchCreationConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAppRequest createAppRequest = (CreateAppRequest) o;
    return Objects.equals(this.name, createAppRequest.name) &&
        Objects.equals(this.description, createAppRequest.description) &&
        Objects.equals(this.repository, createAppRequest.repository) &&
        Objects.equals(this.platform, createAppRequest.platform) &&
        Objects.equals(this.iamServiceRoleArn, createAppRequest.iamServiceRoleArn) &&
        Objects.equals(this.oauthToken, createAppRequest.oauthToken) &&
        Objects.equals(this.accessToken, createAppRequest.accessToken) &&
        Objects.equals(this.environmentVariables, createAppRequest.environmentVariables) &&
        Objects.equals(this.enableBranchAutoBuild, createAppRequest.enableBranchAutoBuild) &&
        Objects.equals(this.enableBranchAutoDeletion, createAppRequest.enableBranchAutoDeletion) &&
        Objects.equals(this.enableBasicAuth, createAppRequest.enableBasicAuth) &&
        Objects.equals(this.basicAuthCredentials, createAppRequest.basicAuthCredentials) &&
        Objects.equals(this.customRules, createAppRequest.customRules) &&
        Objects.equals(this.tags, createAppRequest.tags) &&
        Objects.equals(this.buildSpec, createAppRequest.buildSpec) &&
        Objects.equals(this.customHeaders, createAppRequest.customHeaders) &&
        Objects.equals(this.enableAutoBranchCreation, createAppRequest.enableAutoBranchCreation) &&
        Objects.equals(this.autoBranchCreationPatterns, createAppRequest.autoBranchCreationPatterns) &&
        Objects.equals(this.autoBranchCreationConfig, createAppRequest.autoBranchCreationConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, repository, platform, iamServiceRoleArn, oauthToken, accessToken, environmentVariables, enableBranchAutoBuild, enableBranchAutoDeletion, enableBasicAuth, basicAuthCredentials, customRules, tags, buildSpec, customHeaders, enableAutoBranchCreation, autoBranchCreationPatterns, autoBranchCreationConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAppRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    repository: ").append(toIndentedString(repository)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    iamServiceRoleArn: ").append(toIndentedString(iamServiceRoleArn)).append("\n");
    sb.append("    oauthToken: ").append("*").append("\n");
    sb.append("    accessToken: ").append("*").append("\n");
    sb.append("    environmentVariables: ").append(toIndentedString(environmentVariables)).append("\n");
    sb.append("    enableBranchAutoBuild: ").append(toIndentedString(enableBranchAutoBuild)).append("\n");
    sb.append("    enableBranchAutoDeletion: ").append(toIndentedString(enableBranchAutoDeletion)).append("\n");
    sb.append("    enableBasicAuth: ").append(toIndentedString(enableBasicAuth)).append("\n");
    sb.append("    basicAuthCredentials: ").append("*").append("\n");
    sb.append("    customRules: ").append(toIndentedString(customRules)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    buildSpec: ").append("*").append("\n");
    sb.append("    customHeaders: ").append(toIndentedString(customHeaders)).append("\n");
    sb.append("    enableAutoBranchCreation: ").append(toIndentedString(enableAutoBranchCreation)).append("\n");
    sb.append("    autoBranchCreationPatterns: ").append(toIndentedString(autoBranchCreationPatterns)).append("\n");
    sb.append("    autoBranchCreationConfig: ").append(toIndentedString(autoBranchCreationConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("description");
    openapiFields.add("repository");
    openapiFields.add("platform");
    openapiFields.add("iamServiceRoleArn");
    openapiFields.add("oauthToken");
    openapiFields.add("accessToken");
    openapiFields.add("environmentVariables");
    openapiFields.add("enableBranchAutoBuild");
    openapiFields.add("enableBranchAutoDeletion");
    openapiFields.add("enableBasicAuth");
    openapiFields.add("basicAuthCredentials");
    openapiFields.add("customRules");
    openapiFields.add("tags");
    openapiFields.add("buildSpec");
    openapiFields.add("customHeaders");
    openapiFields.add("enableAutoBranchCreation");
    openapiFields.add("autoBranchCreationPatterns");
    openapiFields.add("autoBranchCreationConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateAppRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateAppRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateAppRequest is not found in the empty JSON string", CreateAppRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateAppRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateAppRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateAppRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("repository") != null && !jsonObj.get("repository").isJsonNull()) && !jsonObj.get("repository").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `repository` to be a primitive type in the JSON string but got `%s`", jsonObj.get("repository").toString()));
      }
      if ((jsonObj.get("platform") != null && !jsonObj.get("platform").isJsonNull()) && !jsonObj.get("platform").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `platform` to be a primitive type in the JSON string but got `%s`", jsonObj.get("platform").toString()));
      }
      // validate the optional field `platform`
      if (jsonObj.get("platform") != null && !jsonObj.get("platform").isJsonNull()) {
        PlatformEnum.validateJsonElement(jsonObj.get("platform"));
      }
      if ((jsonObj.get("iamServiceRoleArn") != null && !jsonObj.get("iamServiceRoleArn").isJsonNull()) && !jsonObj.get("iamServiceRoleArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `iamServiceRoleArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("iamServiceRoleArn").toString()));
      }
      if ((jsonObj.get("oauthToken") != null && !jsonObj.get("oauthToken").isJsonNull()) && !jsonObj.get("oauthToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `oauthToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("oauthToken").toString()));
      }
      if ((jsonObj.get("accessToken") != null && !jsonObj.get("accessToken").isJsonNull()) && !jsonObj.get("accessToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accessToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accessToken").toString()));
      }
      if ((jsonObj.get("basicAuthCredentials") != null && !jsonObj.get("basicAuthCredentials").isJsonNull()) && !jsonObj.get("basicAuthCredentials").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `basicAuthCredentials` to be a primitive type in the JSON string but got `%s`", jsonObj.get("basicAuthCredentials").toString()));
      }
      if (jsonObj.get("customRules") != null && !jsonObj.get("customRules").isJsonNull()) {
        JsonArray jsonArraycustomRules = jsonObj.getAsJsonArray("customRules");
        if (jsonArraycustomRules != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customRules").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customRules` to be an array in the JSON string but got `%s`", jsonObj.get("customRules").toString()));
          }

          // validate the optional field `customRules` (array)
          for (int i = 0; i < jsonArraycustomRules.size(); i++) {
            CustomRule.validateJsonElement(jsonArraycustomRules.get(i));
          };
        }
      }
      if ((jsonObj.get("buildSpec") != null && !jsonObj.get("buildSpec").isJsonNull()) && !jsonObj.get("buildSpec").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buildSpec` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buildSpec").toString()));
      }
      if ((jsonObj.get("customHeaders") != null && !jsonObj.get("customHeaders").isJsonNull()) && !jsonObj.get("customHeaders").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customHeaders` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customHeaders").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("autoBranchCreationPatterns") != null && !jsonObj.get("autoBranchCreationPatterns").isJsonNull() && !jsonObj.get("autoBranchCreationPatterns").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `autoBranchCreationPatterns` to be an array in the JSON string but got `%s`", jsonObj.get("autoBranchCreationPatterns").toString()));
      }
      // validate the optional field `autoBranchCreationConfig`
      if (jsonObj.get("autoBranchCreationConfig") != null && !jsonObj.get("autoBranchCreationConfig").isJsonNull()) {
        CreateAppRequestAutoBranchCreationConfig.validateJsonElement(jsonObj.get("autoBranchCreationConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateAppRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateAppRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateAppRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateAppRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateAppRequest>() {
           @Override
           public void write(JsonWriter out, CreateAppRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateAppRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateAppRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateAppRequest
   * @throws IOException if the JSON string is invalid with respect to CreateAppRequest
   */
  public static CreateAppRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateAppRequest.class);
  }

  /**
   * Convert an instance of CreateAppRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

