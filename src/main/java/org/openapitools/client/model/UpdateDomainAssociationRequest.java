/*
 * AWS Amplify
 * Amplify enables developers to develop and deploy cloud-powered mobile and web apps. The Amplify Console provides a continuous delivery and hosting service for web applications. For more information, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify Console User Guide</a>. The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework.</a> 
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.SubDomainSetting;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateDomainAssociationRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T13:08:57.241962+05:30[Asia/Kolkata]", comments = "Generator version: 7.10.0")
public class UpdateDomainAssociationRequest {
  public static final String SERIALIZED_NAME_ENABLE_AUTO_SUB_DOMAIN = "enableAutoSubDomain";
  @SerializedName(SERIALIZED_NAME_ENABLE_AUTO_SUB_DOMAIN)
  @javax.annotation.Nullable
  private Boolean enableAutoSubDomain;

  public static final String SERIALIZED_NAME_SUB_DOMAIN_SETTINGS = "subDomainSettings";
  @SerializedName(SERIALIZED_NAME_SUB_DOMAIN_SETTINGS)
  @javax.annotation.Nullable
  private List<SubDomainSetting> subDomainSettings = new ArrayList<>();

  public static final String SERIALIZED_NAME_AUTO_SUB_DOMAIN_CREATION_PATTERNS = "autoSubDomainCreationPatterns";
  @SerializedName(SERIALIZED_NAME_AUTO_SUB_DOMAIN_CREATION_PATTERNS)
  @javax.annotation.Nullable
  private List<String> autoSubDomainCreationPatterns = new ArrayList<>();

  public static final String SERIALIZED_NAME_AUTO_SUB_DOMAIN_I_A_M_ROLE = "autoSubDomainIAMRole";
  @SerializedName(SERIALIZED_NAME_AUTO_SUB_DOMAIN_I_A_M_ROLE)
  @javax.annotation.Nullable
  private String autoSubDomainIAMRole;

  public UpdateDomainAssociationRequest() {
  }

  public UpdateDomainAssociationRequest enableAutoSubDomain(@javax.annotation.Nullable Boolean enableAutoSubDomain) {
    this.enableAutoSubDomain = enableAutoSubDomain;
    return this;
  }

  /**
   *  Enables the automated creation of subdomains for branches. 
   * @return enableAutoSubDomain
   */
  @javax.annotation.Nullable
  public Boolean getEnableAutoSubDomain() {
    return enableAutoSubDomain;
  }

  public void setEnableAutoSubDomain(@javax.annotation.Nullable Boolean enableAutoSubDomain) {
    this.enableAutoSubDomain = enableAutoSubDomain;
  }


  public UpdateDomainAssociationRequest subDomainSettings(@javax.annotation.Nullable List<SubDomainSetting> subDomainSettings) {
    this.subDomainSettings = subDomainSettings;
    return this;
  }

  public UpdateDomainAssociationRequest addSubDomainSettingsItem(SubDomainSetting subDomainSettingsItem) {
    if (this.subDomainSettings == null) {
      this.subDomainSettings = new ArrayList<>();
    }
    this.subDomainSettings.add(subDomainSettingsItem);
    return this;
  }

  /**
   *  Describes the settings for the subdomain. 
   * @return subDomainSettings
   */
  @javax.annotation.Nullable
  public List<SubDomainSetting> getSubDomainSettings() {
    return subDomainSettings;
  }

  public void setSubDomainSettings(@javax.annotation.Nullable List<SubDomainSetting> subDomainSettings) {
    this.subDomainSettings = subDomainSettings;
  }


  public UpdateDomainAssociationRequest autoSubDomainCreationPatterns(@javax.annotation.Nullable List<String> autoSubDomainCreationPatterns) {
    this.autoSubDomainCreationPatterns = autoSubDomainCreationPatterns;
    return this;
  }

  public UpdateDomainAssociationRequest addAutoSubDomainCreationPatternsItem(String autoSubDomainCreationPatternsItem) {
    if (this.autoSubDomainCreationPatterns == null) {
      this.autoSubDomainCreationPatterns = new ArrayList<>();
    }
    this.autoSubDomainCreationPatterns.add(autoSubDomainCreationPatternsItem);
    return this;
  }

  /**
   *  Sets the branch patterns for automatic subdomain creation. 
   * @return autoSubDomainCreationPatterns
   */
  @javax.annotation.Nullable
  public List<String> getAutoSubDomainCreationPatterns() {
    return autoSubDomainCreationPatterns;
  }

  public void setAutoSubDomainCreationPatterns(@javax.annotation.Nullable List<String> autoSubDomainCreationPatterns) {
    this.autoSubDomainCreationPatterns = autoSubDomainCreationPatterns;
  }


  public UpdateDomainAssociationRequest autoSubDomainIAMRole(@javax.annotation.Nullable String autoSubDomainIAMRole) {
    this.autoSubDomainIAMRole = autoSubDomainIAMRole;
    return this;
  }

  /**
   *  The required AWS Identity and Access Management (IAM) service role for the Amazon Resource Name (ARN) for automatically creating subdomains. 
   * @return autoSubDomainIAMRole
   */
  @javax.annotation.Nullable
  public String getAutoSubDomainIAMRole() {
    return autoSubDomainIAMRole;
  }

  public void setAutoSubDomainIAMRole(@javax.annotation.Nullable String autoSubDomainIAMRole) {
    this.autoSubDomainIAMRole = autoSubDomainIAMRole;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateDomainAssociationRequest updateDomainAssociationRequest = (UpdateDomainAssociationRequest) o;
    return Objects.equals(this.enableAutoSubDomain, updateDomainAssociationRequest.enableAutoSubDomain) &&
        Objects.equals(this.subDomainSettings, updateDomainAssociationRequest.subDomainSettings) &&
        Objects.equals(this.autoSubDomainCreationPatterns, updateDomainAssociationRequest.autoSubDomainCreationPatterns) &&
        Objects.equals(this.autoSubDomainIAMRole, updateDomainAssociationRequest.autoSubDomainIAMRole);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enableAutoSubDomain, subDomainSettings, autoSubDomainCreationPatterns, autoSubDomainIAMRole);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateDomainAssociationRequest {\n");
    sb.append("    enableAutoSubDomain: ").append(toIndentedString(enableAutoSubDomain)).append("\n");
    sb.append("    subDomainSettings: ").append(toIndentedString(subDomainSettings)).append("\n");
    sb.append("    autoSubDomainCreationPatterns: ").append(toIndentedString(autoSubDomainCreationPatterns)).append("\n");
    sb.append("    autoSubDomainIAMRole: ").append(toIndentedString(autoSubDomainIAMRole)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("enableAutoSubDomain");
    openapiFields.add("subDomainSettings");
    openapiFields.add("autoSubDomainCreationPatterns");
    openapiFields.add("autoSubDomainIAMRole");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateDomainAssociationRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateDomainAssociationRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateDomainAssociationRequest is not found in the empty JSON string", UpdateDomainAssociationRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateDomainAssociationRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateDomainAssociationRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("subDomainSettings") != null && !jsonObj.get("subDomainSettings").isJsonNull()) {
        JsonArray jsonArraysubDomainSettings = jsonObj.getAsJsonArray("subDomainSettings");
        if (jsonArraysubDomainSettings != null) {
          // ensure the json data is an array
          if (!jsonObj.get("subDomainSettings").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `subDomainSettings` to be an array in the JSON string but got `%s`", jsonObj.get("subDomainSettings").toString()));
          }

          // validate the optional field `subDomainSettings` (array)
          for (int i = 0; i < jsonArraysubDomainSettings.size(); i++) {
            SubDomainSetting.validateJsonElement(jsonArraysubDomainSettings.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("autoSubDomainCreationPatterns") != null && !jsonObj.get("autoSubDomainCreationPatterns").isJsonNull() && !jsonObj.get("autoSubDomainCreationPatterns").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `autoSubDomainCreationPatterns` to be an array in the JSON string but got `%s`", jsonObj.get("autoSubDomainCreationPatterns").toString()));
      }
      if ((jsonObj.get("autoSubDomainIAMRole") != null && !jsonObj.get("autoSubDomainIAMRole").isJsonNull()) && !jsonObj.get("autoSubDomainIAMRole").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `autoSubDomainIAMRole` to be a primitive type in the JSON string but got `%s`", jsonObj.get("autoSubDomainIAMRole").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateDomainAssociationRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateDomainAssociationRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateDomainAssociationRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateDomainAssociationRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateDomainAssociationRequest>() {
           @Override
           public void write(JsonWriter out, UpdateDomainAssociationRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateDomainAssociationRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateDomainAssociationRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateDomainAssociationRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateDomainAssociationRequest
   */
  public static UpdateDomainAssociationRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateDomainAssociationRequest.class);
  }

  /**
   * Convert an instance of UpdateDomainAssociationRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

