/*
 * AWS Amplify
 * Amplify enables developers to develop and deploy cloud-powered mobile and web apps. The Amplify Console provides a continuous delivery and hosting service for web applications. For more information, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify Console User Guide</a>. The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework.</a> 
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateBranchRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T13:08:57.241962+05:30[Asia/Kolkata]", comments = "Generator version: 7.10.0")
public class UpdateBranchRequest {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_FRAMEWORK = "framework";
  @SerializedName(SERIALIZED_NAME_FRAMEWORK)
  @javax.annotation.Nullable
  private String framework;

  /**
   *  Describes the current stage for the branch. 
   */
  @JsonAdapter(StageEnum.Adapter.class)
  public enum StageEnum {
    PRODUCTION("PRODUCTION"),
    
    BETA("BETA"),
    
    DEVELOPMENT("DEVELOPMENT"),
    
    EXPERIMENTAL("EXPERIMENTAL"),
    
    PULL_REQUEST("PULL_REQUEST");

    private String value;

    StageEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StageEnum fromValue(String value) {
      for (StageEnum b : StageEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StageEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StageEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StageEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StageEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StageEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STAGE = "stage";
  @SerializedName(SERIALIZED_NAME_STAGE)
  @javax.annotation.Nullable
  private StageEnum stage;

  public static final String SERIALIZED_NAME_ENABLE_NOTIFICATION = "enableNotification";
  @SerializedName(SERIALIZED_NAME_ENABLE_NOTIFICATION)
  @javax.annotation.Nullable
  private Boolean enableNotification;

  public static final String SERIALIZED_NAME_ENABLE_AUTO_BUILD = "enableAutoBuild";
  @SerializedName(SERIALIZED_NAME_ENABLE_AUTO_BUILD)
  @javax.annotation.Nullable
  private Boolean enableAutoBuild;

  public static final String SERIALIZED_NAME_ENVIRONMENT_VARIABLES = "environmentVariables";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_VARIABLES)
  @javax.annotation.Nullable
  private Map<String, String> environmentVariables = new HashMap<>();

  public static final String SERIALIZED_NAME_BASIC_AUTH_CREDENTIALS = "basicAuthCredentials";
  @SerializedName(SERIALIZED_NAME_BASIC_AUTH_CREDENTIALS)
  @javax.annotation.Nullable
  private String basicAuthCredentials;

  public static final String SERIALIZED_NAME_ENABLE_BASIC_AUTH = "enableBasicAuth";
  @SerializedName(SERIALIZED_NAME_ENABLE_BASIC_AUTH)
  @javax.annotation.Nullable
  private Boolean enableBasicAuth;

  public static final String SERIALIZED_NAME_ENABLE_PERFORMANCE_MODE = "enablePerformanceMode";
  @SerializedName(SERIALIZED_NAME_ENABLE_PERFORMANCE_MODE)
  @javax.annotation.Nullable
  private Boolean enablePerformanceMode;

  public static final String SERIALIZED_NAME_BUILD_SPEC = "buildSpec";
  @SerializedName(SERIALIZED_NAME_BUILD_SPEC)
  @javax.annotation.Nullable
  private String buildSpec;

  public static final String SERIALIZED_NAME_TTL = "ttl";
  @SerializedName(SERIALIZED_NAME_TTL)
  @javax.annotation.Nullable
  private String ttl;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  @javax.annotation.Nullable
  private String displayName;

  public static final String SERIALIZED_NAME_ENABLE_PULL_REQUEST_PREVIEW = "enablePullRequestPreview";
  @SerializedName(SERIALIZED_NAME_ENABLE_PULL_REQUEST_PREVIEW)
  @javax.annotation.Nullable
  private Boolean enablePullRequestPreview;

  public static final String SERIALIZED_NAME_PULL_REQUEST_ENVIRONMENT_NAME = "pullRequestEnvironmentName";
  @SerializedName(SERIALIZED_NAME_PULL_REQUEST_ENVIRONMENT_NAME)
  @javax.annotation.Nullable
  private String pullRequestEnvironmentName;

  public static final String SERIALIZED_NAME_BACKEND_ENVIRONMENT_ARN = "backendEnvironmentArn";
  @SerializedName(SERIALIZED_NAME_BACKEND_ENVIRONMENT_ARN)
  @javax.annotation.Nullable
  private String backendEnvironmentArn;

  public UpdateBranchRequest() {
  }

  public UpdateBranchRequest description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   *  The description for the branch. 
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public UpdateBranchRequest framework(@javax.annotation.Nullable String framework) {
    this.framework = framework;
    return this;
  }

  /**
   *  The framework for the branch. 
   * @return framework
   */
  @javax.annotation.Nullable
  public String getFramework() {
    return framework;
  }

  public void setFramework(@javax.annotation.Nullable String framework) {
    this.framework = framework;
  }


  public UpdateBranchRequest stage(@javax.annotation.Nullable StageEnum stage) {
    this.stage = stage;
    return this;
  }

  /**
   *  Describes the current stage for the branch. 
   * @return stage
   */
  @javax.annotation.Nullable
  public StageEnum getStage() {
    return stage;
  }

  public void setStage(@javax.annotation.Nullable StageEnum stage) {
    this.stage = stage;
  }


  public UpdateBranchRequest enableNotification(@javax.annotation.Nullable Boolean enableNotification) {
    this.enableNotification = enableNotification;
    return this;
  }

  /**
   *  Enables notifications for the branch. 
   * @return enableNotification
   */
  @javax.annotation.Nullable
  public Boolean getEnableNotification() {
    return enableNotification;
  }

  public void setEnableNotification(@javax.annotation.Nullable Boolean enableNotification) {
    this.enableNotification = enableNotification;
  }


  public UpdateBranchRequest enableAutoBuild(@javax.annotation.Nullable Boolean enableAutoBuild) {
    this.enableAutoBuild = enableAutoBuild;
    return this;
  }

  /**
   *  Enables auto building for the branch. 
   * @return enableAutoBuild
   */
  @javax.annotation.Nullable
  public Boolean getEnableAutoBuild() {
    return enableAutoBuild;
  }

  public void setEnableAutoBuild(@javax.annotation.Nullable Boolean enableAutoBuild) {
    this.enableAutoBuild = enableAutoBuild;
  }


  public UpdateBranchRequest environmentVariables(@javax.annotation.Nullable Map<String, String> environmentVariables) {
    this.environmentVariables = environmentVariables;
    return this;
  }

  public UpdateBranchRequest putEnvironmentVariablesItem(String key, String environmentVariablesItem) {
    if (this.environmentVariables == null) {
      this.environmentVariables = new HashMap<>();
    }
    this.environmentVariables.put(key, environmentVariablesItem);
    return this;
  }

  /**
   *  The environment variables for the branch. 
   * @return environmentVariables
   */
  @javax.annotation.Nullable
  public Map<String, String> getEnvironmentVariables() {
    return environmentVariables;
  }

  public void setEnvironmentVariables(@javax.annotation.Nullable Map<String, String> environmentVariables) {
    this.environmentVariables = environmentVariables;
  }


  public UpdateBranchRequest basicAuthCredentials(@javax.annotation.Nullable String basicAuthCredentials) {
    this.basicAuthCredentials = basicAuthCredentials;
    return this;
  }

  /**
   *  The basic authorization credentials for the branch. You must base64-encode the authorization credentials and provide them in the format &lt;code&gt;user:password&lt;/code&gt;.
   * @return basicAuthCredentials
   */
  @javax.annotation.Nullable
  public String getBasicAuthCredentials() {
    return basicAuthCredentials;
  }

  public void setBasicAuthCredentials(@javax.annotation.Nullable String basicAuthCredentials) {
    this.basicAuthCredentials = basicAuthCredentials;
  }


  public UpdateBranchRequest enableBasicAuth(@javax.annotation.Nullable Boolean enableBasicAuth) {
    this.enableBasicAuth = enableBasicAuth;
    return this;
  }

  /**
   *  Enables basic authorization for the branch. 
   * @return enableBasicAuth
   */
  @javax.annotation.Nullable
  public Boolean getEnableBasicAuth() {
    return enableBasicAuth;
  }

  public void setEnableBasicAuth(@javax.annotation.Nullable Boolean enableBasicAuth) {
    this.enableBasicAuth = enableBasicAuth;
  }


  public UpdateBranchRequest enablePerformanceMode(@javax.annotation.Nullable Boolean enablePerformanceMode) {
    this.enablePerformanceMode = enablePerformanceMode;
    return this;
  }

  /**
   * &lt;p&gt;Enables performance mode for the branch.&lt;/p&gt; &lt;p&gt;Performance mode optimizes for faster hosting performance by keeping content cached at the edge for a longer interval. When performance mode is enabled, hosting configuration or code changes can take up to 10 minutes to roll out. &lt;/p&gt;
   * @return enablePerformanceMode
   */
  @javax.annotation.Nullable
  public Boolean getEnablePerformanceMode() {
    return enablePerformanceMode;
  }

  public void setEnablePerformanceMode(@javax.annotation.Nullable Boolean enablePerformanceMode) {
    this.enablePerformanceMode = enablePerformanceMode;
  }


  public UpdateBranchRequest buildSpec(@javax.annotation.Nullable String buildSpec) {
    this.buildSpec = buildSpec;
    return this;
  }

  /**
   *  The build specification (build spec) file for an Amplify app build. 
   * @return buildSpec
   */
  @javax.annotation.Nullable
  public String getBuildSpec() {
    return buildSpec;
  }

  public void setBuildSpec(@javax.annotation.Nullable String buildSpec) {
    this.buildSpec = buildSpec;
  }


  public UpdateBranchRequest ttl(@javax.annotation.Nullable String ttl) {
    this.ttl = ttl;
    return this;
  }

  /**
   *  The content Time to Live (TTL) for the website in seconds. 
   * @return ttl
   */
  @javax.annotation.Nullable
  public String getTtl() {
    return ttl;
  }

  public void setTtl(@javax.annotation.Nullable String ttl) {
    this.ttl = ttl;
  }


  public UpdateBranchRequest displayName(@javax.annotation.Nullable String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   *  The display name for a branch. This is used as the default domain prefix. 
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(@javax.annotation.Nullable String displayName) {
    this.displayName = displayName;
  }


  public UpdateBranchRequest enablePullRequestPreview(@javax.annotation.Nullable Boolean enablePullRequestPreview) {
    this.enablePullRequestPreview = enablePullRequestPreview;
    return this;
  }

  /**
   *  Enables pull request previews for this branch. 
   * @return enablePullRequestPreview
   */
  @javax.annotation.Nullable
  public Boolean getEnablePullRequestPreview() {
    return enablePullRequestPreview;
  }

  public void setEnablePullRequestPreview(@javax.annotation.Nullable Boolean enablePullRequestPreview) {
    this.enablePullRequestPreview = enablePullRequestPreview;
  }


  public UpdateBranchRequest pullRequestEnvironmentName(@javax.annotation.Nullable String pullRequestEnvironmentName) {
    this.pullRequestEnvironmentName = pullRequestEnvironmentName;
    return this;
  }

  /**
   *  The Amplify environment name for the pull request. 
   * @return pullRequestEnvironmentName
   */
  @javax.annotation.Nullable
  public String getPullRequestEnvironmentName() {
    return pullRequestEnvironmentName;
  }

  public void setPullRequestEnvironmentName(@javax.annotation.Nullable String pullRequestEnvironmentName) {
    this.pullRequestEnvironmentName = pullRequestEnvironmentName;
  }


  public UpdateBranchRequest backendEnvironmentArn(@javax.annotation.Nullable String backendEnvironmentArn) {
    this.backendEnvironmentArn = backendEnvironmentArn;
    return this;
  }

  /**
   *  The Amazon Resource Name (ARN) for a backend environment that is part of an Amplify app. 
   * @return backendEnvironmentArn
   */
  @javax.annotation.Nullable
  public String getBackendEnvironmentArn() {
    return backendEnvironmentArn;
  }

  public void setBackendEnvironmentArn(@javax.annotation.Nullable String backendEnvironmentArn) {
    this.backendEnvironmentArn = backendEnvironmentArn;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateBranchRequest updateBranchRequest = (UpdateBranchRequest) o;
    return Objects.equals(this.description, updateBranchRequest.description) &&
        Objects.equals(this.framework, updateBranchRequest.framework) &&
        Objects.equals(this.stage, updateBranchRequest.stage) &&
        Objects.equals(this.enableNotification, updateBranchRequest.enableNotification) &&
        Objects.equals(this.enableAutoBuild, updateBranchRequest.enableAutoBuild) &&
        Objects.equals(this.environmentVariables, updateBranchRequest.environmentVariables) &&
        Objects.equals(this.basicAuthCredentials, updateBranchRequest.basicAuthCredentials) &&
        Objects.equals(this.enableBasicAuth, updateBranchRequest.enableBasicAuth) &&
        Objects.equals(this.enablePerformanceMode, updateBranchRequest.enablePerformanceMode) &&
        Objects.equals(this.buildSpec, updateBranchRequest.buildSpec) &&
        Objects.equals(this.ttl, updateBranchRequest.ttl) &&
        Objects.equals(this.displayName, updateBranchRequest.displayName) &&
        Objects.equals(this.enablePullRequestPreview, updateBranchRequest.enablePullRequestPreview) &&
        Objects.equals(this.pullRequestEnvironmentName, updateBranchRequest.pullRequestEnvironmentName) &&
        Objects.equals(this.backendEnvironmentArn, updateBranchRequest.backendEnvironmentArn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, framework, stage, enableNotification, enableAutoBuild, environmentVariables, basicAuthCredentials, enableBasicAuth, enablePerformanceMode, buildSpec, ttl, displayName, enablePullRequestPreview, pullRequestEnvironmentName, backendEnvironmentArn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateBranchRequest {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    framework: ").append(toIndentedString(framework)).append("\n");
    sb.append("    stage: ").append(toIndentedString(stage)).append("\n");
    sb.append("    enableNotification: ").append(toIndentedString(enableNotification)).append("\n");
    sb.append("    enableAutoBuild: ").append(toIndentedString(enableAutoBuild)).append("\n");
    sb.append("    environmentVariables: ").append(toIndentedString(environmentVariables)).append("\n");
    sb.append("    basicAuthCredentials: ").append("*").append("\n");
    sb.append("    enableBasicAuth: ").append(toIndentedString(enableBasicAuth)).append("\n");
    sb.append("    enablePerformanceMode: ").append(toIndentedString(enablePerformanceMode)).append("\n");
    sb.append("    buildSpec: ").append("*").append("\n");
    sb.append("    ttl: ").append(toIndentedString(ttl)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    enablePullRequestPreview: ").append(toIndentedString(enablePullRequestPreview)).append("\n");
    sb.append("    pullRequestEnvironmentName: ").append(toIndentedString(pullRequestEnvironmentName)).append("\n");
    sb.append("    backendEnvironmentArn: ").append(toIndentedString(backendEnvironmentArn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("framework");
    openapiFields.add("stage");
    openapiFields.add("enableNotification");
    openapiFields.add("enableAutoBuild");
    openapiFields.add("environmentVariables");
    openapiFields.add("basicAuthCredentials");
    openapiFields.add("enableBasicAuth");
    openapiFields.add("enablePerformanceMode");
    openapiFields.add("buildSpec");
    openapiFields.add("ttl");
    openapiFields.add("displayName");
    openapiFields.add("enablePullRequestPreview");
    openapiFields.add("pullRequestEnvironmentName");
    openapiFields.add("backendEnvironmentArn");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateBranchRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateBranchRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateBranchRequest is not found in the empty JSON string", UpdateBranchRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateBranchRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateBranchRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("framework") != null && !jsonObj.get("framework").isJsonNull()) && !jsonObj.get("framework").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `framework` to be a primitive type in the JSON string but got `%s`", jsonObj.get("framework").toString()));
      }
      if ((jsonObj.get("stage") != null && !jsonObj.get("stage").isJsonNull()) && !jsonObj.get("stage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stage").toString()));
      }
      // validate the optional field `stage`
      if (jsonObj.get("stage") != null && !jsonObj.get("stage").isJsonNull()) {
        StageEnum.validateJsonElement(jsonObj.get("stage"));
      }
      if ((jsonObj.get("basicAuthCredentials") != null && !jsonObj.get("basicAuthCredentials").isJsonNull()) && !jsonObj.get("basicAuthCredentials").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `basicAuthCredentials` to be a primitive type in the JSON string but got `%s`", jsonObj.get("basicAuthCredentials").toString()));
      }
      if ((jsonObj.get("buildSpec") != null && !jsonObj.get("buildSpec").isJsonNull()) && !jsonObj.get("buildSpec").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `buildSpec` to be a primitive type in the JSON string but got `%s`", jsonObj.get("buildSpec").toString()));
      }
      if ((jsonObj.get("ttl") != null && !jsonObj.get("ttl").isJsonNull()) && !jsonObj.get("ttl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ttl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ttl").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("pullRequestEnvironmentName") != null && !jsonObj.get("pullRequestEnvironmentName").isJsonNull()) && !jsonObj.get("pullRequestEnvironmentName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pullRequestEnvironmentName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pullRequestEnvironmentName").toString()));
      }
      if ((jsonObj.get("backendEnvironmentArn") != null && !jsonObj.get("backendEnvironmentArn").isJsonNull()) && !jsonObj.get("backendEnvironmentArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `backendEnvironmentArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("backendEnvironmentArn").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateBranchRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateBranchRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateBranchRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateBranchRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateBranchRequest>() {
           @Override
           public void write(JsonWriter out, UpdateBranchRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateBranchRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateBranchRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateBranchRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateBranchRequest
   */
  public static UpdateBranchRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateBranchRequest.class);
  }

  /**
   * Convert an instance of UpdateBranchRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

