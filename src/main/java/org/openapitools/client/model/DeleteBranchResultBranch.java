/*
 * AWS Amplify
 * Amplify enables developers to develop and deploy cloud-powered mobile and web apps. The Amplify Console provides a continuous delivery and hosting service for web applications. For more information, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify Console User Guide</a>. The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework.</a> 
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.Stage;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DeleteBranchResultBranch
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T13:08:57.241962+05:30[Asia/Kolkata]", comments = "Generator version: 7.10.0")
public class DeleteBranchResultBranch {
  public static final String SERIALIZED_NAME_BRANCH_ARN = "branchArn";
  @SerializedName(SERIALIZED_NAME_BRANCH_ARN)
  @javax.annotation.Nonnull
  private String branchArn;

  public static final String SERIALIZED_NAME_BRANCH_NAME = "branchName";
  @SerializedName(SERIALIZED_NAME_BRANCH_NAME)
  @javax.annotation.Nonnull
  private String branchName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nonnull
  private String description;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  @javax.annotation.Nullable
  private Map tags;

  public static final String SERIALIZED_NAME_STAGE = "stage";
  @SerializedName(SERIALIZED_NAME_STAGE)
  @javax.annotation.Nonnull
  private Stage stage;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  @javax.annotation.Nonnull
  private String displayName;

  public static final String SERIALIZED_NAME_ENABLE_NOTIFICATION = "enableNotification";
  @SerializedName(SERIALIZED_NAME_ENABLE_NOTIFICATION)
  @javax.annotation.Nonnull
  private Boolean enableNotification;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  @javax.annotation.Nonnull
  private OffsetDateTime createTime;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  @javax.annotation.Nonnull
  private OffsetDateTime updateTime;

  public static final String SERIALIZED_NAME_ENVIRONMENT_VARIABLES = "environmentVariables";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_VARIABLES)
  @javax.annotation.Nonnull
  private Map environmentVariables;

  public static final String SERIALIZED_NAME_ENABLE_AUTO_BUILD = "enableAutoBuild";
  @SerializedName(SERIALIZED_NAME_ENABLE_AUTO_BUILD)
  @javax.annotation.Nonnull
  private Boolean enableAutoBuild;

  public static final String SERIALIZED_NAME_CUSTOM_DOMAINS = "customDomains";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DOMAINS)
  @javax.annotation.Nonnull
  private List customDomains;

  public static final String SERIALIZED_NAME_FRAMEWORK = "framework";
  @SerializedName(SERIALIZED_NAME_FRAMEWORK)
  @javax.annotation.Nonnull
  private String framework;

  public static final String SERIALIZED_NAME_ACTIVE_JOB_ID = "activeJobId";
  @SerializedName(SERIALIZED_NAME_ACTIVE_JOB_ID)
  @javax.annotation.Nonnull
  private String activeJobId;

  public static final String SERIALIZED_NAME_TOTAL_NUMBER_OF_JOBS = "totalNumberOfJobs";
  @SerializedName(SERIALIZED_NAME_TOTAL_NUMBER_OF_JOBS)
  @javax.annotation.Nonnull
  private String totalNumberOfJobs;

  public static final String SERIALIZED_NAME_ENABLE_BASIC_AUTH = "enableBasicAuth";
  @SerializedName(SERIALIZED_NAME_ENABLE_BASIC_AUTH)
  @javax.annotation.Nonnull
  private Boolean enableBasicAuth;

  public static final String SERIALIZED_NAME_ENABLE_PERFORMANCE_MODE = "enablePerformanceMode";
  @SerializedName(SERIALIZED_NAME_ENABLE_PERFORMANCE_MODE)
  @javax.annotation.Nullable
  private Boolean enablePerformanceMode;

  public static final String SERIALIZED_NAME_THUMBNAIL_URL = "thumbnailUrl";
  @SerializedName(SERIALIZED_NAME_THUMBNAIL_URL)
  @javax.annotation.Nullable
  private String thumbnailUrl;

  public static final String SERIALIZED_NAME_BASIC_AUTH_CREDENTIALS = "basicAuthCredentials";
  @SerializedName(SERIALIZED_NAME_BASIC_AUTH_CREDENTIALS)
  @javax.annotation.Nullable
  private String basicAuthCredentials;

  public static final String SERIALIZED_NAME_BUILD_SPEC = "buildSpec";
  @SerializedName(SERIALIZED_NAME_BUILD_SPEC)
  @javax.annotation.Nullable
  private String buildSpec;

  public static final String SERIALIZED_NAME_TTL = "ttl";
  @SerializedName(SERIALIZED_NAME_TTL)
  @javax.annotation.Nonnull
  private String ttl;

  public static final String SERIALIZED_NAME_ASSOCIATED_RESOURCES = "associatedResources";
  @SerializedName(SERIALIZED_NAME_ASSOCIATED_RESOURCES)
  @javax.annotation.Nullable
  private List associatedResources;

  public static final String SERIALIZED_NAME_ENABLE_PULL_REQUEST_PREVIEW = "enablePullRequestPreview";
  @SerializedName(SERIALIZED_NAME_ENABLE_PULL_REQUEST_PREVIEW)
  @javax.annotation.Nonnull
  private Boolean enablePullRequestPreview;

  public static final String SERIALIZED_NAME_PULL_REQUEST_ENVIRONMENT_NAME = "pullRequestEnvironmentName";
  @SerializedName(SERIALIZED_NAME_PULL_REQUEST_ENVIRONMENT_NAME)
  @javax.annotation.Nullable
  private String pullRequestEnvironmentName;

  public static final String SERIALIZED_NAME_DESTINATION_BRANCH = "destinationBranch";
  @SerializedName(SERIALIZED_NAME_DESTINATION_BRANCH)
  @javax.annotation.Nullable
  private String destinationBranch;

  public static final String SERIALIZED_NAME_SOURCE_BRANCH = "sourceBranch";
  @SerializedName(SERIALIZED_NAME_SOURCE_BRANCH)
  @javax.annotation.Nullable
  private String sourceBranch;

  public static final String SERIALIZED_NAME_BACKEND_ENVIRONMENT_ARN = "backendEnvironmentArn";
  @SerializedName(SERIALIZED_NAME_BACKEND_ENVIRONMENT_ARN)
  @javax.annotation.Nullable
  private String backendEnvironmentArn;

  public DeleteBranchResultBranch() {
  }

  public DeleteBranchResultBranch branchArn(@javax.annotation.Nonnull String branchArn) {
    this.branchArn = branchArn;
    return this;
  }

  /**
   * Get branchArn
   * @return branchArn
   */
  @javax.annotation.Nonnull
  public String getBranchArn() {
    return branchArn;
  }

  public void setBranchArn(@javax.annotation.Nonnull String branchArn) {
    this.branchArn = branchArn;
  }


  public DeleteBranchResultBranch branchName(@javax.annotation.Nonnull String branchName) {
    this.branchName = branchName;
    return this;
  }

  /**
   * Get branchName
   * @return branchName
   */
  @javax.annotation.Nonnull
  public String getBranchName() {
    return branchName;
  }

  public void setBranchName(@javax.annotation.Nonnull String branchName) {
    this.branchName = branchName;
  }


  public DeleteBranchResultBranch description(@javax.annotation.Nonnull String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nonnull
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nonnull String description) {
    this.description = description;
  }


  public DeleteBranchResultBranch tags(@javax.annotation.Nullable Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(@javax.annotation.Nullable Map tags) {
    this.tags = tags;
  }


  public DeleteBranchResultBranch stage(@javax.annotation.Nonnull Stage stage) {
    this.stage = stage;
    return this;
  }

  /**
   * Get stage
   * @return stage
   */
  @javax.annotation.Nonnull
  public Stage getStage() {
    return stage;
  }

  public void setStage(@javax.annotation.Nonnull Stage stage) {
    this.stage = stage;
  }


  public DeleteBranchResultBranch displayName(@javax.annotation.Nonnull String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nonnull
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(@javax.annotation.Nonnull String displayName) {
    this.displayName = displayName;
  }


  public DeleteBranchResultBranch enableNotification(@javax.annotation.Nonnull Boolean enableNotification) {
    this.enableNotification = enableNotification;
    return this;
  }

  /**
   * Get enableNotification
   * @return enableNotification
   */
  @javax.annotation.Nonnull
  public Boolean getEnableNotification() {
    return enableNotification;
  }

  public void setEnableNotification(@javax.annotation.Nonnull Boolean enableNotification) {
    this.enableNotification = enableNotification;
  }


  public DeleteBranchResultBranch createTime(@javax.annotation.Nonnull OffsetDateTime createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Get createTime
   * @return createTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreateTime() {
    return createTime;
  }

  public void setCreateTime(@javax.annotation.Nonnull OffsetDateTime createTime) {
    this.createTime = createTime;
  }


  public DeleteBranchResultBranch updateTime(@javax.annotation.Nonnull OffsetDateTime updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Get updateTime
   * @return updateTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(@javax.annotation.Nonnull OffsetDateTime updateTime) {
    this.updateTime = updateTime;
  }


  public DeleteBranchResultBranch environmentVariables(@javax.annotation.Nonnull Map environmentVariables) {
    this.environmentVariables = environmentVariables;
    return this;
  }

  /**
   * Get environmentVariables
   * @return environmentVariables
   */
  @javax.annotation.Nonnull
  public Map getEnvironmentVariables() {
    return environmentVariables;
  }

  public void setEnvironmentVariables(@javax.annotation.Nonnull Map environmentVariables) {
    this.environmentVariables = environmentVariables;
  }


  public DeleteBranchResultBranch enableAutoBuild(@javax.annotation.Nonnull Boolean enableAutoBuild) {
    this.enableAutoBuild = enableAutoBuild;
    return this;
  }

  /**
   * Get enableAutoBuild
   * @return enableAutoBuild
   */
  @javax.annotation.Nonnull
  public Boolean getEnableAutoBuild() {
    return enableAutoBuild;
  }

  public void setEnableAutoBuild(@javax.annotation.Nonnull Boolean enableAutoBuild) {
    this.enableAutoBuild = enableAutoBuild;
  }


  public DeleteBranchResultBranch customDomains(@javax.annotation.Nonnull List customDomains) {
    this.customDomains = customDomains;
    return this;
  }

  /**
   * Get customDomains
   * @return customDomains
   */
  @javax.annotation.Nonnull
  public List getCustomDomains() {
    return customDomains;
  }

  public void setCustomDomains(@javax.annotation.Nonnull List customDomains) {
    this.customDomains = customDomains;
  }


  public DeleteBranchResultBranch framework(@javax.annotation.Nonnull String framework) {
    this.framework = framework;
    return this;
  }

  /**
   * Get framework
   * @return framework
   */
  @javax.annotation.Nonnull
  public String getFramework() {
    return framework;
  }

  public void setFramework(@javax.annotation.Nonnull String framework) {
    this.framework = framework;
  }


  public DeleteBranchResultBranch activeJobId(@javax.annotation.Nonnull String activeJobId) {
    this.activeJobId = activeJobId;
    return this;
  }

  /**
   * Get activeJobId
   * @return activeJobId
   */
  @javax.annotation.Nonnull
  public String getActiveJobId() {
    return activeJobId;
  }

  public void setActiveJobId(@javax.annotation.Nonnull String activeJobId) {
    this.activeJobId = activeJobId;
  }


  public DeleteBranchResultBranch totalNumberOfJobs(@javax.annotation.Nonnull String totalNumberOfJobs) {
    this.totalNumberOfJobs = totalNumberOfJobs;
    return this;
  }

  /**
   * Get totalNumberOfJobs
   * @return totalNumberOfJobs
   */
  @javax.annotation.Nonnull
  public String getTotalNumberOfJobs() {
    return totalNumberOfJobs;
  }

  public void setTotalNumberOfJobs(@javax.annotation.Nonnull String totalNumberOfJobs) {
    this.totalNumberOfJobs = totalNumberOfJobs;
  }


  public DeleteBranchResultBranch enableBasicAuth(@javax.annotation.Nonnull Boolean enableBasicAuth) {
    this.enableBasicAuth = enableBasicAuth;
    return this;
  }

  /**
   * Get enableBasicAuth
   * @return enableBasicAuth
   */
  @javax.annotation.Nonnull
  public Boolean getEnableBasicAuth() {
    return enableBasicAuth;
  }

  public void setEnableBasicAuth(@javax.annotation.Nonnull Boolean enableBasicAuth) {
    this.enableBasicAuth = enableBasicAuth;
  }


  public DeleteBranchResultBranch enablePerformanceMode(@javax.annotation.Nullable Boolean enablePerformanceMode) {
    this.enablePerformanceMode = enablePerformanceMode;
    return this;
  }

  /**
   * Get enablePerformanceMode
   * @return enablePerformanceMode
   */
  @javax.annotation.Nullable
  public Boolean getEnablePerformanceMode() {
    return enablePerformanceMode;
  }

  public void setEnablePerformanceMode(@javax.annotation.Nullable Boolean enablePerformanceMode) {
    this.enablePerformanceMode = enablePerformanceMode;
  }


  public DeleteBranchResultBranch thumbnailUrl(@javax.annotation.Nullable String thumbnailUrl) {
    this.thumbnailUrl = thumbnailUrl;
    return this;
  }

  /**
   * Get thumbnailUrl
   * @return thumbnailUrl
   */
  @javax.annotation.Nullable
  public String getThumbnailUrl() {
    return thumbnailUrl;
  }

  public void setThumbnailUrl(@javax.annotation.Nullable String thumbnailUrl) {
    this.thumbnailUrl = thumbnailUrl;
  }


  public DeleteBranchResultBranch basicAuthCredentials(@javax.annotation.Nullable String basicAuthCredentials) {
    this.basicAuthCredentials = basicAuthCredentials;
    return this;
  }

  /**
   * Get basicAuthCredentials
   * @return basicAuthCredentials
   */
  @javax.annotation.Nullable
  public String getBasicAuthCredentials() {
    return basicAuthCredentials;
  }

  public void setBasicAuthCredentials(@javax.annotation.Nullable String basicAuthCredentials) {
    this.basicAuthCredentials = basicAuthCredentials;
  }


  public DeleteBranchResultBranch buildSpec(@javax.annotation.Nullable String buildSpec) {
    this.buildSpec = buildSpec;
    return this;
  }

  /**
   * Get buildSpec
   * @return buildSpec
   */
  @javax.annotation.Nullable
  public String getBuildSpec() {
    return buildSpec;
  }

  public void setBuildSpec(@javax.annotation.Nullable String buildSpec) {
    this.buildSpec = buildSpec;
  }


  public DeleteBranchResultBranch ttl(@javax.annotation.Nonnull String ttl) {
    this.ttl = ttl;
    return this;
  }

  /**
   * Get ttl
   * @return ttl
   */
  @javax.annotation.Nonnull
  public String getTtl() {
    return ttl;
  }

  public void setTtl(@javax.annotation.Nonnull String ttl) {
    this.ttl = ttl;
  }


  public DeleteBranchResultBranch associatedResources(@javax.annotation.Nullable List associatedResources) {
    this.associatedResources = associatedResources;
    return this;
  }

  /**
   * Get associatedResources
   * @return associatedResources
   */
  @javax.annotation.Nullable
  public List getAssociatedResources() {
    return associatedResources;
  }

  public void setAssociatedResources(@javax.annotation.Nullable List associatedResources) {
    this.associatedResources = associatedResources;
  }


  public DeleteBranchResultBranch enablePullRequestPreview(@javax.annotation.Nonnull Boolean enablePullRequestPreview) {
    this.enablePullRequestPreview = enablePullRequestPreview;
    return this;
  }

  /**
   * Get enablePullRequestPreview
   * @return enablePullRequestPreview
   */
  @javax.annotation.Nonnull
  public Boolean getEnablePullRequestPreview() {
    return enablePullRequestPreview;
  }

  public void setEnablePullRequestPreview(@javax.annotation.Nonnull Boolean enablePullRequestPreview) {
    this.enablePullRequestPreview = enablePullRequestPreview;
  }


  public DeleteBranchResultBranch pullRequestEnvironmentName(@javax.annotation.Nullable String pullRequestEnvironmentName) {
    this.pullRequestEnvironmentName = pullRequestEnvironmentName;
    return this;
  }

  /**
   * Get pullRequestEnvironmentName
   * @return pullRequestEnvironmentName
   */
  @javax.annotation.Nullable
  public String getPullRequestEnvironmentName() {
    return pullRequestEnvironmentName;
  }

  public void setPullRequestEnvironmentName(@javax.annotation.Nullable String pullRequestEnvironmentName) {
    this.pullRequestEnvironmentName = pullRequestEnvironmentName;
  }


  public DeleteBranchResultBranch destinationBranch(@javax.annotation.Nullable String destinationBranch) {
    this.destinationBranch = destinationBranch;
    return this;
  }

  /**
   * Get destinationBranch
   * @return destinationBranch
   */
  @javax.annotation.Nullable
  public String getDestinationBranch() {
    return destinationBranch;
  }

  public void setDestinationBranch(@javax.annotation.Nullable String destinationBranch) {
    this.destinationBranch = destinationBranch;
  }


  public DeleteBranchResultBranch sourceBranch(@javax.annotation.Nullable String sourceBranch) {
    this.sourceBranch = sourceBranch;
    return this;
  }

  /**
   * Get sourceBranch
   * @return sourceBranch
   */
  @javax.annotation.Nullable
  public String getSourceBranch() {
    return sourceBranch;
  }

  public void setSourceBranch(@javax.annotation.Nullable String sourceBranch) {
    this.sourceBranch = sourceBranch;
  }


  public DeleteBranchResultBranch backendEnvironmentArn(@javax.annotation.Nullable String backendEnvironmentArn) {
    this.backendEnvironmentArn = backendEnvironmentArn;
    return this;
  }

  /**
   * Get backendEnvironmentArn
   * @return backendEnvironmentArn
   */
  @javax.annotation.Nullable
  public String getBackendEnvironmentArn() {
    return backendEnvironmentArn;
  }

  public void setBackendEnvironmentArn(@javax.annotation.Nullable String backendEnvironmentArn) {
    this.backendEnvironmentArn = backendEnvironmentArn;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeleteBranchResultBranch deleteBranchResultBranch = (DeleteBranchResultBranch) o;
    return Objects.equals(this.branchArn, deleteBranchResultBranch.branchArn) &&
        Objects.equals(this.branchName, deleteBranchResultBranch.branchName) &&
        Objects.equals(this.description, deleteBranchResultBranch.description) &&
        Objects.equals(this.tags, deleteBranchResultBranch.tags) &&
        Objects.equals(this.stage, deleteBranchResultBranch.stage) &&
        Objects.equals(this.displayName, deleteBranchResultBranch.displayName) &&
        Objects.equals(this.enableNotification, deleteBranchResultBranch.enableNotification) &&
        Objects.equals(this.createTime, deleteBranchResultBranch.createTime) &&
        Objects.equals(this.updateTime, deleteBranchResultBranch.updateTime) &&
        Objects.equals(this.environmentVariables, deleteBranchResultBranch.environmentVariables) &&
        Objects.equals(this.enableAutoBuild, deleteBranchResultBranch.enableAutoBuild) &&
        Objects.equals(this.customDomains, deleteBranchResultBranch.customDomains) &&
        Objects.equals(this.framework, deleteBranchResultBranch.framework) &&
        Objects.equals(this.activeJobId, deleteBranchResultBranch.activeJobId) &&
        Objects.equals(this.totalNumberOfJobs, deleteBranchResultBranch.totalNumberOfJobs) &&
        Objects.equals(this.enableBasicAuth, deleteBranchResultBranch.enableBasicAuth) &&
        Objects.equals(this.enablePerformanceMode, deleteBranchResultBranch.enablePerformanceMode) &&
        Objects.equals(this.thumbnailUrl, deleteBranchResultBranch.thumbnailUrl) &&
        Objects.equals(this.basicAuthCredentials, deleteBranchResultBranch.basicAuthCredentials) &&
        Objects.equals(this.buildSpec, deleteBranchResultBranch.buildSpec) &&
        Objects.equals(this.ttl, deleteBranchResultBranch.ttl) &&
        Objects.equals(this.associatedResources, deleteBranchResultBranch.associatedResources) &&
        Objects.equals(this.enablePullRequestPreview, deleteBranchResultBranch.enablePullRequestPreview) &&
        Objects.equals(this.pullRequestEnvironmentName, deleteBranchResultBranch.pullRequestEnvironmentName) &&
        Objects.equals(this.destinationBranch, deleteBranchResultBranch.destinationBranch) &&
        Objects.equals(this.sourceBranch, deleteBranchResultBranch.sourceBranch) &&
        Objects.equals(this.backendEnvironmentArn, deleteBranchResultBranch.backendEnvironmentArn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(branchArn, branchName, description, tags, stage, displayName, enableNotification, createTime, updateTime, environmentVariables, enableAutoBuild, customDomains, framework, activeJobId, totalNumberOfJobs, enableBasicAuth, enablePerformanceMode, thumbnailUrl, basicAuthCredentials, buildSpec, ttl, associatedResources, enablePullRequestPreview, pullRequestEnvironmentName, destinationBranch, sourceBranch, backendEnvironmentArn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeleteBranchResultBranch {\n");
    sb.append("    branchArn: ").append(toIndentedString(branchArn)).append("\n");
    sb.append("    branchName: ").append(toIndentedString(branchName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    stage: ").append(toIndentedString(stage)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    enableNotification: ").append(toIndentedString(enableNotification)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    environmentVariables: ").append(toIndentedString(environmentVariables)).append("\n");
    sb.append("    enableAutoBuild: ").append(toIndentedString(enableAutoBuild)).append("\n");
    sb.append("    customDomains: ").append(toIndentedString(customDomains)).append("\n");
    sb.append("    framework: ").append(toIndentedString(framework)).append("\n");
    sb.append("    activeJobId: ").append(toIndentedString(activeJobId)).append("\n");
    sb.append("    totalNumberOfJobs: ").append(toIndentedString(totalNumberOfJobs)).append("\n");
    sb.append("    enableBasicAuth: ").append(toIndentedString(enableBasicAuth)).append("\n");
    sb.append("    enablePerformanceMode: ").append(toIndentedString(enablePerformanceMode)).append("\n");
    sb.append("    thumbnailUrl: ").append(toIndentedString(thumbnailUrl)).append("\n");
    sb.append("    basicAuthCredentials: ").append(toIndentedString(basicAuthCredentials)).append("\n");
    sb.append("    buildSpec: ").append(toIndentedString(buildSpec)).append("\n");
    sb.append("    ttl: ").append(toIndentedString(ttl)).append("\n");
    sb.append("    associatedResources: ").append(toIndentedString(associatedResources)).append("\n");
    sb.append("    enablePullRequestPreview: ").append(toIndentedString(enablePullRequestPreview)).append("\n");
    sb.append("    pullRequestEnvironmentName: ").append(toIndentedString(pullRequestEnvironmentName)).append("\n");
    sb.append("    destinationBranch: ").append(toIndentedString(destinationBranch)).append("\n");
    sb.append("    sourceBranch: ").append(toIndentedString(sourceBranch)).append("\n");
    sb.append("    backendEnvironmentArn: ").append(toIndentedString(backendEnvironmentArn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("branchArn");
    openapiFields.add("branchName");
    openapiFields.add("description");
    openapiFields.add("tags");
    openapiFields.add("stage");
    openapiFields.add("displayName");
    openapiFields.add("enableNotification");
    openapiFields.add("createTime");
    openapiFields.add("updateTime");
    openapiFields.add("environmentVariables");
    openapiFields.add("enableAutoBuild");
    openapiFields.add("customDomains");
    openapiFields.add("framework");
    openapiFields.add("activeJobId");
    openapiFields.add("totalNumberOfJobs");
    openapiFields.add("enableBasicAuth");
    openapiFields.add("enablePerformanceMode");
    openapiFields.add("thumbnailUrl");
    openapiFields.add("basicAuthCredentials");
    openapiFields.add("buildSpec");
    openapiFields.add("ttl");
    openapiFields.add("associatedResources");
    openapiFields.add("enablePullRequestPreview");
    openapiFields.add("pullRequestEnvironmentName");
    openapiFields.add("destinationBranch");
    openapiFields.add("sourceBranch");
    openapiFields.add("backendEnvironmentArn");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("branchArn");
    openapiRequiredFields.add("branchName");
    openapiRequiredFields.add("description");
    openapiRequiredFields.add("stage");
    openapiRequiredFields.add("displayName");
    openapiRequiredFields.add("enableNotification");
    openapiRequiredFields.add("createTime");
    openapiRequiredFields.add("updateTime");
    openapiRequiredFields.add("environmentVariables");
    openapiRequiredFields.add("enableAutoBuild");
    openapiRequiredFields.add("customDomains");
    openapiRequiredFields.add("framework");
    openapiRequiredFields.add("activeJobId");
    openapiRequiredFields.add("totalNumberOfJobs");
    openapiRequiredFields.add("enableBasicAuth");
    openapiRequiredFields.add("ttl");
    openapiRequiredFields.add("enablePullRequestPreview");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DeleteBranchResultBranch
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DeleteBranchResultBranch.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DeleteBranchResultBranch is not found in the empty JSON string", DeleteBranchResultBranch.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DeleteBranchResultBranch.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DeleteBranchResultBranch` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DeleteBranchResultBranch.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `branchArn`
      String.validateJsonElement(jsonObj.get("branchArn"));
      // validate the required field `branchName`
      String.validateJsonElement(jsonObj.get("branchName"));
      // validate the required field `description`
      String.validateJsonElement(jsonObj.get("description"));
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
      // validate the required field `stage`
      Stage.validateJsonElement(jsonObj.get("stage"));
      // validate the required field `displayName`
      String.validateJsonElement(jsonObj.get("displayName"));
      // validate the required field `enableNotification`
      Boolean.validateJsonElement(jsonObj.get("enableNotification"));
      // validate the required field `createTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("createTime"));
      // validate the required field `updateTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("updateTime"));
      // validate the required field `environmentVariables`
      Map.validateJsonElement(jsonObj.get("environmentVariables"));
      // validate the required field `enableAutoBuild`
      Boolean.validateJsonElement(jsonObj.get("enableAutoBuild"));
      // validate the required field `customDomains`
      List.validateJsonElement(jsonObj.get("customDomains"));
      // validate the required field `framework`
      String.validateJsonElement(jsonObj.get("framework"));
      // validate the required field `activeJobId`
      String.validateJsonElement(jsonObj.get("activeJobId"));
      // validate the required field `totalNumberOfJobs`
      String.validateJsonElement(jsonObj.get("totalNumberOfJobs"));
      // validate the required field `enableBasicAuth`
      Boolean.validateJsonElement(jsonObj.get("enableBasicAuth"));
      // validate the optional field `enablePerformanceMode`
      if (jsonObj.get("enablePerformanceMode") != null && !jsonObj.get("enablePerformanceMode").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("enablePerformanceMode"));
      }
      // validate the optional field `thumbnailUrl`
      if (jsonObj.get("thumbnailUrl") != null && !jsonObj.get("thumbnailUrl").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("thumbnailUrl"));
      }
      // validate the optional field `basicAuthCredentials`
      if (jsonObj.get("basicAuthCredentials") != null && !jsonObj.get("basicAuthCredentials").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("basicAuthCredentials"));
      }
      // validate the optional field `buildSpec`
      if (jsonObj.get("buildSpec") != null && !jsonObj.get("buildSpec").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("buildSpec"));
      }
      // validate the required field `ttl`
      String.validateJsonElement(jsonObj.get("ttl"));
      // validate the optional field `associatedResources`
      if (jsonObj.get("associatedResources") != null && !jsonObj.get("associatedResources").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("associatedResources"));
      }
      // validate the required field `enablePullRequestPreview`
      Boolean.validateJsonElement(jsonObj.get("enablePullRequestPreview"));
      // validate the optional field `pullRequestEnvironmentName`
      if (jsonObj.get("pullRequestEnvironmentName") != null && !jsonObj.get("pullRequestEnvironmentName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("pullRequestEnvironmentName"));
      }
      // validate the optional field `destinationBranch`
      if (jsonObj.get("destinationBranch") != null && !jsonObj.get("destinationBranch").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("destinationBranch"));
      }
      // validate the optional field `sourceBranch`
      if (jsonObj.get("sourceBranch") != null && !jsonObj.get("sourceBranch").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("sourceBranch"));
      }
      // validate the optional field `backendEnvironmentArn`
      if (jsonObj.get("backendEnvironmentArn") != null && !jsonObj.get("backendEnvironmentArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("backendEnvironmentArn"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DeleteBranchResultBranch.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DeleteBranchResultBranch' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DeleteBranchResultBranch> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DeleteBranchResultBranch.class));

       return (TypeAdapter<T>) new TypeAdapter<DeleteBranchResultBranch>() {
           @Override
           public void write(JsonWriter out, DeleteBranchResultBranch value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DeleteBranchResultBranch read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DeleteBranchResultBranch given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DeleteBranchResultBranch
   * @throws IOException if the JSON string is invalid with respect to DeleteBranchResultBranch
   */
  public static DeleteBranchResultBranch fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DeleteBranchResultBranch.class);
  }

  /**
   * Convert an instance of DeleteBranchResultBranch to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

