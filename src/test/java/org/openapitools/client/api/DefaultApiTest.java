/*
 * AWS Amplify
 * Amplify enables developers to develop and deploy cloud-powered mobile and web apps. The Amplify Console provides a continuous delivery and hosting service for web applications. For more information, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify Console User Guide</a>. The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework.</a> 
 *
 * The version of the OpenAPI document: 2017-07-25
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateAppRequest;
import org.openapitools.client.model.CreateAppResult;
import org.openapitools.client.model.CreateBackendEnvironmentRequest;
import org.openapitools.client.model.CreateBackendEnvironmentResult;
import org.openapitools.client.model.CreateBranchRequest;
import org.openapitools.client.model.CreateBranchResult;
import org.openapitools.client.model.CreateDeploymentRequest;
import org.openapitools.client.model.CreateDeploymentResult;
import org.openapitools.client.model.CreateDomainAssociationRequest;
import org.openapitools.client.model.CreateDomainAssociationResult;
import org.openapitools.client.model.CreateWebhookRequest;
import org.openapitools.client.model.CreateWebhookResult;
import org.openapitools.client.model.DeleteAppResult;
import org.openapitools.client.model.DeleteBackendEnvironmentResult;
import org.openapitools.client.model.DeleteBranchResult;
import org.openapitools.client.model.DeleteDomainAssociationResult;
import org.openapitools.client.model.DeleteJobResult;
import org.openapitools.client.model.DeleteWebhookResult;
import org.openapitools.client.model.GenerateAccessLogsRequest;
import org.openapitools.client.model.GenerateAccessLogsResult;
import org.openapitools.client.model.GetAppResult;
import org.openapitools.client.model.GetArtifactUrlResult;
import org.openapitools.client.model.GetBackendEnvironmentResult;
import org.openapitools.client.model.GetBranchResult;
import org.openapitools.client.model.GetDomainAssociationResult;
import org.openapitools.client.model.GetJobResult;
import org.openapitools.client.model.GetWebhookResult;
import org.openapitools.client.model.ListAppsResult;
import org.openapitools.client.model.ListArtifactsResult;
import org.openapitools.client.model.ListBackendEnvironmentsResult;
import org.openapitools.client.model.ListBranchesResult;
import org.openapitools.client.model.ListDomainAssociationsResult;
import org.openapitools.client.model.ListJobsResult;
import org.openapitools.client.model.ListTagsForResourceResponse;
import org.openapitools.client.model.ListWebhooksResult;
import org.openapitools.client.model.StartDeploymentRequest;
import org.openapitools.client.model.StartDeploymentResult;
import org.openapitools.client.model.StartJobRequest;
import org.openapitools.client.model.StartJobResult;
import org.openapitools.client.model.StopJobResult;
import org.openapitools.client.model.TagResourceRequest;
import org.openapitools.client.model.UpdateAppRequest;
import org.openapitools.client.model.UpdateAppResult;
import org.openapitools.client.model.UpdateBranchRequest;
import org.openapitools.client.model.UpdateBranchResult;
import org.openapitools.client.model.UpdateDomainAssociationRequest;
import org.openapitools.client.model.UpdateDomainAssociationResult;
import org.openapitools.client.model.UpdateWebhookRequest;
import org.openapitools.client.model.UpdateWebhookResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     *  Creates a new Amplify app. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAppTest() throws ApiException {
        CreateAppRequest createAppRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateAppResult response = api.createApp(createAppRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Creates a new backend environment for an Amplify app. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createBackendEnvironmentTest() throws ApiException {
        String appId = null;
        CreateBackendEnvironmentRequest createBackendEnvironmentRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateBackendEnvironmentResult response = api.createBackendEnvironment(appId, createBackendEnvironmentRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Creates a new branch for an Amplify app. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createBranchTest() throws ApiException {
        String appId = null;
        CreateBranchRequest createBranchRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateBranchResult response = api.createBranch(appId, createBranchRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Creates a deployment for a manually deployed Amplify app. Manually deployed apps are not connected to a repository. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDeploymentTest() throws ApiException {
        String appId = null;
        String branchName = null;
        CreateDeploymentRequest createDeploymentRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateDeploymentResult response = api.createDeployment(appId, branchName, createDeploymentRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Creates a new domain association for an Amplify app. This action associates a custom domain with the Amplify app 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDomainAssociationTest() throws ApiException {
        String appId = null;
        CreateDomainAssociationRequest createDomainAssociationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateDomainAssociationResult response = api.createDomainAssociation(appId, createDomainAssociationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Creates a new webhook on an Amplify app. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createWebhookTest() throws ApiException {
        String appId = null;
        CreateWebhookRequest createWebhookRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateWebhookResult response = api.createWebhook(appId, createWebhookRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Deletes an existing Amplify app specified by an app ID. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAppTest() throws ApiException {
        String appId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteAppResult response = api.deleteApp(appId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Deletes a backend environment for an Amplify app. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteBackendEnvironmentTest() throws ApiException {
        String appId = null;
        String environmentName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteBackendEnvironmentResult response = api.deleteBackendEnvironment(appId, environmentName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Deletes a branch for an Amplify app. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteBranchTest() throws ApiException {
        String appId = null;
        String branchName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteBranchResult response = api.deleteBranch(appId, branchName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Deletes a domain association for an Amplify app. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDomainAssociationTest() throws ApiException {
        String appId = null;
        String domainName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteDomainAssociationResult response = api.deleteDomainAssociation(appId, domainName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Deletes a job for a branch of an Amplify app. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteJobTest() throws ApiException {
        String appId = null;
        String branchName = null;
        String jobId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteJobResult response = api.deleteJob(appId, branchName, jobId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Deletes a webhook. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteWebhookTest() throws ApiException {
        String webhookId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteWebhookResult response = api.deleteWebhook(webhookId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Returns the website access logs for a specific time range using a presigned URL. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generateAccessLogsTest() throws ApiException {
        String appId = null;
        GenerateAccessLogsRequest generateAccessLogsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GenerateAccessLogsResult response = api.generateAccessLogs(appId, generateAccessLogsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Returns an existing Amplify app by appID. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAppTest() throws ApiException {
        String appId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetAppResult response = api.getApp(appId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Returns the artifact info that corresponds to an artifact id. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getArtifactUrlTest() throws ApiException {
        String artifactId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetArtifactUrlResult response = api.getArtifactUrl(artifactId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Returns a backend environment for an Amplify app. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBackendEnvironmentTest() throws ApiException {
        String appId = null;
        String environmentName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetBackendEnvironmentResult response = api.getBackendEnvironment(appId, environmentName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Returns a branch for an Amplify app. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBranchTest() throws ApiException {
        String appId = null;
        String branchName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetBranchResult response = api.getBranch(appId, branchName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Returns the domain information for an Amplify app. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDomainAssociationTest() throws ApiException {
        String appId = null;
        String domainName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetDomainAssociationResult response = api.getDomainAssociation(appId, domainName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Returns a job for a branch of an Amplify app. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getJobTest() throws ApiException {
        String appId = null;
        String branchName = null;
        String jobId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetJobResult response = api.getJob(appId, branchName, jobId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Returns the webhook information that corresponds to a specified webhook ID. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWebhookTest() throws ApiException {
        String webhookId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetWebhookResult response = api.getWebhook(webhookId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Returns a list of the existing Amplify apps. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAppsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        ListAppsResult response = api.listApps(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults);
        // TODO: test validations
    }

    /**
     *  Returns a list of artifacts for a specified app, branch, and job. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listArtifactsTest() throws ApiException {
        String appId = null;
        String branchName = null;
        String jobId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        ListArtifactsResult response = api.listArtifacts(appId, branchName, jobId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults);
        // TODO: test validations
    }

    /**
     *  Lists the backend environments for an Amplify app. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listBackendEnvironmentsTest() throws ApiException {
        String appId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String environmentName = null;
        String nextToken = null;
        Integer maxResults = null;
        ListBackendEnvironmentsResult response = api.listBackendEnvironments(appId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, environmentName, nextToken, maxResults);
        // TODO: test validations
    }

    /**
     *  Lists the branches of an Amplify app. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listBranchesTest() throws ApiException {
        String appId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        ListBranchesResult response = api.listBranches(appId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults);
        // TODO: test validations
    }

    /**
     *  Returns the domain associations for an Amplify app. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listDomainAssociationsTest() throws ApiException {
        String appId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        ListDomainAssociationsResult response = api.listDomainAssociations(appId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults);
        // TODO: test validations
    }

    /**
     *  Lists the jobs for a branch of an Amplify app. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listJobsTest() throws ApiException {
        String appId = null;
        String branchName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        ListJobsResult response = api.listJobs(appId, branchName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults);
        // TODO: test validations
    }

    /**
     *  Returns a list of tags for a specified Amazon Resource Name (ARN). 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTagsForResourceTest() throws ApiException {
        String resourceArn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListTagsForResourceResponse response = api.listTagsForResource(resourceArn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Returns a list of webhooks for an Amplify app. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listWebhooksTest() throws ApiException {
        String appId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        Integer maxResults = null;
        ListWebhooksResult response = api.listWebhooks(appId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken, maxResults);
        // TODO: test validations
    }

    /**
     *  Starts a deployment for a manually deployed app. Manually deployed apps are not connected to a repository. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startDeploymentTest() throws ApiException {
        String appId = null;
        String branchName = null;
        StartDeploymentRequest startDeploymentRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        StartDeploymentResult response = api.startDeployment(appId, branchName, startDeploymentRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Starts a new job for a branch of an Amplify app. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startJobTest() throws ApiException {
        String appId = null;
        String branchName = null;
        StartJobRequest startJobRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        StartJobResult response = api.startJob(appId, branchName, startJobRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Stops a job that is in progress for a branch of an Amplify app. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void stopJobTest() throws ApiException {
        String appId = null;
        String branchName = null;
        String jobId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        StopJobResult response = api.stopJob(appId, branchName, jobId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Tags the resource with a tag key and value. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagResourceTest() throws ApiException {
        String resourceArn = null;
        TagResourceRequest tagResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.tagResource(resourceArn, tagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Untags a resource with a specified Amazon Resource Name (ARN). 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void untagResourceTest() throws ApiException {
        String resourceArn = null;
        List<String> tagKeys = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.untagResource(resourceArn, tagKeys, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Updates an existing Amplify app. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAppTest() throws ApiException {
        String appId = null;
        UpdateAppRequest updateAppRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateAppResult response = api.updateApp(appId, updateAppRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Updates a branch for an Amplify app. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBranchTest() throws ApiException {
        String appId = null;
        String branchName = null;
        UpdateBranchRequest updateBranchRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateBranchResult response = api.updateBranch(appId, branchName, updateBranchRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Creates a new domain association for an Amplify app.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDomainAssociationTest() throws ApiException {
        String appId = null;
        String domainName = null;
        UpdateDomainAssociationRequest updateDomainAssociationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateDomainAssociationResult response = api.updateDomainAssociation(appId, domainName, updateDomainAssociationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     *  Updates a webhook. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWebhookTest() throws ApiException {
        String webhookId = null;
        UpdateWebhookRequest updateWebhookRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateWebhookResult response = api.updateWebhook(webhookId, updateWebhookRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
