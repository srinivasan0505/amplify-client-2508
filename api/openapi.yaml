openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "Amplify enables developers to develop and deploy cloud-powered mobile\
    \ and web apps. The Amplify Console provides a continuous delivery and hosting\
    \ service for web applications. For more information, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\"\
    >Amplify Console User Guide</a>. The Amplify Framework is a comprehensive set\
    \ of SDKs, libraries, tools, and documentation for client app development. For\
    \ more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework.</a> "
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Amplify
  version: 2017-07-25
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: amplify
  x-aws-signingName: amplify
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/amplify-2017-07-25.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/amplify/
servers:
- description: The Amplify multi-region endpoint
  url: "http://amplify.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amplify multi-region endpoint
  url: "https://amplify.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amplify endpoint for China (Beijing) and China (Ningxia)
  url: "http://amplify.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amplify endpoint for China (Beijing) and China (Ningxia)
  url: "https://amplify.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /apps:
    get:
      description: ' Returns a list of the existing Amplify apps. '
      operationId: ListApps
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: " A pagination token. If non-null, the pagination token is returned\
          \ in a result. Pass its value in another request to retrieve more entries. "
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2000
          pattern: \(\?s\).*
          type: string
        style: form
      - description: ' The maximum number of records to list in a single response. '
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
      x-accepts:
      - application/json
    post:
      description: ' Creates a new Amplify app. '
      operationId: CreateApp
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApp_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentServiceFailureException'
          description: DependentServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /apps/{appId}/backendenvironments:
    get:
      description: ' Lists the backend environments for an Amplify app. '
      operationId: ListBackendEnvironments
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      - description: ' The name of the backend environment '
        explode: true
        in: query
        name: environmentName
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        style: form
      - description: " A pagination token. Set to null to start listing backend environments\
          \ from the start. If a non-null pagination token is returned in a result,\
          \ pass its value in here to list more backend environments. "
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2000
          pattern: \(\?s\).*
          type: string
        style: form
      - description: ' The maximum number of records to list in a single response. '
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackendEnvironmentsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
      x-accepts:
      - application/json
    post:
      description: ' Creates a new backend environment for an Amplify app. '
      operationId: CreateBackendEnvironment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBackendEnvironment_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBackendEnvironmentResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /apps/{appId}/branches:
    get:
      description: ' Lists the branches of an Amplify app. '
      operationId: ListBranches
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      - description: " A pagination token. Set to null to start listing branches from\
          \ the start. If a non-null pagination token is returned in a result, pass\
          \ its value in here to list more branches. "
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2000
          pattern: \(\?s\).*
          type: string
        style: form
      - description: ' The maximum number of records to list in a single response. '
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBranchesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
      x-accepts:
      - application/json
    post:
      description: ' Creates a new branch for an Amplify app. '
      operationId: CreateBranch
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBranch_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBranchResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentServiceFailureException'
          description: DependentServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /apps/{appId}/branches/{branchName}/deployments:
    post:
      description: ' Creates a deployment for a manually deployed Amplify app. Manually
        deployed apps are not connected to a repository. '
      operationId: CreateDeployment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      - description: " The name for the branch, for the job. "
        explode: false
        in: path
        name: branchName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeployment_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDeploymentResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /apps/{appId}/domains:
    get:
      description: ' Returns the domain associations for an Amplify app. '
      operationId: ListDomainAssociations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      - description: " A pagination token. Set to null to start listing apps from\
          \ the start. If non-null, a pagination token is returned in a result. Pass\
          \ its value in here to list more projects. "
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2000
          pattern: \(\?s\).*
          type: string
        style: form
      - description: ' The maximum number of records to list in a single response. '
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainAssociationsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
      x-accepts:
      - application/json
    post:
      description: ' Creates a new domain association for an Amplify app. This action
        associates a custom domain with the Amplify app '
      operationId: CreateDomainAssociation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDomainAssociation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDomainAssociationResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentServiceFailureException'
          description: DependentServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /apps/{appId}/webhooks:
    get:
      description: ' Returns a list of webhooks for an Amplify app. '
      operationId: ListWebhooks
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      - description: " A pagination token. Set to null to start listing webhooks from\
          \ the start. If non-null,the pagination token is returned in a result. Pass\
          \ its value in here to list more webhooks. "
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2000
          pattern: \(\?s\).*
          type: string
        style: form
      - description: ' The maximum number of records to list in a single response. '
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWebhooksResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-accepts:
      - application/json
    post:
      description: ' Creates a new webhook on an Amplify app. '
      operationId: CreateWebhook
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebhook_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWebhookResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentServiceFailureException'
          description: DependentServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /apps/{appId}:
    delete:
      description: ' Deletes an existing Amplify app specified by an app ID. '
      operationId: DeleteApp
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAppResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentServiceFailureException'
          description: DependentServiceFailureException
      x-accepts:
      - application/json
    get:
      description: ' Returns an existing Amplify app by appID. '
      operationId: GetApp
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
      x-accepts:
      - application/json
    post:
      description: ' Updates an existing Amplify app. '
      operationId: UpdateApp
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApp_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAppResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /apps/{appId}/backendenvironments/{environmentName}:
    delete:
      description: ' Deletes a backend environment for an Amplify app. '
      operationId: DeleteBackendEnvironment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID of an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      - description: ' The name of a backend environment of an Amplify app. '
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBackendEnvironmentResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentServiceFailureException'
          description: DependentServiceFailureException
      x-accepts:
      - application/json
    get:
      description: ' Returns a backend environment for an Amplify app. '
      operationId: GetBackendEnvironment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique id for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      - description: ' The name for the backend environment. '
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackendEnvironmentResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
      x-accepts:
      - application/json
  /apps/{appId}/branches/{branchName}:
    delete:
      description: ' Deletes a branch for an Amplify app. '
      operationId: DeleteBranch
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      - description: ' The name for the branch. '
        explode: false
        in: path
        name: branchName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBranchResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentServiceFailureException'
          description: DependentServiceFailureException
      x-accepts:
      - application/json
    get:
      description: ' Returns a branch for an Amplify app. '
      operationId: GetBranch
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      - description: ' The name for the branch. '
        explode: false
        in: path
        name: branchName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBranchResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
      x-accepts:
      - application/json
    post:
      description: ' Updates a branch for an Amplify app. '
      operationId: UpdateBranch
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      - description: ' The name for the branch. '
        explode: false
        in: path
        name: branchName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBranch_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBranchResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentServiceFailureException'
          description: DependentServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /apps/{appId}/domains/{domainName}:
    delete:
      description: ' Deletes a domain association for an Amplify app. '
      operationId: DeleteDomainAssociation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique id for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      - description: ' The name of the domain. '
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          maxLength: 64
          pattern: "^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])(\\\
            .)?$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDomainAssociationResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentServiceFailureException'
          description: DependentServiceFailureException
      x-accepts:
      - application/json
    get:
      description: ' Returns the domain information for an Amplify app. '
      operationId: GetDomainAssociation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique id for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      - description: ' The name of the domain. '
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          maxLength: 64
          pattern: "^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])(\\\
            .)?$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDomainAssociationResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
      x-accepts:
      - application/json
    post:
      description: ' Creates a new domain association for an Amplify app.'
      operationId: UpdateDomainAssociation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      - description: ' The name of the domain. '
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          maxLength: 64
          pattern: "^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])(\\\
            .)?$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDomainAssociation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDomainAssociationResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentServiceFailureException'
          description: DependentServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /apps/{appId}/branches/{branchName}/jobs/{jobId}:
    delete:
      description: ' Deletes a job for a branch of an Amplify app. '
      operationId: DeleteJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      - description: " The name for the branch, for the job. "
        explode: false
        in: path
        name: branchName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        style: simple
      - description: ' The unique ID for the job. '
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          maxLength: 255
          pattern: "[0-9]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteJobResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-accepts:
      - application/json
    get:
      description: ' Returns a job for a branch of an Amplify app. '
      operationId: GetJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      - description: ' The branch name for the job. '
        explode: false
        in: path
        name: branchName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        style: simple
      - description: ' The unique ID for the job. '
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          maxLength: 255
          pattern: "[0-9]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-accepts:
      - application/json
  /webhooks/{webhookId}:
    delete:
      description: ' Deletes a webhook. '
      operationId: DeleteWebhook
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for a webhook. '
        explode: false
        in: path
        name: webhookId
        required: true
        schema:
          maxLength: 255
          pattern: \(\?s\).*
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWebhookResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-accepts:
      - application/json
    get:
      description: ' Returns the webhook information that corresponds to a specified
        webhook ID. '
      operationId: GetWebhook
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for a webhook. '
        explode: false
        in: path
        name: webhookId
        required: true
        schema:
          maxLength: 255
          pattern: \(\?s\).*
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWebhookResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-accepts:
      - application/json
    post:
      description: ' Updates a webhook. '
      operationId: UpdateWebhook
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for a webhook. '
        explode: false
        in: path
        name: webhookId
        required: true
        schema:
          maxLength: 255
          pattern: \(\?s\).*
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWebhook_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWebhookResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentServiceFailureException'
          description: DependentServiceFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /apps/{appId}/accesslogs:
    post:
      description: ' Returns the website access logs for a specific time range using
        a presigned URL. '
      operationId: GenerateAccessLogs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateAccessLogs_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateAccessLogsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
      x-content-type: application/json
      x-accepts:
      - application/json
  /artifacts/{artifactId}:
    get:
      description: ' Returns the artifact info that corresponds to an artifact id. '
      operationId: GetArtifactUrl
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an artifact. '
        explode: false
        in: path
        name: artifactId
        required: true
        schema:
          maxLength: 255
          pattern: \(\?s\).*
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArtifactUrlResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-accepts:
      - application/json
  /apps/{appId}/branches/{branchName}/jobs/{jobId}/artifacts:
    get:
      description: " Returns a list of artifacts for a specified app, branch, and\
        \ job. "
      operationId: ListArtifacts
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      - description: ' The name of a branch that is part of an Amplify app. '
        explode: false
        in: path
        name: branchName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        style: simple
      - description: ' The unique ID for a job. '
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          maxLength: 255
          pattern: "[0-9]+"
          type: string
        style: simple
      - description: " A pagination token. Set to null to start listing artifacts\
          \ from start. If a non-null pagination token is returned in a result, pass\
          \ its value in here to list more artifacts. "
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2000
          pattern: \(\?s\).*
          type: string
        style: form
      - description: ' The maximum number of records to list in a single response. '
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListArtifactsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-accepts:
      - application/json
  /apps/{appId}/branches/{branchName}/jobs:
    get:
      description: ' Lists the jobs for a branch of an Amplify app. '
      operationId: ListJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      - description: ' The name for a branch. '
        explode: false
        in: path
        name: branchName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        style: simple
      - description: " A pagination token. Set to null to start listing steps from\
          \ the start. If a non-null pagination token is returned in a result, pass\
          \ its value in here to list more steps. "
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2000
          pattern: \(\?s\).*
          type: string
        style: form
      - description: ' The maximum number of records to list in a single response. '
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-accepts:
      - application/json
    post:
      description: ' Starts a new job for a branch of an Amplify app. '
      operationId: StartJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      - description: ' The branch name for the job. '
        explode: false
        in: path
        name: branchName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartJob_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartJobResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resourceArn}:
    get:
      description: ' Returns a list of tags for a specified Amazon Resource Name (ARN). '
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The Amazon Resource Name (ARN) to use to list tags. '
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: ^arn:aws:amplify:.*
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    post:
      description: ' Tags the resource with a tag key and value. '
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The Amazon Resource Name (ARN) to use to tag a resource. '
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: ^arn:aws:amplify:.*
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /apps/{appId}/branches/{branchName}/deployments/start:
    post:
      description: ' Starts a deployment for a manually deployed app. Manually deployed
        apps are not connected to a repository. '
      operationId: StartDeployment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      - description: " The name for the branch, for the job. "
        explode: false
        in: path
        name: branchName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartDeployment_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartDeploymentResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /apps/{appId}/branches/{branchName}/jobs/{jobId}/stop:
    delete:
      description: ' Stops a job that is in progress for a branch of an Amplify app. '
      operationId: StopJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The unique ID for an Amplify app. '
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      - description: " The name for the branch, for the job. "
        explode: false
        in: path
        name: branchName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        style: simple
      - description: ' The unique id for the job. '
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          maxLength: 255
          pattern: "[0-9]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopJobResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-accepts:
      - application/json
  /tags/{resourceArn}#tagKeys:
    delete:
      description: ' Untags a resource with a specified Amazon Resource Name (ARN). '
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The Amazon Resource Name (ARN) to use to untag a resource. '
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: ^arn:aws:amplify:.*
          type: string
        style: simple
      - description: ' The tag keys to use to untag a resource. '
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 1
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateAppResult:
      example:
        app:
          repositoryCloneMethod: ""
          basicAuthCredentials: ""
          productionBranch:
            branchName: ""
            lastDeployTime: ""
            status: ""
            thumbnailUrl: ""
          enableBasicAuth: ""
          description: ""
          updateTime: ""
          enableAutoBranchCreation: ""
          repository: ""
          defaultDomain: ""
          enableBranchAutoBuild: ""
          platform: ""
          tags: ""
          customRules: ""
          autoBranchCreationPatterns: ""
          iamServiceRoleArn: ""
          createTime: ""
          environmentVariables: ""
          appId: ""
          buildSpec: ""
          autoBranchCreationConfig:
            framework: ""
            stage: ""
            enableAutoBuild: ""
            environmentVariables: ""
            basicAuthCredentials: ""
            enablePerformanceMode: ""
            buildSpec: ""
            enablePullRequestPreview: ""
            enableBasicAuth: ""
            pullRequestEnvironmentName: ""
          appArn: ""
          name: ""
          customHeaders: ""
          enableBranchAutoDeletion: ""
      properties:
        app:
          $ref: '#/components/schemas/App'
      required:
      - app
      type: object
    EnvValue:
      maxLength: 5500
      pattern: \(\?s\).*
      type: string
    CustomRule:
      description: ' Describes a custom rewrite or redirect rule. '
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/Source'
          - description: ' The source pattern for a URL rewrite or redirect rule. '
        target:
          allOf:
          - $ref: '#/components/schemas/Target'
          - description: ' The target pattern for a URL rewrite or redirect rule. '
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: <p> The status code for a URL rewrite or redirect rule. </p>
              <dl> <dt>200</dt> <dd> <p>Represents a 200 rewrite rule.</p> </dd> <dt>301</dt>
              <dd> <p>Represents a 301 (moved pemanently) redirect rule. This and
              all future requests should be directed to the target URL. </p> </dd>
              <dt>302</dt> <dd> <p>Represents a 302 temporary redirect rule.</p> </dd>
              <dt>404</dt> <dd> <p>Represents a 404 redirect rule.</p> </dd> <dt>404-200</dt>
              <dd> <p>Represents a 404 rewrite rule.</p> </dd> </dl>
        condition:
          allOf:
          - $ref: '#/components/schemas/Condition'
          - description: " The condition for a URL rewrite or redirect rule, such\
              \ as a country code. "
      required:
      - source
      - target
      type: object
    TagValue:
      maxLength: 256
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    AutoBranchCreationPattern:
      maxLength: 2048
      minLength: 1
      pattern: \(\?s\).\+
      type: string
    Stage:
      enum:
      - PRODUCTION
      - BETA
      - DEVELOPMENT
      - EXPERIMENTAL
      - PULL_REQUEST
      type: string
    Framework:
      maxLength: 255
      pattern: \(\?s\).*
      type: string
    EnableAutoBuild:
      type: boolean
    EnvironmentVariables:
      additionalProperties:
        $ref: '#/components/schemas/EnvValue'
      type: object
    BasicAuthCredentials:
      format: password
      maxLength: 2000
      pattern: \(\?s\).*
      type: string
    EnableBasicAuth:
      type: boolean
    EnablePerformanceMode:
      type: boolean
    BuildSpec:
      description: ' The build specification (build spec) file for an Amplify app
        build. '
      format: password
      maxLength: 25000
      minLength: 1
      pattern: \(\?s\).\+
      type: string
    EnablePullRequestPreview:
      type: boolean
    PullRequestEnvironmentName:
      maxLength: 20
      pattern: \(\?s\).*
      type: string
    BadRequestException: {}
    UnauthorizedException: {}
    InternalFailureException: {}
    LimitExceededException: {}
    DependentServiceFailureException: {}
    CreateBackendEnvironmentResult:
      description: ' The result structure for the create backend environment request. '
      example:
        backendEnvironment:
          backendEnvironmentArn: ""
          createTime: ""
          environmentName: ""
          deploymentArtifacts: ""
          stackName: ""
          updateTime: ""
      properties:
        backendEnvironment:
          $ref: '#/components/schemas/CreateBackendEnvironmentResult_backendEnvironment'
      required:
      - backendEnvironment
      type: object
    NotFoundException: {}
    CreateBranchResult:
      description: ' The result structure for create branch request. '
      example:
        branch:
          displayName: ""
          basicAuthCredentials: ""
          description: ""
          backendEnvironmentArn: ""
          customDomains: ""
          branchArn: ""
          enableNotification: ""
          thumbnailUrl: ""
          sourceBranch: ""
          enableAutoBuild: ""
          totalNumberOfJobs: ""
          enablePerformanceMode: ""
          enablePullRequestPreview: ""
          enableBasicAuth: ""
          branchName: ""
          updateTime: ""
          ttl: ""
          tags: ""
          framework: ""
          stage: ""
          createTime: ""
          environmentVariables: ""
          buildSpec: ""
          activeJobId: ""
          associatedResources: ""
          pullRequestEnvironmentName: ""
          destinationBranch: ""
      properties:
        branch:
          $ref: '#/components/schemas/CreateBranchResult_branch'
      required:
      - branch
      type: object
    CreateDeploymentResult:
      description: ' The result structure for the create a new deployment request. '
      example:
        jobId: ""
        zipUploadUrl: ""
        fileUploadUrls: ""
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: ' The job ID for this deployment. will supply to start deployment
              api. '
        fileUploadUrls:
          allOf:
          - $ref: '#/components/schemas/FileUploadUrls'
          - description: " When the <code>fileMap</code> argument is provided in the\
              \ request, <code>fileUploadUrls</code> will contain a map of file names\
              \ to upload URLs. "
        zipUploadUrl:
          allOf:
          - $ref: '#/components/schemas/UploadUrl'
          - description: " When the <code>fileMap</code> argument is not provided\
              \ in the request, this <code>zipUploadUrl</code> is returned. "
      required:
      - fileUploadUrls
      - zipUploadUrl
      type: object
    MD5Hash:
      maxLength: 32
      pattern: \(\?s\).*
      type: string
    CreateDomainAssociationResult:
      description: ' The result structure for the create domain association request. '
      example:
        domainAssociation:
          autoSubDomainCreationPatterns: ""
          certificateVerificationDNSRecord: ""
          enableAutoSubDomain: ""
          statusReason: ""
          domainName: ""
          subDomains: ""
          domainAssociationArn: ""
          domainStatus: ""
          autoSubDomainIAMRole: ""
      properties:
        domainAssociation:
          $ref: '#/components/schemas/CreateDomainAssociationResult_domainAssociation'
      required:
      - domainAssociation
      type: object
    SubDomainSetting:
      description: ' Describes the settings for the subdomain. '
      properties:
        prefix:
          allOf:
          - $ref: '#/components/schemas/DomainPrefix'
          - description: ' The prefix setting for the subdomain. '
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          - description: ' The branch name setting for the subdomain. '
      required:
      - branchName
      - prefix
      type: object
    AutoSubDomainCreationPattern:
      maxLength: 2048
      minLength: 1
      pattern: \(\?s\).\+
      type: string
    CreateWebhookResult:
      description: ' The result structure for the create webhook request. '
      example:
        webhook:
          webhookArn: ""
          webhookId: ""
          createTime: ""
          branchName: ""
          description: ""
          updateTime: ""
          webhookUrl: ""
      properties:
        webhook:
          $ref: '#/components/schemas/CreateWebhookResult_webhook'
      required:
      - webhook
      type: object
    DeleteAppResult:
      description: ' The result structure for the delete app request. '
      example:
        app:
          repositoryCloneMethod: ""
          basicAuthCredentials: ""
          productionBranch:
            branchName: ""
            lastDeployTime: ""
            status: ""
            thumbnailUrl: ""
          enableBasicAuth: ""
          description: ""
          updateTime: ""
          enableAutoBranchCreation: ""
          repository: ""
          defaultDomain: ""
          enableBranchAutoBuild: ""
          platform: ""
          tags: ""
          customRules: ""
          autoBranchCreationPatterns: ""
          iamServiceRoleArn: ""
          createTime: ""
          environmentVariables: ""
          appId: ""
          buildSpec: ""
          autoBranchCreationConfig:
            framework: ""
            stage: ""
            enableAutoBuild: ""
            environmentVariables: ""
            basicAuthCredentials: ""
            enablePerformanceMode: ""
            buildSpec: ""
            enablePullRequestPreview: ""
            enableBasicAuth: ""
            pullRequestEnvironmentName: ""
          appArn: ""
          name: ""
          customHeaders: ""
          enableBranchAutoDeletion: ""
      properties:
        app:
          $ref: '#/components/schemas/App'
      required:
      - app
      type: object
    DeleteBackendEnvironmentResult:
      description: ' The result structure of the delete backend environment result. '
      example:
        backendEnvironment:
          backendEnvironmentArn: ""
          createTime: ""
          environmentName: ""
          deploymentArtifacts: ""
          stackName: ""
          updateTime: ""
      properties:
        backendEnvironment:
          $ref: '#/components/schemas/CreateBackendEnvironmentResult_backendEnvironment'
      required:
      - backendEnvironment
      type: object
    DeleteBranchResult:
      description: ' The result structure for the delete branch request. '
      example:
        branch:
          displayName: ""
          basicAuthCredentials: ""
          description: ""
          backendEnvironmentArn: ""
          customDomains: ""
          branchArn: ""
          enableNotification: ""
          thumbnailUrl: ""
          sourceBranch: ""
          enableAutoBuild: ""
          totalNumberOfJobs: ""
          enablePerformanceMode: ""
          enablePullRequestPreview: ""
          enableBasicAuth: ""
          branchName: ""
          updateTime: ""
          ttl: ""
          tags: ""
          framework: ""
          stage: ""
          createTime: ""
          environmentVariables: ""
          buildSpec: ""
          activeJobId: ""
          associatedResources: ""
          pullRequestEnvironmentName: ""
          destinationBranch: ""
      properties:
        branch:
          $ref: '#/components/schemas/DeleteBranchResult_branch'
      required:
      - branch
      type: object
    DeleteDomainAssociationResult:
      example:
        domainAssociation:
          autoSubDomainCreationPatterns: ""
          certificateVerificationDNSRecord: ""
          enableAutoSubDomain: ""
          statusReason: ""
          domainName: ""
          subDomains: ""
          domainAssociationArn: ""
          domainStatus: ""
          autoSubDomainIAMRole: ""
      properties:
        domainAssociation:
          $ref: '#/components/schemas/DomainAssociation'
      required:
      - domainAssociation
      type: object
    DeleteJobResult:
      description: ' The result structure for the delete job request. '
      example:
        jobSummary:
          jobId: ""
          commitMessage: ""
          commitTime: ""
          startTime: ""
          jobArn: ""
          commitId: ""
          endTime: ""
          jobType: ""
          status: ""
      properties:
        jobSummary:
          $ref: '#/components/schemas/JobSummary'
      required:
      - jobSummary
      type: object
    DeleteWebhookResult:
      description: ' The result structure for the delete webhook request. '
      example:
        webhook:
          webhookArn: ""
          webhookId: ""
          createTime: ""
          branchName: ""
          description: ""
          updateTime: ""
          webhookUrl: ""
      properties:
        webhook:
          $ref: '#/components/schemas/CreateWebhookResult_webhook'
      required:
      - webhook
      type: object
    GenerateAccessLogsResult:
      description: ' The result structure for the generate access logs request. '
      example:
        logUrl: ""
      properties:
        logUrl:
          allOf:
          - $ref: '#/components/schemas/LogUrl'
          - description: ' The pre-signed URL for the requested access logs. '
      type: object
    GetAppResult:
      example:
        app:
          repositoryCloneMethod: ""
          basicAuthCredentials: ""
          productionBranch:
            branchName: ""
            lastDeployTime: ""
            status: ""
            thumbnailUrl: ""
          enableBasicAuth: ""
          description: ""
          updateTime: ""
          enableAutoBranchCreation: ""
          repository: ""
          defaultDomain: ""
          enableBranchAutoBuild: ""
          platform: ""
          tags: ""
          customRules: ""
          autoBranchCreationPatterns: ""
          iamServiceRoleArn: ""
          createTime: ""
          environmentVariables: ""
          appId: ""
          buildSpec: ""
          autoBranchCreationConfig:
            framework: ""
            stage: ""
            enableAutoBuild: ""
            environmentVariables: ""
            basicAuthCredentials: ""
            enablePerformanceMode: ""
            buildSpec: ""
            enablePullRequestPreview: ""
            enableBasicAuth: ""
            pullRequestEnvironmentName: ""
          appArn: ""
          name: ""
          customHeaders: ""
          enableBranchAutoDeletion: ""
      properties:
        app:
          $ref: '#/components/schemas/App'
      required:
      - app
      type: object
    GetArtifactUrlResult:
      description: ' Returns the result structure for the get artifact request. '
      example:
        artifactUrl: ""
        artifactId: ""
      properties:
        artifactId:
          allOf:
          - $ref: '#/components/schemas/ArtifactId'
          - description: ' The unique ID for an artifact. '
        artifactUrl:
          allOf:
          - $ref: '#/components/schemas/ArtifactUrl'
          - description: ' The presigned URL for the artifact. '
      required:
      - artifactId
      - artifactUrl
      type: object
    GetBackendEnvironmentResult:
      description: ' The result structure for the get backend environment result. '
      example:
        backendEnvironment:
          backendEnvironmentArn: ""
          createTime: ""
          environmentName: ""
          deploymentArtifacts: ""
          stackName: ""
          updateTime: ""
      properties:
        backendEnvironment:
          $ref: '#/components/schemas/CreateBackendEnvironmentResult_backendEnvironment'
      required:
      - backendEnvironment
      type: object
    GetBranchResult:
      example:
        branch:
          displayName: ""
          basicAuthCredentials: ""
          description: ""
          backendEnvironmentArn: ""
          customDomains: ""
          branchArn: ""
          enableNotification: ""
          thumbnailUrl: ""
          sourceBranch: ""
          enableAutoBuild: ""
          totalNumberOfJobs: ""
          enablePerformanceMode: ""
          enablePullRequestPreview: ""
          enableBasicAuth: ""
          branchName: ""
          updateTime: ""
          ttl: ""
          tags: ""
          framework: ""
          stage: ""
          createTime: ""
          environmentVariables: ""
          buildSpec: ""
          activeJobId: ""
          associatedResources: ""
          pullRequestEnvironmentName: ""
          destinationBranch: ""
      properties:
        branch:
          $ref: '#/components/schemas/Branch'
      required:
      - branch
      type: object
    GetDomainAssociationResult:
      description: ' The result structure for the get domain association request. '
      example:
        domainAssociation:
          autoSubDomainCreationPatterns: ""
          certificateVerificationDNSRecord: ""
          enableAutoSubDomain: ""
          statusReason: ""
          domainName: ""
          subDomains: ""
          domainAssociationArn: ""
          domainStatus: ""
          autoSubDomainIAMRole: ""
      properties:
        domainAssociation:
          $ref: '#/components/schemas/CreateDomainAssociationResult_domainAssociation'
      required:
      - domainAssociation
      type: object
    GetJobResult:
      example:
        job:
          summary:
            jobId: ""
            commitMessage: ""
            commitTime: ""
            startTime: ""
            jobArn: ""
            commitId: ""
            endTime: ""
            jobType: ""
            status: ""
          steps: ""
      properties:
        job:
          $ref: '#/components/schemas/Job'
      required:
      - job
      type: object
    GetWebhookResult:
      description: ' The result structure for the get webhook request. '
      example:
        webhook:
          webhookArn: ""
          webhookId: ""
          createTime: ""
          branchName: ""
          description: ""
          updateTime: ""
          webhookUrl: ""
      properties:
        webhook:
          $ref: '#/components/schemas/GetWebhookResult_webhook'
      required:
      - webhook
      type: object
    ListAppsResult:
      description: ' The result structure for an Amplify app list request. '
      example:
        nextToken: ""
        apps: ""
      properties:
        apps:
          allOf:
          - $ref: '#/components/schemas/Apps'
          - description: ' A list of Amplify apps. '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: " A pagination token. Set to null to start listing apps from\
              \ start. If non-null, the pagination token is returned in a result.\
              \ Pass its value in here to list more projects. "
      required:
      - apps
      type: object
    ListArtifactsResult:
      description: ' The result structure for the list artifacts request. '
      example:
        nextToken: ""
        artifacts: ""
      properties:
        artifacts:
          allOf:
          - $ref: '#/components/schemas/Artifacts'
          - description: ' A list of artifacts. '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: " A pagination token. If a non-null pagination token is returned\
              \ in a result, pass its value in another request to retrieve more entries. "
      required:
      - artifacts
      type: object
    ListBackendEnvironmentsResult:
      description: ' The result structure for the list backend environments result. '
      example:
        backendEnvironments: ""
        nextToken: ""
      properties:
        backendEnvironments:
          allOf:
          - $ref: '#/components/schemas/BackendEnvironments'
          - description: ' The list of backend environments for an Amplify app. '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: " A pagination token. If a non-null pagination token is returned\
              \ in a result, pass its value in another request to retrieve more entries. "
      required:
      - backendEnvironments
      type: object
    ListBranchesResult:
      description: ' The result structure for the list branches request. '
      example:
        nextToken: ""
        branches: ""
      properties:
        branches:
          allOf:
          - $ref: '#/components/schemas/Branches'
          - description: ' A list of branches for an Amplify app. '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: " A pagination token. If a non-null pagination token is returned\
              \ in a result, pass its value in another request to retrieve more entries. "
      required:
      - branches
      type: object
    ListDomainAssociationsResult:
      description: ' The result structure for the list domain association request. '
      example:
        domainAssociations: ""
        nextToken: ""
      properties:
        domainAssociations:
          allOf:
          - $ref: '#/components/schemas/DomainAssociations'
          - description: ' A list of domain associations. '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: " A pagination token. If non-null, a pagination token is\
              \ returned in a result. Pass its value in another request to retrieve\
              \ more entries. "
      required:
      - domainAssociations
      type: object
    ListJobsResult:
      description: ' The maximum number of records to list in a single response. '
      example:
        jobSummaries: ""
        nextToken: ""
      properties:
        jobSummaries:
          allOf:
          - $ref: '#/components/schemas/JobSummaries'
          - description: ' The result structure for the list job result request. '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' A pagination token. If non-null the pagination token is
              returned in a result. Pass its value in another request to retrieve
              more entries. '
      required:
      - jobSummaries
      type: object
    ListTagsForResourceResponse:
      description: ' The response for the list tags for resource request. '
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: ' A list of tags for the specified The Amazon Resource Name
              (ARN). '
      type: object
    ResourceNotFoundException: {}
    ListWebhooksResult:
      description: ' The result structure for the list webhooks request. '
      example:
        webhooks: ""
        nextToken: ""
      properties:
        webhooks:
          allOf:
          - $ref: '#/components/schemas/Webhooks'
          - description: ' A list of webhooks. '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: " A pagination token. If non-null, the pagination token is\
              \ returned in a result. Pass its value in another request to retrieve\
              \ more entries. "
      required:
      - webhooks
      type: object
    StartDeploymentResult:
      description: ' The result structure for the start a deployment request. '
      example:
        jobSummary:
          jobId: ""
          commitMessage: ""
          commitTime: ""
          startTime: ""
          jobArn: ""
          commitId: ""
          endTime: ""
          jobType: ""
          status: ""
      properties:
        jobSummary:
          $ref: '#/components/schemas/StartDeploymentResult_jobSummary'
      required:
      - jobSummary
      type: object
    StartJobResult:
      description: ' The result structure for the run job request. '
      example:
        jobSummary:
          jobId: ""
          commitMessage: ""
          commitTime: ""
          startTime: ""
          jobArn: ""
          commitId: ""
          endTime: ""
          jobType: ""
          status: ""
      properties:
        jobSummary:
          $ref: '#/components/schemas/StartDeploymentResult_jobSummary'
      required:
      - jobSummary
      type: object
    StopJobResult:
      description: ' The result structure for the stop job request. '
      example:
        jobSummary:
          jobId: ""
          commitMessage: ""
          commitTime: ""
          startTime: ""
          jobArn: ""
          commitId: ""
          endTime: ""
          jobType: ""
          status: ""
      properties:
        jobSummary:
          $ref: '#/components/schemas/StartDeploymentResult_jobSummary'
      required:
      - jobSummary
      type: object
    TagResourceResponse:
      description: ' The response for the tag resource request. '
      properties: {}
      type: object
    UntagResourceResponse:
      description: ' The response for the untag resource request. '
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^(?!aws:)[a-zA-Z+-=._:/]+$"
      type: string
    UpdateAppResult:
      description: ' The result structure for an Amplify app update request. '
      example:
        app:
          repositoryCloneMethod: ""
          basicAuthCredentials: ""
          productionBranch:
            branchName: ""
            lastDeployTime: ""
            status: ""
            thumbnailUrl: ""
          enableBasicAuth: ""
          description: ""
          updateTime: ""
          enableAutoBranchCreation: ""
          repository: ""
          defaultDomain: ""
          enableBranchAutoBuild: ""
          platform: ""
          tags: ""
          customRules: ""
          autoBranchCreationPatterns: ""
          iamServiceRoleArn: ""
          createTime: ""
          environmentVariables: ""
          appId: ""
          buildSpec: ""
          autoBranchCreationConfig:
            framework: ""
            stage: ""
            enableAutoBuild: ""
            environmentVariables: ""
            basicAuthCredentials: ""
            enablePerformanceMode: ""
            buildSpec: ""
            enablePullRequestPreview: ""
            enableBasicAuth: ""
            pullRequestEnvironmentName: ""
          appArn: ""
          name: ""
          customHeaders: ""
          enableBranchAutoDeletion: ""
      properties:
        app:
          $ref: '#/components/schemas/UpdateAppResult_app'
      required:
      - app
      type: object
    UpdateBranchResult:
      description: ' The result structure for the update branch request. '
      example:
        branch:
          displayName: ""
          basicAuthCredentials: ""
          description: ""
          backendEnvironmentArn: ""
          customDomains: ""
          branchArn: ""
          enableNotification: ""
          thumbnailUrl: ""
          sourceBranch: ""
          enableAutoBuild: ""
          totalNumberOfJobs: ""
          enablePerformanceMode: ""
          enablePullRequestPreview: ""
          enableBasicAuth: ""
          branchName: ""
          updateTime: ""
          ttl: ""
          tags: ""
          framework: ""
          stage: ""
          createTime: ""
          environmentVariables: ""
          buildSpec: ""
          activeJobId: ""
          associatedResources: ""
          pullRequestEnvironmentName: ""
          destinationBranch: ""
      properties:
        branch:
          $ref: '#/components/schemas/DeleteBranchResult_branch'
      required:
      - branch
      type: object
    UpdateDomainAssociationResult:
      description: ' The result structure for the update domain association request. '
      example:
        domainAssociation:
          autoSubDomainCreationPatterns: ""
          certificateVerificationDNSRecord: ""
          enableAutoSubDomain: ""
          statusReason: ""
          domainName: ""
          subDomains: ""
          domainAssociationArn: ""
          domainStatus: ""
          autoSubDomainIAMRole: ""
      properties:
        domainAssociation:
          $ref: '#/components/schemas/UpdateDomainAssociationResult_domainAssociation'
      required:
      - domainAssociation
      type: object
    UpdateWebhookResult:
      description: ' The result structure for the update webhook request. '
      example:
        webhook:
          webhookArn: ""
          webhookId: ""
          createTime: ""
          branchName: ""
          description: ""
          updateTime: ""
          webhookUrl: ""
      properties:
        webhook:
          $ref: '#/components/schemas/CreateWebhookResult_webhook'
      required:
      - webhook
      type: object
    AccessToken:
      format: password
      maxLength: 255
      minLength: 1
      pattern: \(\?s\).\+
      type: string
    ActiveJobId:
      maxLength: 1000
      type: string
    AppId:
      maxLength: 20
      minLength: 1
      pattern: "d[a-z0-9]+"
      type: string
    AppArn:
      maxLength: 1000
      type: string
    Name:
      maxLength: 255
      minLength: 1
      pattern: \(\?s\).\+
      type: string
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 50
      minProperties: 0
      type: object
    Description:
      maxLength: 1000
      pattern: \(\?s\).*
      type: string
    Repository:
      maxLength: 1000
      pattern: \(\?s\).*
      type: string
    Platform:
      enum:
      - WEB
      - WEB_DYNAMIC
      - WEB_COMPUTE
      type: string
    CreateTime:
      format: date-time
      type: string
    UpdateTime:
      format: date-time
      type: string
    ServiceRoleArn:
      maxLength: 1000
      minLength: 0
      pattern: \(\?s\).*
      type: string
    DefaultDomain:
      maxLength: 1000
      minLength: 1
      type: string
    EnableBranchAutoBuild:
      type: boolean
    EnableBranchAutoDeletion:
      type: boolean
    CustomRules:
      items:
        $ref: '#/components/schemas/CustomRule'
      type: array
    ProductionBranch:
      description: ' Describes the information about a production branch for an Amplify
        app. '
      properties:
        lastDeployTime:
          allOf:
          - $ref: '#/components/schemas/LastDeployTime'
          - description: ' The last deploy time of the production branch. '
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: ' The status of the production branch. '
        thumbnailUrl:
          allOf:
          - $ref: '#/components/schemas/ThumbnailUrl'
          - description: ' The thumbnail URL for the production branch. '
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          - description: ' The branch name for the production branch. '
      type: object
    CustomHeaders:
      maxLength: 25000
      minLength: 0
      pattern: \(\?s\).*
      type: string
    EnableAutoBranchCreation:
      type: boolean
    AutoBranchCreationPatterns:
      items:
        $ref: '#/components/schemas/AutoBranchCreationPattern'
      type: array
    AutoBranchCreationConfig:
      description: ' Describes the automated branch creation configuration. '
      properties:
        stage:
          allOf:
          - $ref: '#/components/schemas/Stage'
          - description: ' Describes the current stage for the autocreated branch. '
        framework:
          allOf:
          - $ref: '#/components/schemas/Framework'
          - description: ' The framework for the autocreated branch. '
        enableAutoBuild:
          allOf:
          - $ref: '#/components/schemas/EnableAutoBuild'
          - description: ' Enables auto building for the autocreated branch. '
        environmentVariables:
          allOf:
          - $ref: '#/components/schemas/EnvironmentVariables'
          - description: ' The environment variables for the autocreated branch. '
        basicAuthCredentials:
          allOf:
          - $ref: '#/components/schemas/BasicAuthCredentials'
          - description: ' The basic authorization credentials for the autocreated
              branch. You must base64-encode the authorization credentials and provide
              them in the format <code>user:password</code>.'
        enableBasicAuth:
          allOf:
          - $ref: '#/components/schemas/EnableBasicAuth'
          - description: ' Enables basic authorization for the autocreated branch. '
        enablePerformanceMode:
          allOf:
          - $ref: '#/components/schemas/EnablePerformanceMode'
          - description: "<p>Enables performance mode for the branch.</p> <p>Performance\
              \ mode optimizes for faster hosting performance by keeping content cached\
              \ at the edge for a longer interval. When performance mode is enabled,\
              \ hosting configuration or code changes can take up to 10 minutes to\
              \ roll out. </p>"
        buildSpec:
          allOf:
          - $ref: '#/components/schemas/BuildSpec'
          - description: ' The build specification (build spec) for the autocreated
              branch. '
        enablePullRequestPreview:
          allOf:
          - $ref: '#/components/schemas/EnablePullRequestPreview'
          - description: ' Enables pull request previews for the autocreated branch. '
        pullRequestEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/PullRequestEnvironmentName'
          - description: ' The Amplify environment name for the pull request. '
      type: object
    RepositoryCloneMethod:
      enum:
      - SSH
      - TOKEN
      - SIGV4
      type: string
    App:
      description: " Represents the different branches of a repository for building,\
        \ deploying, and hosting an Amplify app. "
      example:
        repositoryCloneMethod: ""
        basicAuthCredentials: ""
        productionBranch:
          branchName: ""
          lastDeployTime: ""
          status: ""
          thumbnailUrl: ""
        enableBasicAuth: ""
        description: ""
        updateTime: ""
        enableAutoBranchCreation: ""
        repository: ""
        defaultDomain: ""
        enableBranchAutoBuild: ""
        platform: ""
        tags: ""
        customRules: ""
        autoBranchCreationPatterns: ""
        iamServiceRoleArn: ""
        createTime: ""
        environmentVariables: ""
        appId: ""
        buildSpec: ""
        autoBranchCreationConfig:
          framework: ""
          stage: ""
          enableAutoBuild: ""
          environmentVariables: ""
          basicAuthCredentials: ""
          enablePerformanceMode: ""
          buildSpec: ""
          enablePullRequestPreview: ""
          enableBasicAuth: ""
          pullRequestEnvironmentName: ""
        appArn: ""
        name: ""
        customHeaders: ""
        enableBranchAutoDeletion: ""
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          - description: ' The unique ID of the Amplify app. '
        appArn:
          allOf:
          - $ref: '#/components/schemas/AppArn'
          - description: ' The Amazon Resource Name (ARN) of the Amplify app. '
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: ' The name for the Amplify app. '
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: ' The tag for the Amplify app. '
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: ' The description for the Amplify app. '
        repository:
          allOf:
          - $ref: '#/components/schemas/Repository'
          - description: ' The Git repository for the Amplify app. '
        platform:
          allOf:
          - $ref: '#/components/schemas/Platform'
          - description: " The platform for the Amplify app. For a static app, set\
              \ the platform type to <code>WEB</code>. For a dynamic server-side rendered\
              \ (SSR) app, set the platform type to <code>WEB_COMPUTE</code>. For\
              \ an app requiring Amplify Hosting's original SSR support only, set\
              \ the platform type to <code>WEB_DYNAMIC</code>."
        createTime:
          allOf:
          - $ref: '#/components/schemas/CreateTime'
          - description: ' Creates a date and time for the Amplify app. '
        updateTime:
          allOf:
          - $ref: '#/components/schemas/UpdateTime'
          - description: ' Updates the date and time for the Amplify app. '
        iamServiceRoleArn:
          allOf:
          - $ref: '#/components/schemas/ServiceRoleArn'
          - description: ' The AWS Identity and Access Management (IAM) service role
              for the Amazon Resource Name (ARN) of the Amplify app. '
        environmentVariables:
          allOf:
          - $ref: '#/components/schemas/EnvironmentVariables'
          - description: ' The environment variables for the Amplify app. '
        defaultDomain:
          allOf:
          - $ref: '#/components/schemas/DefaultDomain'
          - description: ' The default domain for the Amplify app. '
        enableBranchAutoBuild:
          allOf:
          - $ref: '#/components/schemas/EnableBranchAutoBuild'
          - description: ' Enables the auto-building of branches for the Amplify app. '
        enableBranchAutoDeletion:
          allOf:
          - $ref: '#/components/schemas/EnableBranchAutoDeletion'
          - description: ' Automatically disconnect a branch in the Amplify Console
              when you delete a branch from your Git repository. '
        enableBasicAuth:
          allOf:
          - $ref: '#/components/schemas/EnableBasicAuth'
          - description: ' Enables basic authorization for the Amplify app''s branches. '
        basicAuthCredentials:
          allOf:
          - $ref: '#/components/schemas/BasicAuthCredentials'
          - description: ' The basic authorization credentials for branches for the
              Amplify app. You must base64-encode the authorization credentials and
              provide them in the format <code>user:password</code>.'
        customRules:
          allOf:
          - $ref: '#/components/schemas/CustomRules'
          - description: ' Describes the custom redirect and rewrite rules for the
              Amplify app. '
        productionBranch:
          $ref: '#/components/schemas/App_productionBranch'
        buildSpec:
          allOf:
          - $ref: '#/components/schemas/BuildSpec'
          - description: ' Describes the content of the build specification (build
              spec) for the Amplify app. '
        customHeaders:
          allOf:
          - $ref: '#/components/schemas/CustomHeaders'
          - description: Describes the custom HTTP headers for the Amplify app.
        enableAutoBranchCreation:
          allOf:
          - $ref: '#/components/schemas/EnableAutoBranchCreation'
          - description: ' Enables automated branch creation for the Amplify app. '
        autoBranchCreationPatterns:
          allOf:
          - $ref: '#/components/schemas/AutoBranchCreationPatterns'
          - description: ' Describes the automated branch creation glob patterns for
              the Amplify app. '
        autoBranchCreationConfig:
          $ref: '#/components/schemas/App_autoBranchCreationConfig'
        repositoryCloneMethod:
          allOf:
          - $ref: '#/components/schemas/RepositoryCloneMethod'
          - description: "<note> <p>This is for internal use.</p> </note> <p>The Amplify\
              \ service uses this parameter to specify the authentication protocol\
              \ to use to access the Git repository for an Amplify app. Amplify specifies\
              \ <code>TOKEN</code> for a GitHub repository, <code>SIGV4</code> for\
              \ an Amazon Web Services CodeCommit repository, and <code>SSH</code>\
              \ for GitLab and Bitbucket repositories.</p>"
      required:
      - appArn
      - appId
      - createTime
      - defaultDomain
      - description
      - enableBasicAuth
      - enableBranchAutoBuild
      - environmentVariables
      - name
      - platform
      - repository
      - updateTime
      type: object
    Apps:
      items:
        $ref: '#/components/schemas/App'
      type: array
    ArtifactFileName:
      maxLength: 1000
      type: string
    ArtifactId:
      maxLength: 255
      pattern: \(\?s\).*
      type: string
    Artifact:
      description: ' Describes an artifact. '
      properties:
        artifactFileName:
          allOf:
          - $ref: '#/components/schemas/ArtifactFileName'
          - description: ' The file name for the artifact. '
        artifactId:
          allOf:
          - $ref: '#/components/schemas/ArtifactId'
          - description: ' The unique ID for the artifact. '
      required:
      - artifactFileName
      - artifactId
      type: object
    ArtifactUrl:
      maxLength: 1000
      type: string
    Artifacts:
      items:
        $ref: '#/components/schemas/Artifact'
      type: array
    ArtifactsUrl:
      maxLength: 1000
      type: string
    AssociatedResource:
      maxLength: 2048
      minLength: 1
      type: string
    AssociatedResources:
      items:
        $ref: '#/components/schemas/AssociatedResource'
      type: array
    AutoSubDomainCreationPatterns:
      items:
        $ref: '#/components/schemas/AutoSubDomainCreationPattern'
      type: array
    AutoSubDomainIAMRole:
      maxLength: 1000
      pattern: "^$|^arn:aws:iam::\\d{12}:role.+"
      type: string
    BackendEnvironmentArn:
      maxLength: 1000
      minLength: 0
      pattern: \(\?s\).*
      type: string
    EnvironmentName:
      maxLength: 255
      minLength: 1
      pattern: \(\?s\).\+
      type: string
    StackName:
      maxLength: 255
      minLength: 1
      pattern: \(\?s\).\+
      type: string
    DeploymentArtifacts:
      maxLength: 1000
      minLength: 1
      pattern: \(\?s\).\+
      type: string
    BackendEnvironment:
      description: ' Describes the backend environment for an Amplify app. '
      properties:
        backendEnvironmentArn:
          allOf:
          - $ref: '#/components/schemas/BackendEnvironmentArn'
          - description: ' The Amazon Resource Name (ARN) for a backend environment
              that is part of an Amplify app. '
        environmentName:
          allOf:
          - $ref: '#/components/schemas/EnvironmentName'
          - description: ' The name for a backend environment that is part of an Amplify
              app. '
        stackName:
          allOf:
          - $ref: '#/components/schemas/StackName'
          - description: ' The AWS CloudFormation stack name of a backend environment. '
        deploymentArtifacts:
          allOf:
          - $ref: '#/components/schemas/DeploymentArtifacts'
          - description: ' The name of deployment artifacts. '
        createTime:
          allOf:
          - $ref: '#/components/schemas/CreateTime'
          - description: ' The creation date and time for a backend environment that
              is part of an Amplify app. '
        updateTime:
          allOf:
          - $ref: '#/components/schemas/UpdateTime'
          - description: ' The last updated date and time for a backend environment
              that is part of an Amplify app. '
      required:
      - backendEnvironmentArn
      - createTime
      - environmentName
      - updateTime
      type: object
    BackendEnvironments:
      items:
        $ref: '#/components/schemas/BackendEnvironment'
      type: array
    BranchArn:
      maxLength: 1000
      pattern: \(\?s\).*
      type: string
    BranchName:
      maxLength: 255
      minLength: 1
      pattern: \(\?s\).\+
      type: string
    DisplayName:
      maxLength: 255
      pattern: \(\?s\).*
      type: string
    EnableNotification:
      type: boolean
    CustomDomains:
      items:
        $ref: '#/components/schemas/CustomDomain'
      maxItems: 255
      type: array
    TotalNumberOfJobs:
      maxLength: 1000
      type: string
    ThumbnailUrl:
      maxLength: 2000
      minLength: 1
      type: string
    TTL:
      description: ' The content Time to Live (TTL) for the website in seconds. '
      maxLength: 32
      minLength: 0
      pattern: \d*
      type: string
    Branch:
      description: " The branch for an Amplify app, which maps to a third-party repository\
        \ branch. "
      example:
        displayName: ""
        basicAuthCredentials: ""
        description: ""
        backendEnvironmentArn: ""
        customDomains: ""
        branchArn: ""
        enableNotification: ""
        thumbnailUrl: ""
        sourceBranch: ""
        enableAutoBuild: ""
        totalNumberOfJobs: ""
        enablePerformanceMode: ""
        enablePullRequestPreview: ""
        enableBasicAuth: ""
        branchName: ""
        updateTime: ""
        ttl: ""
        tags: ""
        framework: ""
        stage: ""
        createTime: ""
        environmentVariables: ""
        buildSpec: ""
        activeJobId: ""
        associatedResources: ""
        pullRequestEnvironmentName: ""
        destinationBranch: ""
      properties:
        branchArn:
          allOf:
          - $ref: '#/components/schemas/BranchArn'
          - description: ' The Amazon Resource Name (ARN) for a branch that is part
              of an Amplify app. '
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          - description: ' The name for the branch that is part of an Amplify app. '
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: ' The description for the branch that is part of an Amplify
              app. '
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: ' The tag for the branch of an Amplify app. '
        stage:
          allOf:
          - $ref: '#/components/schemas/Stage'
          - description: ' The current stage for the branch that is part of an Amplify
              app. '
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: ' The display name for the branch. This is used as the default
              domain prefix. '
        enableNotification:
          allOf:
          - $ref: '#/components/schemas/EnableNotification'
          - description: ' Enables notifications for a branch that is part of an Amplify
              app. '
        createTime:
          allOf:
          - $ref: '#/components/schemas/CreateTime'
          - description: ' The creation date and time for a branch that is part of
              an Amplify app. '
        updateTime:
          allOf:
          - $ref: '#/components/schemas/UpdateTime'
          - description: ' The last updated date and time for a branch that is part
              of an Amplify app. '
        environmentVariables:
          allOf:
          - $ref: '#/components/schemas/EnvironmentVariables'
          - description: ' The environment variables specific to a branch of an Amplify
              app. '
        enableAutoBuild:
          allOf:
          - $ref: '#/components/schemas/EnableAutoBuild'
          - description: ' Enables auto-building on push for a branch of an Amplify
              app. '
        customDomains:
          allOf:
          - $ref: '#/components/schemas/CustomDomains'
          - description: ' The custom domains for a branch of an Amplify app. '
        framework:
          allOf:
          - $ref: '#/components/schemas/Framework'
          - description: ' The framework for a branch of an Amplify app. '
        activeJobId:
          allOf:
          - $ref: '#/components/schemas/ActiveJobId'
          - description: ' The ID of the active job for a branch of an Amplify app. '
        totalNumberOfJobs:
          allOf:
          - $ref: '#/components/schemas/TotalNumberOfJobs'
          - description: ' The total number of jobs that are part of an Amplify app. '
        enableBasicAuth:
          allOf:
          - $ref: '#/components/schemas/EnableBasicAuth'
          - description: ' Enables basic authorization for a branch of an Amplify
              app. '
        enablePerformanceMode:
          allOf:
          - $ref: '#/components/schemas/EnablePerformanceMode'
          - description: "<p>Enables performance mode for the branch.</p> <p>Performance\
              \ mode optimizes for faster hosting performance by keeping content cached\
              \ at the edge for a longer interval. When performance mode is enabled,\
              \ hosting configuration or code changes can take up to 10 minutes to\
              \ roll out. </p>"
        thumbnailUrl:
          allOf:
          - $ref: '#/components/schemas/ThumbnailUrl'
          - description: ' The thumbnail URL for the branch of an Amplify app. '
        basicAuthCredentials:
          allOf:
          - $ref: '#/components/schemas/BasicAuthCredentials'
          - description: ' The basic authorization credentials for a branch of an
              Amplify app. You must base64-encode the authorization credentials and
              provide them in the format <code>user:password</code>.'
        buildSpec:
          allOf:
          - $ref: '#/components/schemas/BuildSpec'
          - description: ' The build specification (build spec) content for the branch
              of an Amplify app. '
        ttl:
          allOf:
          - $ref: '#/components/schemas/TTL'
          - description: ' The content Time to Live (TTL) for the website in seconds. '
        associatedResources:
          allOf:
          - $ref: '#/components/schemas/AssociatedResources'
          - description: ' A list of custom resources that are linked to this branch. '
        enablePullRequestPreview:
          allOf:
          - $ref: '#/components/schemas/EnablePullRequestPreview'
          - description: ' Enables pull request previews for the branch. '
        pullRequestEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/PullRequestEnvironmentName'
          - description: ' The Amplify environment name for the pull request. '
        destinationBranch:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          - description: ' The destination branch if the branch is a pull request
              branch. '
        sourceBranch:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          - description: ' The source branch if the branch is a pull request branch. '
        backendEnvironmentArn:
          allOf:
          - $ref: '#/components/schemas/BackendEnvironmentArn'
          - description: ' The Amazon Resource Name (ARN) for a backend environment
              that is part of an Amplify app. '
      required:
      - activeJobId
      - branchArn
      - branchName
      - createTime
      - customDomains
      - description
      - displayName
      - enableAutoBuild
      - enableBasicAuth
      - enableNotification
      - enablePullRequestPreview
      - environmentVariables
      - framework
      - stage
      - totalNumberOfJobs
      - ttl
      - updateTime
      type: object
    Branches:
      items:
        $ref: '#/components/schemas/Branch'
      maxItems: 255
      type: array
    CertificateVerificationDNSRecord:
      maxLength: 1000
      type: string
    CommitId:
      maxLength: 255
      pattern: \(\?s\).*
      type: string
    CommitMessage:
      maxLength: 10000
      pattern: \(\?s\).*
      type: string
    CommitTime:
      format: date-time
      type: string
    Condition:
      maxLength: 2048
      minLength: 0
      pattern: \(\?s\).*
      type: string
    Context:
      type: string
    OauthToken:
      format: password
      maxLength: 1000
      pattern: \(\?s\).*
      type: string
    CreateAppRequest:
      description: ' The request structure used to create apps in Amplify. '
      example:
        basicAuthCredentials: ""
        enableBasicAuth: ""
        description: ""
        enableAutoBranchCreation: ""
        repository: ""
        oauthToken: ""
        accessToken: ""
        enableBranchAutoBuild: ""
        platform: ""
        tags: ""
        customRules: ""
        autoBranchCreationPatterns: ""
        iamServiceRoleArn: ""
        environmentVariables: ""
        buildSpec: ""
        autoBranchCreationConfig:
          framework: ""
          stage: ""
          enableAutoBuild: ""
          environmentVariables: ""
          basicAuthCredentials: ""
          enablePerformanceMode: ""
          buildSpec: ""
          enablePullRequestPreview: ""
          enableBasicAuth: ""
          pullRequestEnvironmentName: ""
        name: ""
        customHeaders: ""
        enableBranchAutoDeletion: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: ' The name for an Amplify app. '
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: ' The description for an Amplify app. '
        repository:
          allOf:
          - $ref: '#/components/schemas/Repository'
          - description: ' The repository for an Amplify app. '
        platform:
          allOf:
          - $ref: '#/components/schemas/Platform'
          - description: " The platform for the Amplify app. For a static app, set\
              \ the platform type to <code>WEB</code>. For a dynamic server-side rendered\
              \ (SSR) app, set the platform type to <code>WEB_COMPUTE</code>. For\
              \ an app requiring Amplify Hosting's original SSR support only, set\
              \ the platform type to <code>WEB_DYNAMIC</code>."
        iamServiceRoleArn:
          allOf:
          - $ref: '#/components/schemas/ServiceRoleArn'
          - description: ' The AWS Identity and Access Management (IAM) service role
              for an Amplify app. '
        oauthToken:
          allOf:
          - $ref: '#/components/schemas/OauthToken'
          - description: "<p>The OAuth token for a third-party source control system\
              \ for an Amplify app. The OAuth token is used to create a webhook and\
              \ a read-only deploy key using SSH cloning. The OAuth token is not stored.</p>\
              \ <p>Use <code>oauthToken</code> for repository providers other than\
              \ GitHub, such as Bitbucket or CodeCommit. To authorize access to GitHub\
              \ as your repository provider, use <code>accessToken</code>.</p> <p>You\
              \ must specify either <code>oauthToken</code> or <code>accessToken</code>\
              \ when you create a new app.</p> <p>Existing Amplify apps deployed from\
              \ a GitHub repository using OAuth continue to work with CI/CD. However,\
              \ we strongly recommend that you migrate these apps to use the GitHub\
              \ App. For more information, see <a href=\"https://docs.aws.amazon.com/amplify/latest/UserGuide/setting-up-GitHub-access.html#migrating-to-github-app-auth\"\
              >Migrating an existing OAuth app to the Amplify GitHub App</a> in the\
              \ <i>Amplify User Guide</i> .</p>"
        accessToken:
          allOf:
          - $ref: '#/components/schemas/AccessToken'
          - description: "<p>The personal access token for a GitHub repository for\
              \ an Amplify app. The personal access token is used to authorize access\
              \ to a GitHub repository using the Amplify GitHub App. The token is\
              \ not stored.</p> <p>Use <code>accessToken</code> for GitHub repositories\
              \ only. To authorize access to a repository provider such as Bitbucket\
              \ or CodeCommit, use <code>oauthToken</code>.</p> <p>You must specify\
              \ either <code>accessToken</code> or <code>oauthToken</code> when you\
              \ create a new app.</p> <p>Existing Amplify apps deployed from a GitHub\
              \ repository using OAuth continue to work with CI/CD. However, we strongly\
              \ recommend that you migrate these apps to use the GitHub App. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/amplify/latest/UserGuide/setting-up-GitHub-access.html#migrating-to-github-app-auth\"\
              >Migrating an existing OAuth app to the Amplify GitHub App</a> in the\
              \ <i>Amplify User Guide</i> .</p>"
        environmentVariables:
          allOf:
          - $ref: '#/components/schemas/EnvironmentVariables'
          - description: ' The environment variables map for an Amplify app. '
        enableBranchAutoBuild:
          allOf:
          - $ref: '#/components/schemas/EnableBranchAutoBuild'
          - description: ' Enables the auto building of branches for an Amplify app. '
        enableBranchAutoDeletion:
          allOf:
          - $ref: '#/components/schemas/EnableBranchAutoDeletion'
          - description: ' Automatically disconnects a branch in the Amplify Console
              when you delete a branch from your Git repository. '
        enableBasicAuth:
          allOf:
          - $ref: '#/components/schemas/EnableBasicAuth'
          - description: ' Enables basic authorization for an Amplify app. This will
              apply to all branches that are part of this app. '
        basicAuthCredentials:
          allOf:
          - $ref: '#/components/schemas/BasicAuthCredentials'
          - description: ' The credentials for basic authorization for an Amplify
              app. You must base64-encode the authorization credentials and provide
              them in the format <code>user:password</code>.'
        customRules:
          allOf:
          - $ref: '#/components/schemas/CustomRules'
          - description: ' The custom rewrite and redirect rules for an Amplify app. '
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: ' The tag for an Amplify app. '
        buildSpec:
          allOf:
          - $ref: '#/components/schemas/BuildSpec'
          - description: ' The build specification (build spec) for an Amplify app. '
        customHeaders:
          allOf:
          - $ref: '#/components/schemas/CustomHeaders'
          - description: The custom HTTP headers for an Amplify app.
        enableAutoBranchCreation:
          allOf:
          - $ref: '#/components/schemas/EnableAutoBranchCreation'
          - description: ' Enables automated branch creation for an Amplify app. '
        autoBranchCreationPatterns:
          allOf:
          - $ref: '#/components/schemas/AutoBranchCreationPatterns'
          - description: ' The automated branch creation glob patterns for an Amplify
              app. '
        autoBranchCreationConfig:
          $ref: '#/components/schemas/CreateAppRequest_autoBranchCreationConfig'
      required:
      - name
      title: CreateAppRequest
      type: object
    CreateBackendEnvironmentRequest:
      description: ' The request structure for the backend environment create request. '
      example:
        environmentName: ""
        deploymentArtifacts: ""
        stackName: ""
      properties:
        environmentName:
          allOf:
          - $ref: '#/components/schemas/EnvironmentName'
          - description: ' The name for the backend environment. '
        stackName:
          allOf:
          - $ref: '#/components/schemas/StackName'
          - description: ' The AWS CloudFormation stack name of a backend environment. '
        deploymentArtifacts:
          allOf:
          - $ref: '#/components/schemas/DeploymentArtifacts'
          - description: ' The name of deployment artifacts. '
      required:
      - environmentName
      title: CreateBackendEnvironmentRequest
      type: object
    CreateBranchRequest:
      description: ' The request structure for the create branch request. '
      example:
        enableAutoBuild: ""
        basicAuthCredentials: ""
        displayName: ""
        enablePerformanceMode: ""
        enablePullRequestPreview: ""
        enableBasicAuth: ""
        branchName: ""
        description: ""
        ttl: ""
        tags: ""
        backendEnvironmentArn: ""
        framework: ""
        stage: ""
        environmentVariables: ""
        buildSpec: ""
        enableNotification: ""
        pullRequestEnvironmentName: ""
      properties:
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          - description: ' The name for the branch. '
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: ' The description for the branch. '
        stage:
          allOf:
          - $ref: '#/components/schemas/Stage'
          - description: ' Describes the current stage for the branch. '
        framework:
          allOf:
          - $ref: '#/components/schemas/Framework'
          - description: ' The framework for the branch. '
        enableNotification:
          allOf:
          - $ref: '#/components/schemas/EnableNotification'
          - description: ' Enables notifications for the branch. '
        enableAutoBuild:
          allOf:
          - $ref: '#/components/schemas/EnableAutoBuild'
          - description: ' Enables auto building for the branch. '
        environmentVariables:
          allOf:
          - $ref: '#/components/schemas/EnvironmentVariables'
          - description: ' The environment variables for the branch. '
        basicAuthCredentials:
          allOf:
          - $ref: '#/components/schemas/BasicAuthCredentials'
          - description: ' The basic authorization credentials for the branch. You
              must base64-encode the authorization credentials and provide them in
              the format <code>user:password</code>.'
        enableBasicAuth:
          allOf:
          - $ref: '#/components/schemas/EnableBasicAuth'
          - description: ' Enables basic authorization for the branch. '
        enablePerformanceMode:
          allOf:
          - $ref: '#/components/schemas/EnablePerformanceMode'
          - description: "<p>Enables performance mode for the branch.</p> <p>Performance\
              \ mode optimizes for faster hosting performance by keeping content cached\
              \ at the edge for a longer interval. When performance mode is enabled,\
              \ hosting configuration or code changes can take up to 10 minutes to\
              \ roll out. </p>"
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: ' The tag for the branch. '
        buildSpec:
          allOf:
          - $ref: '#/components/schemas/BuildSpec'
          - description: ' The build specification (build spec) for the branch. '
        ttl:
          allOf:
          - $ref: '#/components/schemas/TTL'
          - description: ' The content Time To Live (TTL) for the website in seconds. '
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: ' The display name for a branch. This is used as the default
              domain prefix. '
        enablePullRequestPreview:
          allOf:
          - $ref: '#/components/schemas/EnablePullRequestPreview'
          - description: ' Enables pull request previews for this branch. '
        pullRequestEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/PullRequestEnvironmentName'
          - description: ' The Amplify environment name for the pull request. '
        backendEnvironmentArn:
          allOf:
          - $ref: '#/components/schemas/BackendEnvironmentArn'
          - description: ' The Amazon Resource Name (ARN) for a backend environment
              that is part of an Amplify app. '
      required:
      - branchName
      title: CreateBranchRequest
      type: object
    FileMap:
      additionalProperties:
        $ref: '#/components/schemas/MD5Hash'
      type: object
    CreateDeploymentRequest:
      description: ' The request structure for the create a new deployment request. '
      example:
        fileMap: ""
      properties:
        fileMap:
          allOf:
          - $ref: '#/components/schemas/FileMap'
          - description: " An optional file map that contains the file name as the\
              \ key and the file content md5 hash as the value. If this argument is\
              \ provided, the service will generate a unique upload URL per file.\
              \ Otherwise, the service will only generate a single upload URL for\
              \ the zipped files. "
      title: CreateDeploymentRequest
      type: object
    JobId:
      maxLength: 255
      pattern: "[0-9]+"
      type: string
    FileUploadUrls:
      additionalProperties:
        $ref: '#/components/schemas/UploadUrl'
      type: object
    UploadUrl:
      maxLength: 1000
      type: string
    DomainName:
      maxLength: 64
      pattern: "^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])(\\\
        .)?$"
      type: string
    EnableAutoSubDomain:
      type: boolean
    SubDomainSettings:
      items:
        $ref: '#/components/schemas/SubDomainSetting'
      maxItems: 500
      type: array
    CreateDomainAssociationRequest:
      description: ' The request structure for the create domain association request. '
      example:
        autoSubDomainCreationPatterns: ""
        enableAutoSubDomain: ""
        domainName: ""
        subDomainSettings: ""
        autoSubDomainIAMRole: ""
      properties:
        domainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: ' The domain name for the domain association. '
        enableAutoSubDomain:
          allOf:
          - $ref: '#/components/schemas/EnableAutoSubDomain'
          - description: ' Enables the automated creation of subdomains for branches. '
        subDomainSettings:
          allOf:
          - $ref: '#/components/schemas/SubDomainSettings'
          - description: ' The setting for the subdomain. '
        autoSubDomainCreationPatterns:
          allOf:
          - $ref: '#/components/schemas/AutoSubDomainCreationPatterns'
          - description: ' Sets the branch patterns for automatic subdomain creation. '
        autoSubDomainIAMRole:
          allOf:
          - $ref: '#/components/schemas/AutoSubDomainIAMRole'
          - description: ' The required AWS Identity and Access Management (IAM) service
              role for the Amazon Resource Name (ARN) for automatically creating subdomains. '
      required:
      - domainName
      - subDomainSettings
      title: CreateDomainAssociationRequest
      type: object
    DomainAssociation:
      description: ' Describes a domain association that associates a custom domain
        with an Amplify app. '
      example:
        autoSubDomainCreationPatterns: ""
        certificateVerificationDNSRecord: ""
        enableAutoSubDomain: ""
        statusReason: ""
        domainName: ""
        subDomains: ""
        domainAssociationArn: ""
        domainStatus: ""
        autoSubDomainIAMRole: ""
      properties:
        domainAssociationArn:
          allOf:
          - $ref: '#/components/schemas/DomainAssociationArn'
          - description: ' The Amazon Resource Name (ARN) for the domain association. '
        domainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: ' The name of the domain. '
        enableAutoSubDomain:
          allOf:
          - $ref: '#/components/schemas/EnableAutoSubDomain'
          - description: ' Enables the automated creation of subdomains for branches. '
        autoSubDomainCreationPatterns:
          allOf:
          - $ref: '#/components/schemas/AutoSubDomainCreationPatterns'
          - description: ' Sets branch patterns for automatic subdomain creation. '
        autoSubDomainIAMRole:
          allOf:
          - $ref: '#/components/schemas/AutoSubDomainIAMRole'
          - description: ' The required AWS Identity and Access Management (IAM) service
              role for the Amazon Resource Name (ARN) for automatically creating subdomains. '
        domainStatus:
          allOf:
          - $ref: '#/components/schemas/DomainStatus'
          - description: ' The current status of the domain association. '
        statusReason:
          allOf:
          - $ref: '#/components/schemas/StatusReason'
          - description: ' The reason for the current status of the domain association. '
        certificateVerificationDNSRecord:
          allOf:
          - $ref: '#/components/schemas/CertificateVerificationDNSRecord'
          - description: ' The DNS record for certificate verification. '
        subDomains:
          allOf:
          - $ref: '#/components/schemas/SubDomains'
          - description: ' The subdomains for the domain association. '
      required:
      - domainAssociationArn
      - domainName
      - domainStatus
      - enableAutoSubDomain
      - statusReason
      - subDomains
      type: object
    CreateWebhookRequest:
      description: ' The request structure for the create webhook request. '
      example:
        branchName: ""
        description: ""
      properties:
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          - description: ' The name for a branch that is part of an Amplify app. '
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: ' The description for a webhook. '
      required:
      - branchName
      title: CreateWebhookRequest
      type: object
    Webhook:
      description: ' Describes a webhook that connects repository events to an Amplify
        app. '
      properties:
        webhookArn:
          allOf:
          - $ref: '#/components/schemas/WebhookArn'
          - description: ' The Amazon Resource Name (ARN) for the webhook. '
        webhookId:
          allOf:
          - $ref: '#/components/schemas/WebhookId'
          - description: ' The ID of the webhook. '
        webhookUrl:
          allOf:
          - $ref: '#/components/schemas/WebhookUrl'
          - description: ' The URL of the webhook. '
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          - description: ' The name for a branch that is part of an Amplify app. '
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: ' The description for a webhook. '
        createTime:
          allOf:
          - $ref: '#/components/schemas/CreateTime'
          - description: ' The create date and time for a webhook. '
        updateTime:
          allOf:
          - $ref: '#/components/schemas/UpdateTime'
          - description: ' Updates the date and time for a webhook. '
      required:
      - branchName
      - createTime
      - description
      - updateTime
      - webhookArn
      - webhookId
      - webhookUrl
      type: object
    CustomDomain:
      maxLength: 255
      type: string
    Source:
      maxLength: 2048
      minLength: 1
      pattern: \(\?s\).\+
      type: string
    Target:
      maxLength: 2048
      minLength: 1
      pattern: \(\?s\).\+
      type: string
    Status:
      maxLength: 7
      minLength: 3
      pattern: ".{3,7}"
      type: string
    DNSRecord:
      maxLength: 1000
      type: string
    DeleteAppRequest:
      description: ' Describes the request structure for the delete app request. '
      properties: {}
      title: DeleteAppRequest
      type: object
    DeleteBackendEnvironmentRequest:
      description: ' The request structure for the delete backend environment request. '
      properties: {}
      title: DeleteBackendEnvironmentRequest
      type: object
    DeleteBranchRequest:
      description: ' The request structure for the delete branch request. '
      properties: {}
      title: DeleteBranchRequest
      type: object
    DeleteDomainAssociationRequest:
      description: ' The request structure for the delete domain association request. '
      properties: {}
      title: DeleteDomainAssociationRequest
      type: object
    DeleteJobRequest:
      description: ' The request structure for the delete job request. '
      properties: {}
      title: DeleteJobRequest
      type: object
    JobSummary:
      description: ' Describes the summary for an execution job for an Amplify app. '
      example:
        jobId: ""
        commitMessage: ""
        commitTime: ""
        startTime: ""
        jobArn: ""
        commitId: ""
        endTime: ""
        jobType: ""
        status: ""
      properties:
        jobArn:
          allOf:
          - $ref: '#/components/schemas/JobArn'
          - description: ' The Amazon Resource Name (ARN) for the job. '
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: ' The unique ID for the job. '
        commitId:
          allOf:
          - $ref: '#/components/schemas/CommitId'
          - description: ' The commit ID from a third-party repository provider for
              the job. '
        commitMessage:
          allOf:
          - $ref: '#/components/schemas/CommitMessage'
          - description: ' The commit message from a third-party repository provider
              for the job. '
        commitTime:
          allOf:
          - $ref: '#/components/schemas/CommitTime'
          - description: ' The commit date and time for the job. '
        startTime:
          allOf:
          - $ref: '#/components/schemas/StartTime'
          - description: ' The start date and time for the job. '
        status:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: ' The current status for the job. '
        endTime:
          allOf:
          - $ref: '#/components/schemas/EndTime'
          - description: ' The end date and time for the job. '
        jobType:
          allOf:
          - $ref: '#/components/schemas/JobType'
          - description: " The type for the job. If the value is <code>RELEASE</code>,\
              \ the job was manually released from its source by using the <code>StartJob</code>\
              \ API. If the value is <code>RETRY</code>, the job was manually retried\
              \ using the <code>StartJob</code> API. If the value is <code>WEB_HOOK</code>,\
              \ the job was automatically triggered by webhooks. "
      required:
      - commitId
      - commitMessage
      - commitTime
      - jobArn
      - jobId
      - jobType
      - startTime
      - status
      type: object
    WebhookId:
      maxLength: 255
      pattern: \(\?s\).*
      type: string
    DeleteWebhookRequest:
      description: ' The request structure for the delete webhook request. '
      properties: {}
      title: DeleteWebhookRequest
      type: object
    DomainAssociationArn:
      maxLength: 1000
      type: string
    DomainStatus:
      enum:
      - PENDING_VERIFICATION
      - IN_PROGRESS
      - AVAILABLE
      - PENDING_DEPLOYMENT
      - FAILED
      - CREATING
      - REQUESTING_CERTIFICATE
      - UPDATING
      type: string
    StatusReason:
      maxLength: 1000
      type: string
    SubDomains:
      items:
        $ref: '#/components/schemas/SubDomain'
      maxItems: 500
      type: array
    DomainAssociations:
      items:
        $ref: '#/components/schemas/DomainAssociation'
      maxItems: 255
      type: array
    DomainPrefix:
      maxLength: 255
      pattern: \(\?s\).*
      type: string
    EndTime:
      format: date-time
      type: string
    EnvKey:
      maxLength: 255
      pattern: \(\?s\).*
      type: string
    FileName:
      maxLength: 255
      pattern: \(\?s\).*
      type: string
    StartTime:
      format: date-time
      type: string
    GenerateAccessLogsRequest:
      description: ' The request structure for the generate access logs request. '
      example:
        domainName: ""
        startTime: ""
        endTime: ""
      properties:
        startTime:
          allOf:
          - $ref: '#/components/schemas/StartTime'
          - description: ' The time at which the logs should start. The time range
              specified is inclusive of the start time. '
        endTime:
          allOf:
          - $ref: '#/components/schemas/EndTime'
          - description: ' The time at which the logs should end. The time range specified
              is inclusive of the end time. '
        domainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          - description: ' The name of the domain. '
      required:
      - domainName
      title: GenerateAccessLogsRequest
      type: object
    LogUrl:
      maxLength: 1000
      type: string
    GetAppRequest:
      description: ' The request structure for the get app request. '
      properties: {}
      title: GetAppRequest
      type: object
    GetArtifactUrlRequest:
      description: ' Returns the request structure for the get artifact request. '
      properties: {}
      title: GetArtifactUrlRequest
      type: object
    GetBackendEnvironmentRequest:
      description: ' The request structure for the get backend environment request. '
      properties: {}
      title: GetBackendEnvironmentRequest
      type: object
    GetBranchRequest:
      description: ' The request structure for the get branch request. '
      properties: {}
      title: GetBranchRequest
      type: object
    GetDomainAssociationRequest:
      description: ' The request structure for the get domain association request. '
      properties: {}
      title: GetDomainAssociationRequest
      type: object
    GetJobRequest:
      description: ' The request structure for the get job request. '
      properties: {}
      title: GetJobRequest
      type: object
    Job:
      description: ' Describes an execution job for an Amplify app. '
      example:
        summary:
          jobId: ""
          commitMessage: ""
          commitTime: ""
          startTime: ""
          jobArn: ""
          commitId: ""
          endTime: ""
          jobType: ""
          status: ""
        steps: ""
      properties:
        summary:
          $ref: '#/components/schemas/Job_summary'
        steps:
          allOf:
          - $ref: '#/components/schemas/Steps'
          - description: " The execution steps for an execution job, for an Amplify\
              \ app. "
      required:
      - steps
      - summary
      type: object
    GetWebhookRequest:
      description: ' The request structure for the get webhook request. '
      properties: {}
      title: GetWebhookRequest
      type: object
    Steps:
      items:
        $ref: '#/components/schemas/Step'
      type: array
    JobArn:
      maxLength: 1000
      type: string
    JobReason:
      maxLength: 255
      pattern: \(\?s\).*
      type: string
    JobStatus:
      enum:
      - PENDING
      - PROVISIONING
      - RUNNING
      - FAILED
      - SUCCEED
      - CANCELLING
      - CANCELLED
      type: string
    JobSummaries:
      items:
        $ref: '#/components/schemas/JobSummary'
      type: array
    JobType:
      enum:
      - RELEASE
      - RETRY
      - MANUAL
      - WEB_HOOK
      maxLength: 10
      type: string
    LastDeployTime:
      format: date-time
      type: string
    NextToken:
      maxLength: 2000
      pattern: \(\?s\).*
      type: string
    MaxResults:
      maximum: 100
      minimum: 0
      type: integer
    ListAppsRequest:
      description: ' The request structure for the list apps request. '
      properties: {}
      title: ListAppsRequest
      type: object
    ListArtifactsRequest:
      description: ' Describes the request structure for the list artifacts request. '
      properties: {}
      title: ListArtifactsRequest
      type: object
    ListBackendEnvironmentsRequest:
      description: ' The request structure for the list backend environments request. '
      properties: {}
      title: ListBackendEnvironmentsRequest
      type: object
    ListBranchesRequest:
      description: ' The request structure for the list branches request. '
      properties: {}
      title: ListBranchesRequest
      type: object
    ListDomainAssociationsRequest:
      description: ' The request structure for the list domain associations request. '
      properties: {}
      title: ListDomainAssociationsRequest
      type: object
    ListJobsRequest:
      description: ' The request structure for the list jobs request. '
      properties: {}
      title: ListJobsRequest
      type: object
    ResourceArn:
      maxLength: 2048
      minLength: 0
      pattern: ^arn:aws:amplify:.*
      type: string
    ListTagsForResourceRequest:
      description: ' The request structure to use to list tags for a resource. '
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    ListWebhooksRequest:
      description: ' The request structure for the list webhooks request. '
      properties: {}
      title: ListWebhooksRequest
      type: object
    Webhooks:
      items:
        $ref: '#/components/schemas/Webhook'
      type: array
    Screenshots:
      additionalProperties:
        $ref: '#/components/schemas/ThumbnailUrl'
      type: object
    SourceUrl:
      maxLength: 3000
      pattern: \(\?s\).*
      type: string
    StartDeploymentRequest:
      description: ' The request structure for the start a deployment request. '
      example:
        sourceUrl: ""
        jobId: ""
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: " The job ID for this deployment, generated by the create\
              \ deployment request. "
        sourceUrl:
          allOf:
          - $ref: '#/components/schemas/SourceUrl'
          - description: " The source URL for this deployment, used when calling start\
              \ deployment without create deployment. The source URL can be any HTTP\
              \ GET URL that is publicly accessible and downloads a single .zip file. "
      title: StartDeploymentRequest
      type: object
    StartJobRequest:
      description: ' The request structure for the start job request. '
      example:
        jobId: ""
        jobReason: ""
        commitMessage: ""
        commitTime: ""
        commitId: ""
        jobType: ""
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: ' The unique ID for an existing job. This is required if
              the value of <code>jobType</code> is <code>RETRY</code>. '
        jobType:
          allOf:
          - $ref: '#/components/schemas/JobType'
          - description: " Describes the type for the job. The job type <code>RELEASE</code>\
              \ starts a new job with the latest change from the specified branch.\
              \ This value is available only for apps that are connected to a repository.\
              \ The job type <code>RETRY</code> retries an existing job. If the job\
              \ type value is <code>RETRY</code>, the <code>jobId</code> is also required. "
        jobReason:
          allOf:
          - $ref: '#/components/schemas/JobReason'
          - description: ' A descriptive reason for starting this job. '
        commitId:
          allOf:
          - $ref: '#/components/schemas/CommitId'
          - description: ' The commit ID from a third-party repository provider for
              the job. '
        commitMessage:
          allOf:
          - $ref: '#/components/schemas/CommitMessage'
          - description: ' The commit message from a third-party repository provider
              for the job. '
        commitTime:
          allOf:
          - $ref: '#/components/schemas/CommitTime'
          - description: ' The commit date and time for the job. '
      required:
      - jobType
      title: StartJobRequest
      type: object
    StepName:
      maxLength: 255
      type: string
    TestArtifactsUrl:
      maxLength: 1000
      type: string
    TestConfigUrl:
      maxLength: 1000
      type: string
    Step:
      description: " Describes an execution step, for an execution job, for an Amplify\
        \ app. "
      properties:
        stepName:
          allOf:
          - $ref: '#/components/schemas/StepName'
          - description: ' The name of the execution step. '
        startTime:
          allOf:
          - $ref: '#/components/schemas/StartTime'
          - description: ' The start date and time of the execution step. '
        status:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: ' The status of the execution step. '
        endTime:
          allOf:
          - $ref: '#/components/schemas/EndTime'
          - description: ' The end date and time of the execution step. '
        logUrl:
          allOf:
          - $ref: '#/components/schemas/LogUrl'
          - description: ' The URL to the logs for the execution step. '
        artifactsUrl:
          allOf:
          - $ref: '#/components/schemas/ArtifactsUrl'
          - description: ' The URL to the artifact for the execution step. '
        testArtifactsUrl:
          allOf:
          - $ref: '#/components/schemas/TestArtifactsUrl'
          - description: ' The URL to the test artifact for the execution step. '
        testConfigUrl:
          allOf:
          - $ref: '#/components/schemas/TestConfigUrl'
          - description: ' The URL to the test configuration for the execution step. '
        screenshots:
          allOf:
          - $ref: '#/components/schemas/Screenshots'
          - description: " The list of screenshot URLs for the execution step, if\
              \ relevant. "
        statusReason:
          allOf:
          - $ref: '#/components/schemas/StatusReason'
          - description: ' The reason for the current step status. '
        context:
          allOf:
          - $ref: '#/components/schemas/Context'
          - description: ' The context for the current step. Includes a build image
              if the step is build. '
      required:
      - endTime
      - startTime
      - status
      - stepName
      type: object
    StopJobRequest:
      description: ' The request structure for the stop job request. '
      properties: {}
      title: StopJobRequest
      type: object
    Verified:
      type: boolean
    SubDomain:
      description: ' The subdomain for the domain association. '
      properties:
        subDomainSetting:
          $ref: '#/components/schemas/SubDomain_subDomainSetting'
        verified:
          allOf:
          - $ref: '#/components/schemas/Verified'
          - description: ' The verified status of the subdomain '
        dnsRecord:
          allOf:
          - $ref: '#/components/schemas/DNSRecord'
          - description: ' The DNS record for the subdomain. '
      required:
      - dnsRecord
      - subDomainSetting
      - verified
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 1
      type: array
    TagResourceRequest:
      description: ' The request structure to tag a resource with a tag key and value. '
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: ' The tags used to tag the resource. '
      required:
      - tags
      title: TagResourceRequest
      type: object
    ThumbnailName:
      maxLength: 256
      type: string
    UntagResourceRequest:
      description: ' The request structure for the untag resource request. '
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateAppRequest:
      description: ' The request structure for the update app request. '
      example:
        basicAuthCredentials: ""
        enableBasicAuth: ""
        description: ""
        enableAutoBranchCreation: ""
        enableBranchAutoBuild: ""
        repository: ""
        oauthToken: ""
        accessToken: ""
        platform: ""
        customRules: ""
        autoBranchCreationPatterns: ""
        iamServiceRoleArn: ""
        environmentVariables: ""
        buildSpec: ""
        autoBranchCreationConfig:
          framework: ""
          stage: ""
          enableAutoBuild: ""
          environmentVariables: ""
          basicAuthCredentials: ""
          enablePerformanceMode: ""
          buildSpec: ""
          enablePullRequestPreview: ""
          enableBasicAuth: ""
          pullRequestEnvironmentName: ""
        name: ""
        customHeaders: ""
        enableBranchAutoDeletion: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: ' The name for an Amplify app. '
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: ' The description for an Amplify app. '
        platform:
          allOf:
          - $ref: '#/components/schemas/Platform'
          - description: " The platform for the Amplify app. For a static app, set\
              \ the platform type to <code>WEB</code>. For a dynamic server-side rendered\
              \ (SSR) app, set the platform type to <code>WEB_COMPUTE</code>. For\
              \ an app requiring Amplify Hosting's original SSR support only, set\
              \ the platform type to <code>WEB_DYNAMIC</code>."
        iamServiceRoleArn:
          allOf:
          - $ref: '#/components/schemas/ServiceRoleArn'
          - description: ' The AWS Identity and Access Management (IAM) service role
              for an Amplify app. '
        environmentVariables:
          allOf:
          - $ref: '#/components/schemas/EnvironmentVariables'
          - description: ' The environment variables for an Amplify app. '
        enableBranchAutoBuild:
          allOf:
          - $ref: '#/components/schemas/EnableAutoBuild'
          - description: ' Enables branch auto-building for an Amplify app. '
        enableBranchAutoDeletion:
          allOf:
          - $ref: '#/components/schemas/EnableBranchAutoDeletion'
          - description: ' Automatically disconnects a branch in the Amplify Console
              when you delete a branch from your Git repository. '
        enableBasicAuth:
          allOf:
          - $ref: '#/components/schemas/EnableBasicAuth'
          - description: ' Enables basic authorization for an Amplify app. '
        basicAuthCredentials:
          allOf:
          - $ref: '#/components/schemas/BasicAuthCredentials'
          - description: ' The basic authorization credentials for an Amplify app.
              You must base64-encode the authorization credentials and provide them
              in the format <code>user:password</code>.'
        customRules:
          allOf:
          - $ref: '#/components/schemas/CustomRules'
          - description: ' The custom redirect and rewrite rules for an Amplify app. '
        buildSpec:
          allOf:
          - $ref: '#/components/schemas/BuildSpec'
          - description: ' The build specification (build spec) for an Amplify app. '
        customHeaders:
          allOf:
          - $ref: '#/components/schemas/CustomHeaders'
          - description: The custom HTTP headers for an Amplify app.
        enableAutoBranchCreation:
          allOf:
          - $ref: '#/components/schemas/EnableAutoBranchCreation'
          - description: ' Enables automated branch creation for an Amplify app. '
        autoBranchCreationPatterns:
          allOf:
          - $ref: '#/components/schemas/AutoBranchCreationPatterns'
          - description: ' Describes the automated branch creation glob patterns for
              an Amplify app. '
        autoBranchCreationConfig:
          $ref: '#/components/schemas/CreateAppRequest_autoBranchCreationConfig'
        repository:
          allOf:
          - $ref: '#/components/schemas/Repository'
          - description: ' The name of the repository for an Amplify app '
        oauthToken:
          allOf:
          - $ref: '#/components/schemas/OauthToken'
          - description: "<p>The OAuth token for a third-party source control system\
              \ for an Amplify app. The OAuth token is used to create a webhook and\
              \ a read-only deploy key using SSH cloning. The OAuth token is not stored.</p>\
              \ <p>Use <code>oauthToken</code> for repository providers other than\
              \ GitHub, such as Bitbucket or CodeCommit.</p> <p>To authorize access\
              \ to GitHub as your repository provider, use <code>accessToken</code>.</p>\
              \ <p>You must specify either <code>oauthToken</code> or <code>accessToken</code>\
              \ when you update an app.</p> <p>Existing Amplify apps deployed from\
              \ a GitHub repository using OAuth continue to work with CI/CD. However,\
              \ we strongly recommend that you migrate these apps to use the GitHub\
              \ App. For more information, see <a href=\"https://docs.aws.amazon.com/amplify/latest/UserGuide/setting-up-GitHub-access.html#migrating-to-github-app-auth\"\
              >Migrating an existing OAuth app to the Amplify GitHub App</a> in the\
              \ <i>Amplify User Guide</i> .</p>"
        accessToken:
          allOf:
          - $ref: '#/components/schemas/AccessToken'
          - description: "<p>The personal access token for a GitHub repository for\
              \ an Amplify app. The personal access token is used to authorize access\
              \ to a GitHub repository using the Amplify GitHub App. The token is\
              \ not stored.</p> <p>Use <code>accessToken</code> for GitHub repositories\
              \ only. To authorize access to a repository provider such as Bitbucket\
              \ or CodeCommit, use <code>oauthToken</code>.</p> <p>You must specify\
              \ either <code>accessToken</code> or <code>oauthToken</code> when you\
              \ update an app.</p> <p>Existing Amplify apps deployed from a GitHub\
              \ repository using OAuth continue to work with CI/CD. However, we strongly\
              \ recommend that you migrate these apps to use the GitHub App. For more\
              \ information, see <a href=\"https://docs.aws.amazon.com/amplify/latest/UserGuide/setting-up-GitHub-access.html#migrating-to-github-app-auth\"\
              >Migrating an existing OAuth app to the Amplify GitHub App</a> in the\
              \ <i>Amplify User Guide</i> .</p>"
      title: UpdateAppRequest
      type: object
    UpdateBranchRequest:
      description: ' The request structure for the update branch request. '
      example:
        enableAutoBuild: ""
        basicAuthCredentials: ""
        displayName: ""
        enablePerformanceMode: ""
        enablePullRequestPreview: ""
        enableBasicAuth: ""
        description: ""
        ttl: ""
        backendEnvironmentArn: ""
        framework: ""
        stage: ""
        environmentVariables: ""
        buildSpec: ""
        enableNotification: ""
        pullRequestEnvironmentName: ""
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: ' The description for the branch. '
        framework:
          allOf:
          - $ref: '#/components/schemas/Framework'
          - description: ' The framework for the branch. '
        stage:
          allOf:
          - $ref: '#/components/schemas/Stage'
          - description: ' Describes the current stage for the branch. '
        enableNotification:
          allOf:
          - $ref: '#/components/schemas/EnableNotification'
          - description: ' Enables notifications for the branch. '
        enableAutoBuild:
          allOf:
          - $ref: '#/components/schemas/EnableAutoBuild'
          - description: ' Enables auto building for the branch. '
        environmentVariables:
          allOf:
          - $ref: '#/components/schemas/EnvironmentVariables'
          - description: ' The environment variables for the branch. '
        basicAuthCredentials:
          allOf:
          - $ref: '#/components/schemas/BasicAuthCredentials'
          - description: ' The basic authorization credentials for the branch. You
              must base64-encode the authorization credentials and provide them in
              the format <code>user:password</code>.'
        enableBasicAuth:
          allOf:
          - $ref: '#/components/schemas/EnableBasicAuth'
          - description: ' Enables basic authorization for the branch. '
        enablePerformanceMode:
          allOf:
          - $ref: '#/components/schemas/EnablePerformanceMode'
          - description: "<p>Enables performance mode for the branch.</p> <p>Performance\
              \ mode optimizes for faster hosting performance by keeping content cached\
              \ at the edge for a longer interval. When performance mode is enabled,\
              \ hosting configuration or code changes can take up to 10 minutes to\
              \ roll out. </p>"
        buildSpec:
          allOf:
          - $ref: '#/components/schemas/BuildSpec'
          - description: ' The build specification (build spec) for the branch. '
        ttl:
          allOf:
          - $ref: '#/components/schemas/TTL'
          - description: ' The content Time to Live (TTL) for the website in seconds. '
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: ' The display name for a branch. This is used as the default
              domain prefix. '
        enablePullRequestPreview:
          allOf:
          - $ref: '#/components/schemas/EnablePullRequestPreview'
          - description: ' Enables pull request previews for this branch. '
        pullRequestEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/PullRequestEnvironmentName'
          - description: ' The Amplify environment name for the pull request. '
        backendEnvironmentArn:
          allOf:
          - $ref: '#/components/schemas/BackendEnvironmentArn'
          - description: ' The Amazon Resource Name (ARN) for a backend environment
              that is part of an Amplify app. '
      title: UpdateBranchRequest
      type: object
    UpdateDomainAssociationRequest:
      description: ' The request structure for the update domain association request. '
      example:
        autoSubDomainCreationPatterns: ""
        enableAutoSubDomain: ""
        subDomainSettings: ""
        autoSubDomainIAMRole: ""
      properties:
        enableAutoSubDomain:
          allOf:
          - $ref: '#/components/schemas/EnableAutoSubDomain'
          - description: ' Enables the automated creation of subdomains for branches. '
        subDomainSettings:
          allOf:
          - $ref: '#/components/schemas/SubDomainSettings'
          - description: ' Describes the settings for the subdomain. '
        autoSubDomainCreationPatterns:
          allOf:
          - $ref: '#/components/schemas/AutoSubDomainCreationPatterns'
          - description: ' Sets the branch patterns for automatic subdomain creation. '
        autoSubDomainIAMRole:
          allOf:
          - $ref: '#/components/schemas/AutoSubDomainIAMRole'
          - description: ' The required AWS Identity and Access Management (IAM) service
              role for the Amazon Resource Name (ARN) for automatically creating subdomains. '
      title: UpdateDomainAssociationRequest
      type: object
    UpdateWebhookRequest:
      description: ' The request structure for the update webhook request. '
      example:
        branchName: ""
        description: ""
      properties:
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          - description: ' The name for a branch that is part of an Amplify app. '
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: ' The description for a webhook. '
      title: UpdateWebhookRequest
      type: object
    WebhookArn:
      maxLength: 1000
      type: string
    WebhookUrl:
      maxLength: 1000
      type: string
    CreateApp_request_autoBranchCreationConfig:
      description: ' Describes the automated branch creation configuration. '
      properties:
        stage:
          allOf:
          - $ref: '#/components/schemas/Stage'
          - description: ' Describes the current stage for the autocreated branch. '
        framework:
          allOf:
          - $ref: '#/components/schemas/Framework'
          - description: ' The framework for the autocreated branch. '
        enableAutoBuild:
          allOf:
          - $ref: '#/components/schemas/EnableAutoBuild'
          - description: ' Enables auto building for the autocreated branch. '
        environmentVariables:
          allOf:
          - $ref: '#/components/schemas/EnvironmentVariables'
          - description: ' The environment variables for the autocreated branch. '
        basicAuthCredentials:
          allOf:
          - $ref: '#/components/schemas/BasicAuthCredentials'
          - description: ' The basic authorization credentials for the autocreated
              branch. You must base64-encode the authorization credentials and provide
              them in the format <code>user:password</code>.'
        enableBasicAuth:
          allOf:
          - $ref: '#/components/schemas/EnableBasicAuth'
          - description: ' Enables basic authorization for the autocreated branch. '
        enablePerformanceMode:
          allOf:
          - $ref: '#/components/schemas/EnablePerformanceMode'
          - description: "<p>Enables performance mode for the branch.</p> <p>Performance\
              \ mode optimizes for faster hosting performance by keeping content cached\
              \ at the edge for a longer interval. When performance mode is enabled,\
              \ hosting configuration or code changes can take up to 10 minutes to\
              \ roll out. </p>"
        buildSpec:
          allOf:
          - $ref: '#/components/schemas/BuildSpec'
          - description: ' The build specification (build spec) for the autocreated
              branch. '
        enablePullRequestPreview:
          allOf:
          - $ref: '#/components/schemas/EnablePullRequestPreview'
          - description: ' Enables pull request previews for the autocreated branch. '
        pullRequestEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/PullRequestEnvironmentName'
          - description: ' The Amplify environment name for the pull request. '
      type: object
    CreateApp_request:
      properties:
        name:
          description: ' The name for an Amplify app. '
          maxLength: 255
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        description:
          description: ' The description for an Amplify app. '
          maxLength: 1000
          pattern: \(\?s\).*
          type: string
        repository:
          description: ' The repository for an Amplify app. '
          maxLength: 1000
          pattern: \(\?s\).*
          type: string
        platform:
          description: " The platform for the Amplify app. For a static app, set the\
            \ platform type to <code>WEB</code>. For a dynamic server-side rendered\
            \ (SSR) app, set the platform type to <code>WEB_COMPUTE</code>. For an\
            \ app requiring Amplify Hosting's original SSR support only, set the platform\
            \ type to <code>WEB_DYNAMIC</code>."
          enum:
          - WEB
          - WEB_DYNAMIC
          - WEB_COMPUTE
          type: string
        iamServiceRoleArn:
          description: ' The AWS Identity and Access Management (IAM) service role
            for an Amplify app. '
          maxLength: 1000
          minLength: 0
          pattern: \(\?s\).*
          type: string
        oauthToken:
          description: "<p>The OAuth token for a third-party source control system\
            \ for an Amplify app. The OAuth token is used to create a webhook and\
            \ a read-only deploy key using SSH cloning. The OAuth token is not stored.</p>\
            \ <p>Use <code>oauthToken</code> for repository providers other than GitHub,\
            \ such as Bitbucket or CodeCommit. To authorize access to GitHub as your\
            \ repository provider, use <code>accessToken</code>.</p> <p>You must specify\
            \ either <code>oauthToken</code> or <code>accessToken</code> when you\
            \ create a new app.</p> <p>Existing Amplify apps deployed from a GitHub\
            \ repository using OAuth continue to work with CI/CD. However, we strongly\
            \ recommend that you migrate these apps to use the GitHub App. For more\
            \ information, see <a href=\"https://docs.aws.amazon.com/amplify/latest/UserGuide/setting-up-GitHub-access.html#migrating-to-github-app-auth\"\
            >Migrating an existing OAuth app to the Amplify GitHub App</a> in the\
            \ <i>Amplify User Guide</i> .</p>"
          format: password
          maxLength: 1000
          pattern: \(\?s\).*
          type: string
        accessToken:
          description: "<p>The personal access token for a GitHub repository for an\
            \ Amplify app. The personal access token is used to authorize access to\
            \ a GitHub repository using the Amplify GitHub App. The token is not stored.</p>\
            \ <p>Use <code>accessToken</code> for GitHub repositories only. To authorize\
            \ access to a repository provider such as Bitbucket or CodeCommit, use\
            \ <code>oauthToken</code>.</p> <p>You must specify either <code>accessToken</code>\
            \ or <code>oauthToken</code> when you create a new app.</p> <p>Existing\
            \ Amplify apps deployed from a GitHub repository using OAuth continue\
            \ to work with CI/CD. However, we strongly recommend that you migrate\
            \ these apps to use the GitHub App. For more information, see <a href=\"\
            https://docs.aws.amazon.com/amplify/latest/UserGuide/setting-up-GitHub-access.html#migrating-to-github-app-auth\"\
            >Migrating an existing OAuth app to the Amplify GitHub App</a> in the\
            \ <i>Amplify User Guide</i> .</p>"
          format: password
          maxLength: 255
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        environmentVariables:
          additionalProperties:
            $ref: '#/components/schemas/EnvValue'
          description: ' The environment variables map for an Amplify app. '
          type: object
        enableBranchAutoBuild:
          description: ' Enables the auto building of branches for an Amplify app. '
          type: boolean
        enableBranchAutoDeletion:
          description: ' Automatically disconnects a branch in the Amplify Console
            when you delete a branch from your Git repository. '
          type: boolean
        enableBasicAuth:
          description: ' Enables basic authorization for an Amplify app. This will
            apply to all branches that are part of this app. '
          type: boolean
        basicAuthCredentials:
          description: ' The credentials for basic authorization for an Amplify app.
            You must base64-encode the authorization credentials and provide them
            in the format <code>user:password</code>.'
          format: password
          maxLength: 2000
          pattern: \(\?s\).*
          type: string
        customRules:
          description: ' The custom rewrite and redirect rules for an Amplify app. '
          items:
            $ref: '#/components/schemas/CustomRule'
          type: array
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: ' The tag for an Amplify app. '
          maxProperties: 50
          minProperties: 0
          type: object
        buildSpec:
          description: ' The build specification (build spec) file for an Amplify
            app build. '
          format: password
          maxLength: 25000
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        customHeaders:
          description: The custom HTTP headers for an Amplify app.
          maxLength: 25000
          minLength: 0
          pattern: \(\?s\).*
          type: string
        enableAutoBranchCreation:
          description: ' Enables automated branch creation for an Amplify app. '
          type: boolean
        autoBranchCreationPatterns:
          description: ' The automated branch creation glob patterns for an Amplify
            app. '
          items:
            $ref: '#/components/schemas/AutoBranchCreationPattern'
          type: array
        autoBranchCreationConfig:
          $ref: '#/components/schemas/CreateApp_request_autoBranchCreationConfig'
      required:
      - name
      type: object
    CreateBackendEnvironment_request:
      properties:
        environmentName:
          description: ' The name for the backend environment. '
          maxLength: 255
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        stackName:
          description: ' The AWS CloudFormation stack name of a backend environment. '
          maxLength: 255
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        deploymentArtifacts:
          description: ' The name of deployment artifacts. '
          maxLength: 1000
          minLength: 1
          pattern: \(\?s\).\+
          type: string
      required:
      - environmentName
      type: object
    CreateBranch_request:
      properties:
        branchName:
          description: ' The name for the branch. '
          maxLength: 255
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        description:
          description: ' The description for the branch. '
          maxLength: 1000
          pattern: \(\?s\).*
          type: string
        stage:
          description: ' Describes the current stage for the branch. '
          enum:
          - PRODUCTION
          - BETA
          - DEVELOPMENT
          - EXPERIMENTAL
          - PULL_REQUEST
          type: string
        framework:
          description: ' The framework for the branch. '
          maxLength: 255
          pattern: \(\?s\).*
          type: string
        enableNotification:
          description: ' Enables notifications for the branch. '
          type: boolean
        enableAutoBuild:
          description: ' Enables auto building for the branch. '
          type: boolean
        environmentVariables:
          additionalProperties:
            $ref: '#/components/schemas/EnvValue'
          description: ' The environment variables for the branch. '
          type: object
        basicAuthCredentials:
          description: ' The basic authorization credentials for the branch. You must
            base64-encode the authorization credentials and provide them in the format
            <code>user:password</code>.'
          format: password
          maxLength: 2000
          pattern: \(\?s\).*
          type: string
        enableBasicAuth:
          description: ' Enables basic authorization for the branch. '
          type: boolean
        enablePerformanceMode:
          description: "<p>Enables performance mode for the branch.</p> <p>Performance\
            \ mode optimizes for faster hosting performance by keeping content cached\
            \ at the edge for a longer interval. When performance mode is enabled,\
            \ hosting configuration or code changes can take up to 10 minutes to roll\
            \ out. </p>"
          type: boolean
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: ' The tag for the branch. '
          maxProperties: 50
          minProperties: 0
          type: object
        buildSpec:
          description: ' The build specification (build spec) file for an Amplify
            app build. '
          format: password
          maxLength: 25000
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        ttl:
          description: ' The content Time to Live (TTL) for the website in seconds. '
          maxLength: 32
          minLength: 0
          pattern: \d*
          type: string
        displayName:
          description: ' The display name for a branch. This is used as the default
            domain prefix. '
          maxLength: 255
          pattern: \(\?s\).*
          type: string
        enablePullRequestPreview:
          description: ' Enables pull request previews for this branch. '
          type: boolean
        pullRequestEnvironmentName:
          description: ' The Amplify environment name for the pull request. '
          maxLength: 20
          pattern: \(\?s\).*
          type: string
        backendEnvironmentArn:
          description: ' The Amazon Resource Name (ARN) for a backend environment
            that is part of an Amplify app. '
          maxLength: 1000
          minLength: 0
          pattern: \(\?s\).*
          type: string
      required:
      - branchName
      type: object
    CreateDeployment_request:
      properties:
        fileMap:
          additionalProperties:
            $ref: '#/components/schemas/MD5Hash'
          description: " An optional file map that contains the file name as the key\
            \ and the file content md5 hash as the value. If this argument is provided,\
            \ the service will generate a unique upload URL per file. Otherwise, the\
            \ service will only generate a single upload URL for the zipped files. "
          type: object
      type: object
    CreateDomainAssociation_request:
      properties:
        domainName:
          description: ' The domain name for the domain association. '
          maxLength: 64
          pattern: "^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])(\\\
            .)?$"
          type: string
        enableAutoSubDomain:
          description: ' Enables the automated creation of subdomains for branches. '
          type: boolean
        subDomainSettings:
          description: ' The setting for the subdomain. '
          items:
            $ref: '#/components/schemas/SubDomainSetting'
          maxItems: 500
          type: array
        autoSubDomainCreationPatterns:
          description: ' Sets the branch patterns for automatic subdomain creation. '
          items:
            $ref: '#/components/schemas/AutoSubDomainCreationPattern'
          type: array
        autoSubDomainIAMRole:
          description: ' The required AWS Identity and Access Management (IAM) service
            role for the Amazon Resource Name (ARN) for automatically creating subdomains. '
          maxLength: 1000
          pattern: "^$|^arn:aws:iam::\\d{12}:role.+"
          type: string
      required:
      - domainName
      - subDomainSettings
      type: object
    CreateWebhook_request:
      properties:
        branchName:
          description: ' The name for a branch that is part of an Amplify app. '
          maxLength: 255
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        description:
          description: ' The description for a webhook. '
          maxLength: 1000
          pattern: \(\?s\).*
          type: string
      required:
      - branchName
      type: object
    UpdateApp_request:
      properties:
        name:
          description: ' The name for an Amplify app. '
          maxLength: 255
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        description:
          description: ' The description for an Amplify app. '
          maxLength: 1000
          pattern: \(\?s\).*
          type: string
        platform:
          description: " The platform for the Amplify app. For a static app, set the\
            \ platform type to <code>WEB</code>. For a dynamic server-side rendered\
            \ (SSR) app, set the platform type to <code>WEB_COMPUTE</code>. For an\
            \ app requiring Amplify Hosting's original SSR support only, set the platform\
            \ type to <code>WEB_DYNAMIC</code>."
          enum:
          - WEB
          - WEB_DYNAMIC
          - WEB_COMPUTE
          type: string
        iamServiceRoleArn:
          description: ' The AWS Identity and Access Management (IAM) service role
            for an Amplify app. '
          maxLength: 1000
          minLength: 0
          pattern: \(\?s\).*
          type: string
        environmentVariables:
          additionalProperties:
            $ref: '#/components/schemas/EnvValue'
          description: ' The environment variables for an Amplify app. '
          type: object
        enableBranchAutoBuild:
          description: ' Enables branch auto-building for an Amplify app. '
          type: boolean
        enableBranchAutoDeletion:
          description: ' Automatically disconnects a branch in the Amplify Console
            when you delete a branch from your Git repository. '
          type: boolean
        enableBasicAuth:
          description: ' Enables basic authorization for an Amplify app. '
          type: boolean
        basicAuthCredentials:
          description: ' The basic authorization credentials for an Amplify app. You
            must base64-encode the authorization credentials and provide them in the
            format <code>user:password</code>.'
          format: password
          maxLength: 2000
          pattern: \(\?s\).*
          type: string
        customRules:
          description: ' The custom redirect and rewrite rules for an Amplify app. '
          items:
            $ref: '#/components/schemas/CustomRule'
          type: array
        buildSpec:
          description: ' The build specification (build spec) file for an Amplify
            app build. '
          format: password
          maxLength: 25000
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        customHeaders:
          description: The custom HTTP headers for an Amplify app.
          maxLength: 25000
          minLength: 0
          pattern: \(\?s\).*
          type: string
        enableAutoBranchCreation:
          description: ' Enables automated branch creation for an Amplify app. '
          type: boolean
        autoBranchCreationPatterns:
          description: ' Describes the automated branch creation glob patterns for
            an Amplify app. '
          items:
            $ref: '#/components/schemas/AutoBranchCreationPattern'
          type: array
        autoBranchCreationConfig:
          $ref: '#/components/schemas/CreateApp_request_autoBranchCreationConfig'
        repository:
          description: ' The name of the repository for an Amplify app '
          maxLength: 1000
          pattern: \(\?s\).*
          type: string
        oauthToken:
          description: "<p>The OAuth token for a third-party source control system\
            \ for an Amplify app. The OAuth token is used to create a webhook and\
            \ a read-only deploy key using SSH cloning. The OAuth token is not stored.</p>\
            \ <p>Use <code>oauthToken</code> for repository providers other than GitHub,\
            \ such as Bitbucket or CodeCommit.</p> <p>To authorize access to GitHub\
            \ as your repository provider, use <code>accessToken</code>.</p> <p>You\
            \ must specify either <code>oauthToken</code> or <code>accessToken</code>\
            \ when you update an app.</p> <p>Existing Amplify apps deployed from a\
            \ GitHub repository using OAuth continue to work with CI/CD. However,\
            \ we strongly recommend that you migrate these apps to use the GitHub\
            \ App. For more information, see <a href=\"https://docs.aws.amazon.com/amplify/latest/UserGuide/setting-up-GitHub-access.html#migrating-to-github-app-auth\"\
            >Migrating an existing OAuth app to the Amplify GitHub App</a> in the\
            \ <i>Amplify User Guide</i> .</p>"
          format: password
          maxLength: 1000
          pattern: \(\?s\).*
          type: string
        accessToken:
          description: "<p>The personal access token for a GitHub repository for an\
            \ Amplify app. The personal access token is used to authorize access to\
            \ a GitHub repository using the Amplify GitHub App. The token is not stored.</p>\
            \ <p>Use <code>accessToken</code> for GitHub repositories only. To authorize\
            \ access to a repository provider such as Bitbucket or CodeCommit, use\
            \ <code>oauthToken</code>.</p> <p>You must specify either <code>accessToken</code>\
            \ or <code>oauthToken</code> when you update an app.</p> <p>Existing Amplify\
            \ apps deployed from a GitHub repository using OAuth continue to work\
            \ with CI/CD. However, we strongly recommend that you migrate these apps\
            \ to use the GitHub App. For more information, see <a href=\"https://docs.aws.amazon.com/amplify/latest/UserGuide/setting-up-GitHub-access.html#migrating-to-github-app-auth\"\
            >Migrating an existing OAuth app to the Amplify GitHub App</a> in the\
            \ <i>Amplify User Guide</i> .</p>"
          format: password
          maxLength: 255
          minLength: 1
          pattern: \(\?s\).\+
          type: string
      type: object
    UpdateBranch_request:
      properties:
        description:
          description: ' The description for the branch. '
          maxLength: 1000
          pattern: \(\?s\).*
          type: string
        framework:
          description: ' The framework for the branch. '
          maxLength: 255
          pattern: \(\?s\).*
          type: string
        stage:
          description: ' Describes the current stage for the branch. '
          enum:
          - PRODUCTION
          - BETA
          - DEVELOPMENT
          - EXPERIMENTAL
          - PULL_REQUEST
          type: string
        enableNotification:
          description: ' Enables notifications for the branch. '
          type: boolean
        enableAutoBuild:
          description: ' Enables auto building for the branch. '
          type: boolean
        environmentVariables:
          additionalProperties:
            $ref: '#/components/schemas/EnvValue'
          description: ' The environment variables for the branch. '
          type: object
        basicAuthCredentials:
          description: ' The basic authorization credentials for the branch. You must
            base64-encode the authorization credentials and provide them in the format
            <code>user:password</code>.'
          format: password
          maxLength: 2000
          pattern: \(\?s\).*
          type: string
        enableBasicAuth:
          description: ' Enables basic authorization for the branch. '
          type: boolean
        enablePerformanceMode:
          description: "<p>Enables performance mode for the branch.</p> <p>Performance\
            \ mode optimizes for faster hosting performance by keeping content cached\
            \ at the edge for a longer interval. When performance mode is enabled,\
            \ hosting configuration or code changes can take up to 10 minutes to roll\
            \ out. </p>"
          type: boolean
        buildSpec:
          description: ' The build specification (build spec) file for an Amplify
            app build. '
          format: password
          maxLength: 25000
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        ttl:
          description: ' The content Time to Live (TTL) for the website in seconds. '
          maxLength: 32
          minLength: 0
          pattern: \d*
          type: string
        displayName:
          description: ' The display name for a branch. This is used as the default
            domain prefix. '
          maxLength: 255
          pattern: \(\?s\).*
          type: string
        enablePullRequestPreview:
          description: ' Enables pull request previews for this branch. '
          type: boolean
        pullRequestEnvironmentName:
          description: ' The Amplify environment name for the pull request. '
          maxLength: 20
          pattern: \(\?s\).*
          type: string
        backendEnvironmentArn:
          description: ' The Amazon Resource Name (ARN) for a backend environment
            that is part of an Amplify app. '
          maxLength: 1000
          minLength: 0
          pattern: \(\?s\).*
          type: string
      type: object
    UpdateDomainAssociation_request:
      properties:
        enableAutoSubDomain:
          description: ' Enables the automated creation of subdomains for branches. '
          type: boolean
        subDomainSettings:
          description: ' Describes the settings for the subdomain. '
          items:
            $ref: '#/components/schemas/SubDomainSetting'
          maxItems: 500
          type: array
        autoSubDomainCreationPatterns:
          description: ' Sets the branch patterns for automatic subdomain creation. '
          items:
            $ref: '#/components/schemas/AutoSubDomainCreationPattern'
          type: array
        autoSubDomainIAMRole:
          description: ' The required AWS Identity and Access Management (IAM) service
            role for the Amazon Resource Name (ARN) for automatically creating subdomains. '
          maxLength: 1000
          pattern: "^$|^arn:aws:iam::\\d{12}:role.+"
          type: string
      type: object
    UpdateWebhook_request:
      properties:
        branchName:
          description: ' The name for a branch that is part of an Amplify app. '
          maxLength: 255
          minLength: 1
          pattern: \(\?s\).\+
          type: string
        description:
          description: ' The description for a webhook. '
          maxLength: 1000
          pattern: \(\?s\).*
          type: string
      type: object
    GenerateAccessLogs_request:
      properties:
        startTime:
          description: ' The time at which the logs should start. The time range specified
            is inclusive of the start time. '
          format: date-time
          type: string
        endTime:
          description: ' The time at which the logs should end. The time range specified
            is inclusive of the end time. '
          format: date-time
          type: string
        domainName:
          description: ' The name of the domain. '
          maxLength: 64
          pattern: "^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])(\\\
            .)?$"
          type: string
      required:
      - domainName
      type: object
    StartJob_request:
      properties:
        jobId:
          description: ' The unique ID for an existing job. This is required if the
            value of <code>jobType</code> is <code>RETRY</code>. '
          maxLength: 255
          pattern: "[0-9]+"
          type: string
        jobType:
          description: " Describes the type for the job. The job type <code>RELEASE</code>\
            \ starts a new job with the latest change from the specified branch. This\
            \ value is available only for apps that are connected to a repository.\
            \ The job type <code>RETRY</code> retries an existing job. If the job\
            \ type value is <code>RETRY</code>, the <code>jobId</code> is also required. "
          enum:
          - RELEASE
          - RETRY
          - MANUAL
          - WEB_HOOK
          maxLength: 10
          type: string
        jobReason:
          description: ' A descriptive reason for starting this job. '
          maxLength: 255
          pattern: \(\?s\).*
          type: string
        commitId:
          description: ' The commit ID from a third-party repository provider for
            the job. '
          maxLength: 255
          pattern: \(\?s\).*
          type: string
        commitMessage:
          description: ' The commit message from a third-party repository provider
            for the job. '
          maxLength: 10000
          pattern: \(\?s\).*
          type: string
        commitTime:
          description: ' The commit date and time for the job. '
          format: date-time
          type: string
      required:
      - jobType
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: ' The tags used to tag the resource. '
          maxProperties: 50
          minProperties: 0
          type: object
      required:
      - tags
      type: object
    StartDeployment_request:
      properties:
        jobId:
          description: " The job ID for this deployment, generated by the create deployment\
            \ request. "
          maxLength: 255
          pattern: "[0-9]+"
          type: string
        sourceUrl:
          description: " The source URL for this deployment, used when calling start\
            \ deployment without create deployment. The source URL can be any HTTP\
            \ GET URL that is publicly accessible and downloads a single .zip file. "
          maxLength: 3000
          pattern: \(\?s\).*
          type: string
      type: object
    CreateBackendEnvironmentResult_backendEnvironment:
      allOf:
      - $ref: '#/components/schemas/BackendEnvironment'
      - description: ' Describes the backend environment for an Amplify app. '
      example:
        backendEnvironmentArn: ""
        createTime: ""
        environmentName: ""
        deploymentArtifacts: ""
        stackName: ""
        updateTime: ""
    CreateBranchResult_branch:
      allOf:
      - $ref: '#/components/schemas/Branch'
      - description: " Describes the branch for an Amplify app, which maps to a third-party\
          \ repository branch. "
      example:
        displayName: ""
        basicAuthCredentials: ""
        description: ""
        backendEnvironmentArn: ""
        customDomains: ""
        branchArn: ""
        enableNotification: ""
        thumbnailUrl: ""
        sourceBranch: ""
        enableAutoBuild: ""
        totalNumberOfJobs: ""
        enablePerformanceMode: ""
        enablePullRequestPreview: ""
        enableBasicAuth: ""
        branchName: ""
        updateTime: ""
        ttl: ""
        tags: ""
        framework: ""
        stage: ""
        createTime: ""
        environmentVariables: ""
        buildSpec: ""
        activeJobId: ""
        associatedResources: ""
        pullRequestEnvironmentName: ""
        destinationBranch: ""
    CreateDomainAssociationResult_domainAssociation:
      allOf:
      - $ref: '#/components/schemas/DomainAssociation'
      - description: " Describes the structure of a domain association, which associates\
          \ a custom domain with an Amplify app. "
      example:
        autoSubDomainCreationPatterns: ""
        certificateVerificationDNSRecord: ""
        enableAutoSubDomain: ""
        statusReason: ""
        domainName: ""
        subDomains: ""
        domainAssociationArn: ""
        domainStatus: ""
        autoSubDomainIAMRole: ""
    CreateWebhookResult_webhook:
      allOf:
      - $ref: '#/components/schemas/Webhook'
      - description: ' Describes a webhook that connects repository events to an Amplify
          app. '
      example:
        webhookArn: ""
        webhookId: ""
        createTime: ""
        branchName: ""
        description: ""
        updateTime: ""
        webhookUrl: ""
    DeleteBranchResult_branch:
      allOf:
      - $ref: '#/components/schemas/Branch'
      - description: " The branch for an Amplify app, which maps to a third-party\
          \ repository branch. "
      example:
        displayName: ""
        basicAuthCredentials: ""
        description: ""
        backendEnvironmentArn: ""
        customDomains: ""
        branchArn: ""
        enableNotification: ""
        thumbnailUrl: ""
        sourceBranch: ""
        enableAutoBuild: ""
        totalNumberOfJobs: ""
        enablePerformanceMode: ""
        enablePullRequestPreview: ""
        enableBasicAuth: ""
        branchName: ""
        updateTime: ""
        ttl: ""
        tags: ""
        framework: ""
        stage: ""
        createTime: ""
        environmentVariables: ""
        buildSpec: ""
        activeJobId: ""
        associatedResources: ""
        pullRequestEnvironmentName: ""
        destinationBranch: ""
    GetWebhookResult_webhook:
      allOf:
      - $ref: '#/components/schemas/Webhook'
      - description: ' Describes the structure of a webhook. '
      example:
        webhookArn: ""
        webhookId: ""
        createTime: ""
        branchName: ""
        description: ""
        updateTime: ""
        webhookUrl: ""
    StartDeploymentResult_jobSummary:
      allOf:
      - $ref: '#/components/schemas/JobSummary'
      - description: ' The summary for the job. '
      example:
        jobId: ""
        commitMessage: ""
        commitTime: ""
        startTime: ""
        jobArn: ""
        commitId: ""
        endTime: ""
        jobType: ""
        status: ""
    UpdateAppResult_app:
      allOf:
      - $ref: '#/components/schemas/App'
      - description: ' Represents the updated Amplify app. '
      example:
        repositoryCloneMethod: ""
        basicAuthCredentials: ""
        productionBranch:
          branchName: ""
          lastDeployTime: ""
          status: ""
          thumbnailUrl: ""
        enableBasicAuth: ""
        description: ""
        updateTime: ""
        enableAutoBranchCreation: ""
        repository: ""
        defaultDomain: ""
        enableBranchAutoBuild: ""
        platform: ""
        tags: ""
        customRules: ""
        autoBranchCreationPatterns: ""
        iamServiceRoleArn: ""
        createTime: ""
        environmentVariables: ""
        appId: ""
        buildSpec: ""
        autoBranchCreationConfig:
          framework: ""
          stage: ""
          enableAutoBuild: ""
          environmentVariables: ""
          basicAuthCredentials: ""
          enablePerformanceMode: ""
          buildSpec: ""
          enablePullRequestPreview: ""
          enableBasicAuth: ""
          pullRequestEnvironmentName: ""
        appArn: ""
        name: ""
        customHeaders: ""
        enableBranchAutoDeletion: ""
    UpdateDomainAssociationResult_domainAssociation:
      allOf:
      - $ref: '#/components/schemas/DomainAssociation'
      - description: " Describes a domain association, which associates a custom domain\
          \ with an Amplify app. "
      example:
        autoSubDomainCreationPatterns: ""
        certificateVerificationDNSRecord: ""
        enableAutoSubDomain: ""
        statusReason: ""
        domainName: ""
        subDomains: ""
        domainAssociationArn: ""
        domainStatus: ""
        autoSubDomainIAMRole: ""
    App_productionBranch:
      allOf:
      - $ref: '#/components/schemas/ProductionBranch'
      - description: ' Describes the information about a production branch of the
          Amplify app. '
      example:
        branchName: ""
        lastDeployTime: ""
        status: ""
        thumbnailUrl: ""
    App_autoBranchCreationConfig:
      allOf:
      - $ref: '#/components/schemas/AutoBranchCreationConfig'
      - description: ' Describes the automated branch creation configuration for the
          Amplify app. '
      example:
        framework: ""
        stage: ""
        enableAutoBuild: ""
        environmentVariables: ""
        basicAuthCredentials: ""
        enablePerformanceMode: ""
        buildSpec: ""
        enablePullRequestPreview: ""
        enableBasicAuth: ""
        pullRequestEnvironmentName: ""
    CreateAppRequest_autoBranchCreationConfig:
      allOf:
      - $ref: '#/components/schemas/AutoBranchCreationConfig'
      - description: ' The automated branch creation configuration for an Amplify
          app. '
      example:
        framework: ""
        stage: ""
        enableAutoBuild: ""
        environmentVariables: ""
        basicAuthCredentials: ""
        enablePerformanceMode: ""
        buildSpec: ""
        enablePullRequestPreview: ""
        enableBasicAuth: ""
        pullRequestEnvironmentName: ""
    Job_summary:
      allOf:
      - $ref: '#/components/schemas/JobSummary'
      - description: ' Describes the summary for an execution job for an Amplify app. '
      example:
        jobId: ""
        commitMessage: ""
        commitTime: ""
        startTime: ""
        jobArn: ""
        commitId: ""
        endTime: ""
        jobType: ""
        status: ""
    SubDomain_subDomainSetting:
      allOf:
      - $ref: '#/components/schemas/SubDomainSetting'
      - description: ' Describes the settings for the subdomain. '
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

